// $ANTLR 3.4 CSharp4.g 2012-09-18 10:15:03

/*
[The BSD License]
Copyright (c) 2012 Christian Wulf
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

    Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
    Neither the name of the author nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. 

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
*/
package com.glority.quality.sca.antlr.cs;

import java.util.LinkedList;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.tree.*;


@SuppressWarnings({"all", "warnings", "unchecked"})
public class CSharp4 extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "ABSTRACT", "AMP", "AS", "ASSIGNMENT", "Asterisks", "Available_identifier", "BACK_SLASH", "BANG", "BASE", "BITWISE_OR", "BOOL", "BREAK", "BYTE", "CARET", "CASE", "CATCH", "CHAR", "CHARACTER_LITERAL", "CHECKED", "CLASS", "CLOSE_BRACE", "CLOSE_BRACKET", "CLOSE_PARENS", "COLON", "COMMA", "CONST", "CONTINUE", "Character", "Combining_character", "Conditional_symbol", "Connecting_character", "DECIMAL", "DECIMAL_DIGIT", "DEFAULT", "DELEGATE", "DELIMITED_COMMENT", "DELIMITED_DOC_COMMENT", "DIV", "DO", "DOT", "DOUBLE", "DOUBLE_BACK_SLASH", "DOUBLE_COLON", "DOUBLE_QUOTE", "Decimal_digit_character", "Decimal_digits", "Decimal_integer_literal", "Delimited_comment_section", "ELSE", "ENUM", "EVENT", "EXPLICIT", "EXTERN", "Exponent_part", "FALSE", "FINALLY", "FIXED", "FLOAT", "FOR", "FOREACH", "File_name", "File_name_character", "File_name_characters", "Formatting_character", "GOTO", "GT", "HEX_DIGIT", "Hex_digits", "Hexadecimal_escape_sequence", "Hexadecimal_integer_literal", "IDENTIFIER", "IF", "IMPLICIT", "IN", "INT", "INTEGER_LITERAL", "INTERFACE", "INTERNAL", "INTERR", "IS", "Identifier_or_keyword", "Identifier_part_character", "Identifier_start_character", "Input_character", "Input_characters", "Integer_type_suffix", "LOCK", "LONG", "LT", "Letter_character", "Line_indicator", "LiteralAccess", "MINUS", "NAMESPACE", "NEW", "NEW_LINE", "NEW_LINE_CHARACTER", "NULL", "Not_number_sign", "Not_slash_or_asterisk", "OBJECT", "OPEN_BRACE", "OPEN_BRACKET", "OPEN_PARENS", "OPERATOR", "OP_ADD_ASSIGNMENT", "OP_AND", "OP_AND_ASSIGNMENT", "OP_COALESCING", "OP_DEC", "OP_DIV_ASSIGNMENT", "OP_EQ", "OP_GE", "OP_INC", "OP_LE", "OP_LEFT_SHIFT", "OP_LEFT_SHIFT_ASSIGNMENT", "OP_MOD_ASSIGNMENT", "OP_MULT_ASSIGNMENT", "OP_NE", "OP_OR", "OP_OR_ASSIGNMENT", "OP_PTR", "OP_SUB_ASSIGNMENT", "OP_XOR_ASSIGNMENT", "OUT", "OVERRIDE", "PARAMS", "PERCENT", "PLUS", "PRIVATE", "PROTECTED", "PUBLIC", "Pp_and_expression", "Pp_conditional", "Pp_declaration", "Pp_diagnostic", "Pp_directive", "Pp_elif_section", "Pp_else_section", "Pp_end_region", "Pp_endif", "Pp_equality_expression", "Pp_expression", "Pp_if_section", "Pp_line", "Pp_message", "Pp_new_line", "Pp_or_expression", "Pp_pragma", "Pp_pragma_text", "Pp_primary_expression", "Pp_region", "Pp_start_region", "Pp_unary_expression", "QUOTE", "Quote_escape_sequence", "READONLY", "REAL_LITERAL", "REF", "RETURN", "Real_type_suffix", "Regular_string_literal", "Regular_string_literal_character", "SBYTE", "SEALED", "SEMICOLON", "SHARP", "SHORT", "SINGLE_LINE_COMMENT", "SINGLE_LINE_DOC_COMMENT", "SIZEOF", "STACKALLOC", "STAR", "STATIC", "STRING", "STRING_LITERAL", "STRUCT", "SWITCH", "Sign", "Simple_escape_sequence", "Single_character", "Single_regular_string_literal_character", "Single_verbatim_string_literal_character", "SkiPped_characters", "SkiPped_section_part", "THIS", "THROW", "TILDE", "TRUE", "TRY", "TYPEOF", "UINT", "ULONG", "UNCHECKED", "UNICODE_CLASS_Cf", "UNICODE_CLASS_Ll", "UNICODE_CLASS_Lm", "UNICODE_CLASS_Lo", "UNICODE_CLASS_Lt", "UNICODE_CLASS_Lu", "UNICODE_CLASS_Mc", "UNICODE_CLASS_Mn", "UNICODE_CLASS_Nd", "UNICODE_CLASS_Nl", "UNICODE_CLASS_Pc", "UNICODE_CLASS_Zs", "UNSAFE", "USHORT", "USING", "Unicode_escape_sequence", "VIRTUAL", "VOID", "VOLATILE", "Verbatim_string_literal", "Verbatim_string_literal_character", "WHILE", "WHITESPACE", "Whitespace_character", "Whitespace_characters"
    };

    public static final int EOF=-1;
    public static final int ABSTRACT=4;
    public static final int AMP=5;
    public static final int AS=6;
    public static final int ASSIGNMENT=7;
    public static final int Asterisks=8;
    public static final int Available_identifier=9;
    public static final int BACK_SLASH=10;
    public static final int BANG=11;
    public static final int BASE=12;
    public static final int BITWISE_OR=13;
    public static final int BOOL=14;
    public static final int BREAK=15;
    public static final int BYTE=16;
    public static final int CARET=17;
    public static final int CASE=18;
    public static final int CATCH=19;
    public static final int CHAR=20;
    public static final int CHARACTER_LITERAL=21;
    public static final int CHECKED=22;
    public static final int CLASS=23;
    public static final int CLOSE_BRACE=24;
    public static final int CLOSE_BRACKET=25;
    public static final int CLOSE_PARENS=26;
    public static final int COLON=27;
    public static final int COMMA=28;
    public static final int CONST=29;
    public static final int CONTINUE=30;
    public static final int Character=31;
    public static final int Combining_character=32;
    public static final int Conditional_symbol=33;
    public static final int Connecting_character=34;
    public static final int DECIMAL=35;
    public static final int DECIMAL_DIGIT=36;
    public static final int DEFAULT=37;
    public static final int DELEGATE=38;
    public static final int DELIMITED_COMMENT=39;
    public static final int DELIMITED_DOC_COMMENT=40;
    public static final int DIV=41;
    public static final int DO=42;
    public static final int DOT=43;
    public static final int DOUBLE=44;
    public static final int DOUBLE_BACK_SLASH=45;
    public static final int DOUBLE_COLON=46;
    public static final int DOUBLE_QUOTE=47;
    public static final int Decimal_digit_character=48;
    public static final int Decimal_digits=49;
    public static final int Decimal_integer_literal=50;
    public static final int Delimited_comment_section=51;
    public static final int ELSE=52;
    public static final int ENUM=53;
    public static final int EVENT=54;
    public static final int EXPLICIT=55;
    public static final int EXTERN=56;
    public static final int Exponent_part=57;
    public static final int FALSE=58;
    public static final int FINALLY=59;
    public static final int FIXED=60;
    public static final int FLOAT=61;
    public static final int FOR=62;
    public static final int FOREACH=63;
    public static final int File_name=64;
    public static final int File_name_character=65;
    public static final int File_name_characters=66;
    public static final int Formatting_character=67;
    public static final int GOTO=68;
    public static final int GT=69;
    public static final int HEX_DIGIT=70;
    public static final int Hex_digits=71;
    public static final int Hexadecimal_escape_sequence=72;
    public static final int Hexadecimal_integer_literal=73;
    public static final int IDENTIFIER=74;
    public static final int IF=75;
    public static final int IMPLICIT=76;
    public static final int IN=77;
    public static final int INT=78;
    public static final int INTEGER_LITERAL=79;
    public static final int INTERFACE=80;
    public static final int INTERNAL=81;
    public static final int INTERR=82;
    public static final int IS=83;
    public static final int Identifier_or_keyword=84;
    public static final int Identifier_part_character=85;
    public static final int Identifier_start_character=86;
    public static final int Input_character=87;
    public static final int Input_characters=88;
    public static final int Integer_type_suffix=89;
    public static final int LOCK=90;
    public static final int LONG=91;
    public static final int LT=92;
    public static final int Letter_character=93;
    public static final int Line_indicator=94;
    public static final int LiteralAccess=95;
    public static final int MINUS=96;
    public static final int NAMESPACE=97;
    public static final int NEW=98;
    public static final int NEW_LINE=99;
    public static final int NEW_LINE_CHARACTER=100;
    public static final int NULL=101;
    public static final int Not_number_sign=102;
    public static final int Not_slash_or_asterisk=103;
    public static final int OBJECT=104;
    public static final int OPEN_BRACE=105;
    public static final int OPEN_BRACKET=106;
    public static final int OPEN_PARENS=107;
    public static final int OPERATOR=108;
    public static final int OP_ADD_ASSIGNMENT=109;
    public static final int OP_AND=110;
    public static final int OP_AND_ASSIGNMENT=111;
    public static final int OP_COALESCING=112;
    public static final int OP_DEC=113;
    public static final int OP_DIV_ASSIGNMENT=114;
    public static final int OP_EQ=115;
    public static final int OP_GE=116;
    public static final int OP_INC=117;
    public static final int OP_LE=118;
    public static final int OP_LEFT_SHIFT=119;
    public static final int OP_LEFT_SHIFT_ASSIGNMENT=120;
    public static final int OP_MOD_ASSIGNMENT=121;
    public static final int OP_MULT_ASSIGNMENT=122;
    public static final int OP_NE=123;
    public static final int OP_OR=124;
    public static final int OP_OR_ASSIGNMENT=125;
    public static final int OP_PTR=126;
    public static final int OP_SUB_ASSIGNMENT=127;
    public static final int OP_XOR_ASSIGNMENT=128;
    public static final int OUT=129;
    public static final int OVERRIDE=130;
    public static final int PARAMS=131;
    public static final int PERCENT=132;
    public static final int PLUS=133;
    public static final int PRIVATE=134;
    public static final int PROTECTED=135;
    public static final int PUBLIC=136;
    public static final int Pp_and_expression=137;
    public static final int Pp_conditional=138;
    public static final int Pp_declaration=139;
    public static final int Pp_diagnostic=140;
    public static final int Pp_directive=141;
    public static final int Pp_elif_section=142;
    public static final int Pp_else_section=143;
    public static final int Pp_end_region=144;
    public static final int Pp_endif=145;
    public static final int Pp_equality_expression=146;
    public static final int Pp_expression=147;
    public static final int Pp_if_section=148;
    public static final int Pp_line=149;
    public static final int Pp_message=150;
    public static final int Pp_new_line=151;
    public static final int Pp_or_expression=152;
    public static final int Pp_pragma=153;
    public static final int Pp_pragma_text=154;
    public static final int Pp_primary_expression=155;
    public static final int Pp_region=156;
    public static final int Pp_start_region=157;
    public static final int Pp_unary_expression=158;
    public static final int QUOTE=159;
    public static final int Quote_escape_sequence=160;
    public static final int READONLY=161;
    public static final int REAL_LITERAL=162;
    public static final int REF=163;
    public static final int RETURN=164;
    public static final int Real_type_suffix=165;
    public static final int Regular_string_literal=166;
    public static final int Regular_string_literal_character=167;
    public static final int SBYTE=168;
    public static final int SEALED=169;
    public static final int SEMICOLON=170;
    public static final int SHARP=171;
    public static final int SHORT=172;
    public static final int SINGLE_LINE_COMMENT=173;
    public static final int SINGLE_LINE_DOC_COMMENT=174;
    public static final int SIZEOF=175;
    public static final int STACKALLOC=176;
    public static final int STAR=177;
    public static final int STATIC=178;
    public static final int STRING=179;
    public static final int STRING_LITERAL=180;
    public static final int STRUCT=181;
    public static final int SWITCH=182;
    public static final int Sign=183;
    public static final int Simple_escape_sequence=184;
    public static final int Single_character=185;
    public static final int Single_regular_string_literal_character=186;
    public static final int Single_verbatim_string_literal_character=187;
    public static final int SkiPped_characters=188;
    public static final int SkiPped_section_part=189;
    public static final int THIS=190;
    public static final int THROW=191;
    public static final int TILDE=192;
    public static final int TRUE=193;
    public static final int TRY=194;
    public static final int TYPEOF=195;
    public static final int UINT=196;
    public static final int ULONG=197;
    public static final int UNCHECKED=198;
    public static final int UNICODE_CLASS_Cf=199;
    public static final int UNICODE_CLASS_Ll=200;
    public static final int UNICODE_CLASS_Lm=201;
    public static final int UNICODE_CLASS_Lo=202;
    public static final int UNICODE_CLASS_Lt=203;
    public static final int UNICODE_CLASS_Lu=204;
    public static final int UNICODE_CLASS_Mc=205;
    public static final int UNICODE_CLASS_Mn=206;
    public static final int UNICODE_CLASS_Nd=207;
    public static final int UNICODE_CLASS_Nl=208;
    public static final int UNICODE_CLASS_Pc=209;
    public static final int UNICODE_CLASS_Zs=210;
    public static final int UNSAFE=211;
    public static final int USHORT=212;
    public static final int USING=213;
    public static final int Unicode_escape_sequence=214;
    public static final int VIRTUAL=215;
    public static final int VOID=216;
    public static final int VOLATILE=217;
    public static final int Verbatim_string_literal=218;
    public static final int Verbatim_string_literal_character=219;
    public static final int WHILE=220;
    public static final int WHITESPACE=221;
    public static final int Whitespace_character=222;
    public static final int Whitespace_characters=223;

    // delegates
    public Parser[] getDelegates() {
        return new Parser[] {};
    }

    // delegators


    public CSharp4(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public CSharp4(TokenStream input, RecognizerSharedState state) {
        super(input, state);
    }

protected TreeAdaptor adaptor = new CommonTreeAdaptor();

public void setTreeAdaptor(TreeAdaptor adaptor) {
    this.adaptor = adaptor;
}
public TreeAdaptor getTreeAdaptor() {
    return adaptor;
}
    public String[] getTokenNames() { return CSharp4.tokenNames; }
    public String getGrammarFileName() { return "CSharp4.g"; }


    // the following methods are only used for debug purposes
    private List<String> errors = new LinkedList<String>();

    @Override
    public void displayRecognitionError(String[] tokenNames, RecognitionException e) {
        super.displayRecognitionError(tokenNames, e);
        String hdr = getErrorHeader(e);
        String msg = getErrorMessage(e, tokenNames);
        errors.add(hdr + " " + msg);
    }

    public List<String> getErrors() {
        return errors;
    }

    private void next(int n) {
      System.err.print("next: ");
      for (int i=1; i<=n; i++) {
        System.err.print(" | " + input.LT(i).getType() + "=" + input.LT(i).getText());
      }
      System.err.println();
    }



    public static class namespace_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "namespace_name"
    // CSharp4.g:68:1: namespace_name : namespace_or_type_name ;
    public final CSharp4.namespace_name_return namespace_name() throws RecognitionException {
        CSharp4.namespace_name_return retval = new CSharp4.namespace_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.namespace_or_type_name_return namespace_or_type_name1 =null;



        try {
            // CSharp4.g:69:2: ( namespace_or_type_name )
            // CSharp4.g:69:4: namespace_or_type_name
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_namespace_or_type_name_in_namespace_name64);
            namespace_or_type_name1=namespace_or_type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_or_type_name1.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "namespace_name"


    public static class type_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_name"
    // CSharp4.g:71:1: type_name : namespace_or_type_name ;
    public final CSharp4.type_name_return type_name() throws RecognitionException {
        CSharp4.type_name_return retval = new CSharp4.type_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.namespace_or_type_name_return namespace_or_type_name2 =null;



        try {
            // CSharp4.g:72:2: ( namespace_or_type_name )
            // CSharp4.g:72:4: namespace_or_type_name
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_namespace_or_type_name_in_type_name75);
            namespace_or_type_name2=namespace_or_type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_or_type_name2.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_name"


    public static class namespace_or_type_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "namespace_or_type_name"
    // CSharp4.g:81:1: namespace_or_type_name : ( IDENTIFIER type_argument_list_opt | qualified_alias_member ) ( DOT IDENTIFIER type_argument_list_opt )* ;
    public final CSharp4.namespace_or_type_name_return namespace_or_type_name() throws RecognitionException {
        CSharp4.namespace_or_type_name_return retval = new CSharp4.namespace_or_type_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER3=null;
        Token DOT6=null;
        Token IDENTIFIER7=null;
        CSharp4.type_argument_list_opt_return type_argument_list_opt4 =null;

        CSharp4.qualified_alias_member_return qualified_alias_member5 =null;

        CSharp4.type_argument_list_opt_return type_argument_list_opt8 =null;


        Object IDENTIFIER3_tree=null;
        Object DOT6_tree=null;
        Object IDENTIFIER7_tree=null;

        try {
            // CSharp4.g:82:3: ( ( IDENTIFIER type_argument_list_opt | qualified_alias_member ) ( DOT IDENTIFIER type_argument_list_opt )* )
            // CSharp4.g:82:5: ( IDENTIFIER type_argument_list_opt | qualified_alias_member ) ( DOT IDENTIFIER type_argument_list_opt )*
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:82:5: ( IDENTIFIER type_argument_list_opt | qualified_alias_member )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==IDENTIFIER) ) {
                int LA1_1 = input.LA(2);

                if ( (LA1_1==DOUBLE_COLON) ) {
                    alt1=2;
                }
                else if ( (LA1_1==EOF||(LA1_1 >= AMP && LA1_1 <= AS)||LA1_1==BITWISE_OR||LA1_1==CARET||(LA1_1 >= CLOSE_BRACE && LA1_1 <= COMMA)||LA1_1==DOT||LA1_1==GT||LA1_1==IDENTIFIER||(LA1_1 >= INTERR && LA1_1 <= IS)||LA1_1==LT||(LA1_1 >= OPEN_BRACE && LA1_1 <= OPERATOR)||LA1_1==OP_AND||LA1_1==OP_COALESCING||(LA1_1 >= OP_EQ && LA1_1 <= OP_GE)||LA1_1==OP_LE||(LA1_1 >= OP_NE && LA1_1 <= OP_OR)||LA1_1==SEMICOLON||LA1_1==STAR||LA1_1==THIS) ) {
                    alt1=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 1, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;

            }
            switch (alt1) {
                case 1 :
                    // CSharp4.g:82:7: IDENTIFIER type_argument_list_opt
                    {
                    IDENTIFIER3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_namespace_or_type_name91); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER3_tree = 
                    (Object)adaptor.create(IDENTIFIER3)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER3_tree);
                    }

                    pushFollow(FOLLOW_type_argument_list_opt_in_namespace_or_type_name93);
                    type_argument_list_opt4=type_argument_list_opt();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_argument_list_opt4.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:83:7: qualified_alias_member
                    {
                    pushFollow(FOLLOW_qualified_alias_member_in_namespace_or_type_name101);
                    qualified_alias_member5=qualified_alias_member();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, qualified_alias_member5.getTree());

                    }
                    break;

            }


            // CSharp4.g:84:7: ( DOT IDENTIFIER type_argument_list_opt )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==DOT) ) {
                    int LA2_2 = input.LA(2);

                    if ( (LA2_2==IDENTIFIER) ) {
                        alt2=1;
                    }


                }


                switch (alt2) {
            	case 1 :
            	    // CSharp4.g:84:8: DOT IDENTIFIER type_argument_list_opt
            	    {
            	    DOT6=(Token)match(input,DOT,FOLLOW_DOT_in_namespace_or_type_name110); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    DOT6_tree = 
            	    (Object)adaptor.create(DOT6)
            	    ;
            	    adaptor.addChild(root_0, DOT6_tree);
            	    }

            	    IDENTIFIER7=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_namespace_or_type_name112); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    IDENTIFIER7_tree = 
            	    (Object)adaptor.create(IDENTIFIER7)
            	    ;
            	    adaptor.addChild(root_0, IDENTIFIER7_tree);
            	    }

            	    pushFollow(FOLLOW_type_argument_list_opt_in_namespace_or_type_name114);
            	    type_argument_list_opt8=type_argument_list_opt();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_argument_list_opt8.getTree());

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "namespace_or_type_name"


    public static class type_argument_list_opt_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_argument_list_opt"
    // CSharp4.g:88:1: type_argument_list_opt : ( ( type_argument_list )=> type_argument_list |);
    public final CSharp4.type_argument_list_opt_return type_argument_list_opt() throws RecognitionException {
        CSharp4.type_argument_list_opt_return retval = new CSharp4.type_argument_list_opt_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.type_argument_list_return type_argument_list9 =null;



        try {
            // CSharp4.g:89:3: ( ( type_argument_list )=> type_argument_list |)
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==LT) ) {
                int LA3_1 = input.LA(2);

                if ( (synpred1_CSharp4()) ) {
                    alt3=1;
                }
                else if ( (true) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA3_0==EOF||(LA3_0 >= AMP && LA3_0 <= ASSIGNMENT)||LA3_0==BITWISE_OR||LA3_0==CARET||(LA3_0 >= CLOSE_BRACE && LA3_0 <= COMMA)||LA3_0==DIV||LA3_0==DOT||LA3_0==GT||LA3_0==IDENTIFIER||(LA3_0 >= INTERR && LA3_0 <= IS)||LA3_0==MINUS||(LA3_0 >= OPEN_BRACE && LA3_0 <= OP_XOR_ASSIGNMENT)||(LA3_0 >= PERCENT && LA3_0 <= PLUS)||LA3_0==SEMICOLON||LA3_0==STAR||LA3_0==THIS) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;

            }
            switch (alt3) {
                case 1 :
                    // CSharp4.g:89:5: ( type_argument_list )=> type_argument_list
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_type_argument_list_in_type_argument_list_opt138);
                    type_argument_list9=type_argument_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_argument_list9.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:91:3: 
                    {
                    root_0 = (Object)adaptor.nil();


                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_argument_list_opt"


    public static class type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type"
    // CSharp4.g:101:1: type : base_type ( ( INTERR )=> INTERR | ( rank_specifier )=> rank_specifier | STAR )* ;
    public final CSharp4.type_return type() throws RecognitionException {
        CSharp4.type_return retval = new CSharp4.type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token INTERR11=null;
        Token STAR13=null;
        CSharp4.base_type_return base_type10 =null;

        CSharp4.rank_specifier_return rank_specifier12 =null;


        Object INTERR11_tree=null;
        Object STAR13_tree=null;

        try {
            // CSharp4.g:102:3: ( base_type ( ( INTERR )=> INTERR | ( rank_specifier )=> rank_specifier | STAR )* )
            // CSharp4.g:102:5: base_type ( ( INTERR )=> INTERR | ( rank_specifier )=> rank_specifier | STAR )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_base_type_in_type160);
            base_type10=base_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, base_type10.getTree());

            // CSharp4.g:103:5: ( ( INTERR )=> INTERR | ( rank_specifier )=> rank_specifier | STAR )*
            loop4:
            do {
                int alt4=4;
                switch ( input.LA(1) ) {
                case OPEN_BRACKET:
                    {
                    int LA4_5 = input.LA(2);

                    if ( (synpred3_CSharp4()) ) {
                        alt4=2;
                    }


                    }
                    break;
                case INTERR:
                    {
                    int LA4_15 = input.LA(2);

                    if ( (synpred2_CSharp4()) ) {
                        alt4=1;
                    }


                    }
                    break;
                case STAR:
                    {
                    alt4=3;
                    }
                    break;

                }

                switch (alt4) {
            	case 1 :
            	    // CSharp4.g:103:7: ( INTERR )=> INTERR
            	    {
            	    INTERR11=(Token)match(input,INTERR,FOLLOW_INTERR_in_type174); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    INTERR11_tree = 
            	    (Object)adaptor.create(INTERR11)
            	    ;
            	    adaptor.addChild(root_0, INTERR11_tree);
            	    }

            	    }
            	    break;
            	case 2 :
            	    // CSharp4.g:104:7: ( rank_specifier )=> rank_specifier
            	    {
            	    pushFollow(FOLLOW_rank_specifier_in_type188);
            	    rank_specifier12=rank_specifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier12.getTree());

            	    }
            	    break;
            	case 3 :
            	    // CSharp4.g:105:7: STAR
            	    {
            	    STAR13=(Token)match(input,STAR,FOLLOW_STAR_in_type196); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    STAR13_tree = 
            	    (Object)adaptor.create(STAR13)
            	    ;
            	    adaptor.addChild(root_0, STAR13_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type"


    public static class base_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "base_type"
    // CSharp4.g:109:1: base_type : ( simple_type | class_type | VOID STAR );
    public final CSharp4.base_type_return base_type() throws RecognitionException {
        CSharp4.base_type_return retval = new CSharp4.base_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token VOID16=null;
        Token STAR17=null;
        CSharp4.simple_type_return simple_type14 =null;

        CSharp4.class_type_return class_type15 =null;


        Object VOID16_tree=null;
        Object STAR17_tree=null;

        try {
            // CSharp4.g:110:3: ( simple_type | class_type | VOID STAR )
            int alt5=3;
            switch ( input.LA(1) ) {
            case BOOL:
            case BYTE:
            case CHAR:
            case DECIMAL:
            case DOUBLE:
            case FLOAT:
            case INT:
            case LONG:
            case SBYTE:
            case SHORT:
            case UINT:
            case ULONG:
            case USHORT:
                {
                alt5=1;
                }
                break;
            case IDENTIFIER:
            case OBJECT:
            case STRING:
                {
                alt5=2;
                }
                break;
            case VOID:
                {
                alt5=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;

            }

            switch (alt5) {
                case 1 :
                    // CSharp4.g:110:5: simple_type
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_simple_type_in_base_type216);
                    simple_type14=simple_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, simple_type14.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:111:5: class_type
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_class_type_in_base_type222);
                    class_type15=class_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_type15.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:112:5: VOID STAR
                    {
                    root_0 = (Object)adaptor.nil();


                    VOID16=(Token)match(input,VOID,FOLLOW_VOID_in_base_type230); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VOID16_tree = 
                    (Object)adaptor.create(VOID16)
                    ;
                    adaptor.addChild(root_0, VOID16_tree);
                    }

                    STAR17=(Token)match(input,STAR,FOLLOW_STAR_in_base_type232); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STAR17_tree = 
                    (Object)adaptor.create(STAR17)
                    ;
                    adaptor.addChild(root_0, STAR17_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "base_type"


    public static class simple_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "simple_type"
    // CSharp4.g:126:1: simple_type : ( numeric_type | BOOL );
    public final CSharp4.simple_type_return simple_type() throws RecognitionException {
        CSharp4.simple_type_return retval = new CSharp4.simple_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token BOOL19=null;
        CSharp4.numeric_type_return numeric_type18 =null;


        Object BOOL19_tree=null;

        try {
            // CSharp4.g:127:2: ( numeric_type | BOOL )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==BYTE||LA6_0==CHAR||LA6_0==DECIMAL||LA6_0==DOUBLE||LA6_0==FLOAT||LA6_0==INT||LA6_0==LONG||LA6_0==SBYTE||LA6_0==SHORT||(LA6_0 >= UINT && LA6_0 <= ULONG)||LA6_0==USHORT) ) {
                alt6=1;
            }
            else if ( (LA6_0==BOOL) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;

            }
            switch (alt6) {
                case 1 :
                    // CSharp4.g:127:4: numeric_type
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_numeric_type_in_simple_type248);
                    numeric_type18=numeric_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, numeric_type18.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:128:4: BOOL
                    {
                    root_0 = (Object)adaptor.nil();


                    BOOL19=(Token)match(input,BOOL,FOLLOW_BOOL_in_simple_type253); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BOOL19_tree = 
                    (Object)adaptor.create(BOOL19)
                    ;
                    adaptor.addChild(root_0, BOOL19_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "simple_type"


    public static class numeric_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "numeric_type"
    // CSharp4.g:130:1: numeric_type : ( integral_type | floating_point_type | DECIMAL );
    public final CSharp4.numeric_type_return numeric_type() throws RecognitionException {
        CSharp4.numeric_type_return retval = new CSharp4.numeric_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token DECIMAL22=null;
        CSharp4.integral_type_return integral_type20 =null;

        CSharp4.floating_point_type_return floating_point_type21 =null;


        Object DECIMAL22_tree=null;

        try {
            // CSharp4.g:131:2: ( integral_type | floating_point_type | DECIMAL )
            int alt7=3;
            switch ( input.LA(1) ) {
            case BYTE:
            case CHAR:
            case INT:
            case LONG:
            case SBYTE:
            case SHORT:
            case UINT:
            case ULONG:
            case USHORT:
                {
                alt7=1;
                }
                break;
            case DOUBLE:
            case FLOAT:
                {
                alt7=2;
                }
                break;
            case DECIMAL:
                {
                alt7=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;

            }

            switch (alt7) {
                case 1 :
                    // CSharp4.g:131:4: integral_type
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_integral_type_in_numeric_type264);
                    integral_type20=integral_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, integral_type20.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:132:4: floating_point_type
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_floating_point_type_in_numeric_type269);
                    floating_point_type21=floating_point_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, floating_point_type21.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:133:4: DECIMAL
                    {
                    root_0 = (Object)adaptor.nil();


                    DECIMAL22=(Token)match(input,DECIMAL,FOLLOW_DECIMAL_in_numeric_type274); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DECIMAL22_tree = 
                    (Object)adaptor.create(DECIMAL22)
                    ;
                    adaptor.addChild(root_0, DECIMAL22_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "numeric_type"


    public static class integral_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "integral_type"
    // CSharp4.g:135:1: integral_type : ( SBYTE | BYTE | SHORT | USHORT | INT | UINT | LONG | ULONG | CHAR );
    public final CSharp4.integral_type_return integral_type() throws RecognitionException {
        CSharp4.integral_type_return retval = new CSharp4.integral_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set23=null;

        Object set23_tree=null;

        try {
            // CSharp4.g:136:2: ( SBYTE | BYTE | SHORT | USHORT | INT | UINT | LONG | ULONG | CHAR )
            // CSharp4.g:
            {
            root_0 = (Object)adaptor.nil();


            set23=(Token)input.LT(1);

            if ( input.LA(1)==BYTE||input.LA(1)==CHAR||input.LA(1)==INT||input.LA(1)==LONG||input.LA(1)==SBYTE||input.LA(1)==SHORT||(input.LA(1) >= UINT && input.LA(1) <= ULONG)||input.LA(1)==USHORT ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set23)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "integral_type"


    public static class floating_point_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "floating_point_type"
    // CSharp4.g:146:1: floating_point_type : ( FLOAT | DOUBLE );
    public final CSharp4.floating_point_type_return floating_point_type() throws RecognitionException {
        CSharp4.floating_point_type_return retval = new CSharp4.floating_point_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set24=null;

        Object set24_tree=null;

        try {
            // CSharp4.g:147:2: ( FLOAT | DOUBLE )
            // CSharp4.g:
            {
            root_0 = (Object)adaptor.nil();


            set24=(Token)input.LT(1);

            if ( input.LA(1)==DOUBLE||input.LA(1)==FLOAT ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set24)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "floating_point_type"


    public static class nullable_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "nullable_type"
    // CSharp4.g:150:1: nullable_type : non_nullable_value_type INTERR ;
    public final CSharp4.nullable_type_return nullable_type() throws RecognitionException {
        CSharp4.nullable_type_return retval = new CSharp4.nullable_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token INTERR26=null;
        CSharp4.non_nullable_value_type_return non_nullable_value_type25 =null;


        Object INTERR26_tree=null;

        try {
            // CSharp4.g:151:2: ( non_nullable_value_type INTERR )
            // CSharp4.g:151:4: non_nullable_value_type INTERR
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_non_nullable_value_type_in_nullable_type352);
            non_nullable_value_type25=non_nullable_value_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, non_nullable_value_type25.getTree());

            INTERR26=(Token)match(input,INTERR,FOLLOW_INTERR_in_nullable_type354); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            INTERR26_tree = 
            (Object)adaptor.create(INTERR26)
            ;
            adaptor.addChild(root_0, INTERR26_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nullable_type"


    public static class non_nullable_value_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "non_nullable_value_type"
    // CSharp4.g:159:1: non_nullable_value_type : base_type ( ( rank_specifier )=> rank_specifier | STAR )* ;
    public final CSharp4.non_nullable_value_type_return non_nullable_value_type() throws RecognitionException {
        CSharp4.non_nullable_value_type_return retval = new CSharp4.non_nullable_value_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token STAR29=null;
        CSharp4.base_type_return base_type27 =null;

        CSharp4.rank_specifier_return rank_specifier28 =null;


        Object STAR29_tree=null;

        try {
            // CSharp4.g:160:2: ( base_type ( ( rank_specifier )=> rank_specifier | STAR )* )
            // CSharp4.g:160:4: base_type ( ( rank_specifier )=> rank_specifier | STAR )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_base_type_in_non_nullable_value_type368);
            base_type27=base_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, base_type27.getTree());

            // CSharp4.g:161:5: ( ( rank_specifier )=> rank_specifier | STAR )*
            loop8:
            do {
                int alt8=3;
                int LA8_0 = input.LA(1);

                if ( (LA8_0==OPEN_BRACKET) && (synpred4_CSharp4())) {
                    alt8=1;
                }
                else if ( (LA8_0==STAR) ) {
                    alt8=2;
                }


                switch (alt8) {
            	case 1 :
            	    // CSharp4.g:161:7: ( rank_specifier )=> rank_specifier
            	    {
            	    pushFollow(FOLLOW_rank_specifier_in_non_nullable_value_type382);
            	    rank_specifier28=rank_specifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier28.getTree());

            	    }
            	    break;
            	case 2 :
            	    // CSharp4.g:162:7: STAR
            	    {
            	    STAR29=(Token)match(input,STAR,FOLLOW_STAR_in_non_nullable_value_type390); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    STAR29_tree = 
            	    (Object)adaptor.create(STAR29)
            	    ;
            	    adaptor.addChild(root_0, STAR29_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "non_nullable_value_type"


    public static class reference_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "reference_type"
    // CSharp4.g:178:1: reference_type : ( simple_type | class_type | VOID STAR ) ( ( STAR | INTERR )* rank_specifier )* ({...}? ( STAR | INTERR )* rank_specifier ) ;
    public final CSharp4.reference_type_return reference_type() throws RecognitionException {
        CSharp4.reference_type_return retval = new CSharp4.reference_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token VOID32=null;
        Token STAR33=null;
        Token set34=null;
        Token set36=null;
        CSharp4.simple_type_return simple_type30 =null;

        CSharp4.class_type_return class_type31 =null;

        CSharp4.rank_specifier_return rank_specifier35 =null;

        CSharp4.rank_specifier_return rank_specifier37 =null;


        Object VOID32_tree=null;
        Object STAR33_tree=null;
        Object set34_tree=null;
        Object set36_tree=null;

        boolean oneOrMore = false;
        try {
            // CSharp4.g:180:3: ( ( simple_type | class_type | VOID STAR ) ( ( STAR | INTERR )* rank_specifier )* ({...}? ( STAR | INTERR )* rank_specifier ) )
            // CSharp4.g:180:5: ( simple_type | class_type | VOID STAR ) ( ( STAR | INTERR )* rank_specifier )* ({...}? ( STAR | INTERR )* rank_specifier )
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:180:5: ( simple_type | class_type | VOID STAR )
            int alt9=3;
            switch ( input.LA(1) ) {
            case BOOL:
            case BYTE:
            case CHAR:
            case DECIMAL:
            case DOUBLE:
            case FLOAT:
            case INT:
            case LONG:
            case SBYTE:
            case SHORT:
            case UINT:
            case ULONG:
            case USHORT:
                {
                alt9=1;
                }
                break;
            case IDENTIFIER:
            case OBJECT:
            case STRING:
                {
                alt9=2;
                }
                break;
            case VOID:
                {
                alt9=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;

            }

            switch (alt9) {
                case 1 :
                    // CSharp4.g:180:7: simple_type
                    {
                    pushFollow(FOLLOW_simple_type_in_reference_type420);
                    simple_type30=simple_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, simple_type30.getTree());

                    if ( state.backtracking==0 ) {oneOrMore=true;}

                    }
                    break;
                case 2 :
                    // CSharp4.g:181:7: class_type
                    {
                    pushFollow(FOLLOW_class_type_in_reference_type430);
                    class_type31=class_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_type31.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:182:7: VOID STAR
                    {
                    VOID32=(Token)match(input,VOID,FOLLOW_VOID_in_reference_type438); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VOID32_tree = 
                    (Object)adaptor.create(VOID32)
                    ;
                    adaptor.addChild(root_0, VOID32_tree);
                    }

                    STAR33=(Token)match(input,STAR,FOLLOW_STAR_in_reference_type440); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STAR33_tree = 
                    (Object)adaptor.create(STAR33)
                    ;
                    adaptor.addChild(root_0, STAR33_tree);
                    }

                    if ( state.backtracking==0 ) {oneOrMore=true;}

                    }
                    break;

            }


            // CSharp4.g:183:5: ( ( STAR | INTERR )* rank_specifier )*
            loop11:
            do {
                int alt11=2;
                alt11 = dfa11.predict(input);
                switch (alt11) {
            	case 1 :
            	    // CSharp4.g:183:6: ( STAR | INTERR )* rank_specifier
            	    {
            	    // CSharp4.g:183:6: ( STAR | INTERR )*
            	    loop10:
            	    do {
            	        int alt10=2;
            	        int LA10_0 = input.LA(1);

            	        if ( (LA10_0==INTERR||LA10_0==STAR) ) {
            	            alt10=1;
            	        }


            	        switch (alt10) {
            	    	case 1 :
            	    	    // CSharp4.g:
            	    	    {
            	    	    set34=(Token)input.LT(1);

            	    	    if ( input.LA(1)==INTERR||input.LA(1)==STAR ) {
            	    	        input.consume();
            	    	        if ( state.backtracking==0 ) adaptor.addChild(root_0, 
            	    	        (Object)adaptor.create(set34)
            	    	        );
            	    	        state.errorRecovery=false;
            	    	        state.failed=false;
            	    	    }
            	    	    else {
            	    	        if (state.backtracking>0) {state.failed=true; return retval;}
            	    	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	    	        throw mse;
            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop10;
            	        }
            	    } while (true);


            	    pushFollow(FOLLOW_rank_specifier_in_reference_type458);
            	    rank_specifier35=rank_specifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier35.getTree());

            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);


            // CSharp4.g:184:5: ({...}? ( STAR | INTERR )* rank_specifier )
            // CSharp4.g:184:6: {...}? ( STAR | INTERR )* rank_specifier
            {
            if ( !((oneOrMore)) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "reference_type", "oneOrMore");
            }

            // CSharp4.g:184:19: ( STAR | INTERR )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==INTERR||LA12_0==STAR) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // CSharp4.g:
            	    {
            	    set36=(Token)input.LT(1);

            	    if ( input.LA(1)==INTERR||input.LA(1)==STAR ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, 
            	        (Object)adaptor.create(set36)
            	        );
            	        state.errorRecovery=false;
            	        state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }


            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);


            pushFollow(FOLLOW_rank_specifier_in_reference_type478);
            rank_specifier37=rank_specifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier37.getTree());

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "reference_type"


    public static class class_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_type"
    // CSharp4.g:187:1: class_type : ( type_name | OBJECT | dynamic_contextual_keyword | STRING );
    public final CSharp4.class_type_return class_type() throws RecognitionException {
        CSharp4.class_type_return retval = new CSharp4.class_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OBJECT39=null;
        Token STRING41=null;
        CSharp4.type_name_return type_name38 =null;

        CSharp4.dynamic_contextual_keyword_return dynamic_contextual_keyword40 =null;


        Object OBJECT39_tree=null;
        Object STRING41_tree=null;

        try {
            // CSharp4.g:188:2: ( type_name | OBJECT | dynamic_contextual_keyword | STRING )
            int alt13=4;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                int LA13_1 = input.LA(2);

                if ( (!(((input.LT(1).getText().equals("dynamic"))))) ) {
                    alt13=1;
                }
                else if ( ((input.LT(1).getText().equals("dynamic"))) ) {
                    alt13=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;

                }
                }
                break;
            case OBJECT:
                {
                alt13=2;
                }
                break;
            case STRING:
                {
                alt13=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;

            }

            switch (alt13) {
                case 1 :
                    // CSharp4.g:188:4: type_name
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_type_name_in_class_type493);
                    type_name38=type_name();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name38.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:189:4: OBJECT
                    {
                    root_0 = (Object)adaptor.nil();


                    OBJECT39=(Token)match(input,OBJECT,FOLLOW_OBJECT_in_class_type498); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OBJECT39_tree = 
                    (Object)adaptor.create(OBJECT39)
                    ;
                    adaptor.addChild(root_0, OBJECT39_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:190:4: dynamic_contextual_keyword
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_dynamic_contextual_keyword_in_class_type503);
                    dynamic_contextual_keyword40=dynamic_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, dynamic_contextual_keyword40.getTree());

                    }
                    break;
                case 4 :
                    // CSharp4.g:191:4: STRING
                    {
                    root_0 = (Object)adaptor.nil();


                    STRING41=(Token)match(input,STRING,FOLLOW_STRING_in_class_type508); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STRING41_tree = 
                    (Object)adaptor.create(STRING41)
                    ;
                    adaptor.addChild(root_0, STRING41_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_type"


    public static class interface_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_type"
    // CSharp4.g:194:1: interface_type : type_name ;
    public final CSharp4.interface_type_return interface_type() throws RecognitionException {
        CSharp4.interface_type_return retval = new CSharp4.interface_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.type_name_return type_name42 =null;



        try {
            // CSharp4.g:195:2: ( type_name )
            // CSharp4.g:195:4: type_name
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_name_in_interface_type521);
            type_name42=type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name42.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_type"


    public static class delegate_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "delegate_type"
    // CSharp4.g:198:1: delegate_type : type_name ;
    public final CSharp4.delegate_type_return delegate_type() throws RecognitionException {
        CSharp4.delegate_type_return retval = new CSharp4.delegate_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.type_name_return type_name43 =null;



        try {
            // CSharp4.g:199:2: ( type_name )
            // CSharp4.g:199:4: type_name
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_name_in_delegate_type534);
            type_name43=type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name43.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "delegate_type"


    public static class type_argument_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_argument_list"
    // CSharp4.g:201:1: type_argument_list : LT type_arguments GT ;
    public final CSharp4.type_argument_list_return type_argument_list() throws RecognitionException {
        CSharp4.type_argument_list_return retval = new CSharp4.type_argument_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token LT44=null;
        Token GT46=null;
        CSharp4.type_arguments_return type_arguments45 =null;


        Object LT44_tree=null;
        Object GT46_tree=null;

        try {
            // CSharp4.g:202:2: ( LT type_arguments GT )
            // CSharp4.g:202:4: LT type_arguments GT
            {
            root_0 = (Object)adaptor.nil();


            LT44=(Token)match(input,LT,FOLLOW_LT_in_type_argument_list545); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LT44_tree = 
            (Object)adaptor.create(LT44)
            ;
            adaptor.addChild(root_0, LT44_tree);
            }

            pushFollow(FOLLOW_type_arguments_in_type_argument_list547);
            type_arguments45=type_arguments();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_arguments45.getTree());

            GT46=(Token)match(input,GT,FOLLOW_GT_in_type_argument_list549); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            GT46_tree = 
            (Object)adaptor.create(GT46)
            ;
            adaptor.addChild(root_0, GT46_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_argument_list"


    public static class type_arguments_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_arguments"
    // CSharp4.g:204:1: type_arguments : type_argument ( COMMA type_argument )* ;
    public final CSharp4.type_arguments_return type_arguments() throws RecognitionException {
        CSharp4.type_arguments_return retval = new CSharp4.type_arguments_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA48=null;
        CSharp4.type_argument_return type_argument47 =null;

        CSharp4.type_argument_return type_argument49 =null;


        Object COMMA48_tree=null;

        try {
            // CSharp4.g:205:2: ( type_argument ( COMMA type_argument )* )
            // CSharp4.g:205:4: type_argument ( COMMA type_argument )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_argument_in_type_arguments560);
            type_argument47=type_argument();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_argument47.getTree());

            // CSharp4.g:205:18: ( COMMA type_argument )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==COMMA) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // CSharp4.g:205:20: COMMA type_argument
            	    {
            	    COMMA48=(Token)match(input,COMMA,FOLLOW_COMMA_in_type_arguments564); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA48_tree = 
            	    (Object)adaptor.create(COMMA48)
            	    ;
            	    adaptor.addChild(root_0, COMMA48_tree);
            	    }

            	    pushFollow(FOLLOW_type_argument_in_type_arguments566);
            	    type_argument49=type_argument();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_argument49.getTree());

            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_arguments"


    public static class type_argument_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_argument"
    // CSharp4.g:207:1: type_argument : type ;
    public final CSharp4.type_argument_return type_argument() throws RecognitionException {
        CSharp4.type_argument_return retval = new CSharp4.type_argument_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.type_return type50 =null;



        try {
            // CSharp4.g:208:2: ( type )
            // CSharp4.g:208:4: type
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_in_type_argument579);
            type50=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type50.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_argument"


    public static class variable_reference_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "variable_reference"
    // CSharp4.g:213:1: variable_reference : expression ;
    public final CSharp4.variable_reference_return variable_reference() throws RecognitionException {
        CSharp4.variable_reference_return retval = new CSharp4.variable_reference_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.expression_return expression51 =null;



        try {
            // CSharp4.g:214:2: ( expression )
            // CSharp4.g:214:4: expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_expression_in_variable_reference594);
            expression51=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression51.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "variable_reference"


    public static class argument_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "argument_list"
    // CSharp4.g:218:1: argument_list : argument ( COMMA argument )* ;
    public final CSharp4.argument_list_return argument_list() throws RecognitionException {
        CSharp4.argument_list_return retval = new CSharp4.argument_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA53=null;
        CSharp4.argument_return argument52 =null;

        CSharp4.argument_return argument54 =null;


        Object COMMA53_tree=null;

        try {
            // CSharp4.g:219:2: ( argument ( COMMA argument )* )
            // CSharp4.g:219:4: argument ( COMMA argument )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_argument_in_argument_list607);
            argument52=argument();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, argument52.getTree());

            // CSharp4.g:219:13: ( COMMA argument )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==COMMA) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // CSharp4.g:219:15: COMMA argument
            	    {
            	    COMMA53=(Token)match(input,COMMA,FOLLOW_COMMA_in_argument_list611); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA53_tree = 
            	    (Object)adaptor.create(COMMA53)
            	    ;
            	    adaptor.addChild(root_0, COMMA53_tree);
            	    }

            	    pushFollow(FOLLOW_argument_in_argument_list613);
            	    argument54=argument();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, argument54.getTree());

            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "argument_list"


    public static class argument_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "argument"
    // CSharp4.g:221:1: argument : ( argument_name )? argument_value ;
    public final CSharp4.argument_return argument() throws RecognitionException {
        CSharp4.argument_return retval = new CSharp4.argument_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.argument_name_return argument_name55 =null;

        CSharp4.argument_value_return argument_value56 =null;



        try {
            // CSharp4.g:222:2: ( ( argument_name )? argument_value )
            // CSharp4.g:222:4: ( argument_name )? argument_value
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:222:4: ( argument_name )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==IDENTIFIER) ) {
                int LA16_1 = input.LA(2);

                if ( (LA16_1==COLON) ) {
                    alt16=1;
                }
            }
            switch (alt16) {
                case 1 :
                    // CSharp4.g:222:4: argument_name
                    {
                    pushFollow(FOLLOW_argument_name_in_argument625);
                    argument_name55=argument_name();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_name55.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_argument_value_in_argument628);
            argument_value56=argument_value();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_value56.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "argument"


    public static class argument_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "argument_name"
    // CSharp4.g:224:1: argument_name : IDENTIFIER COLON ;
    public final CSharp4.argument_name_return argument_name() throws RecognitionException {
        CSharp4.argument_name_return retval = new CSharp4.argument_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER57=null;
        Token COLON58=null;

        Object IDENTIFIER57_tree=null;
        Object COLON58_tree=null;

        try {
            // CSharp4.g:225:2: ( IDENTIFIER COLON )
            // CSharp4.g:225:4: IDENTIFIER COLON
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER57=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_argument_name639); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER57_tree = 
            (Object)adaptor.create(IDENTIFIER57)
            ;
            adaptor.addChild(root_0, IDENTIFIER57_tree);
            }

            COLON58=(Token)match(input,COLON,FOLLOW_COLON_in_argument_name641); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COLON58_tree = 
            (Object)adaptor.create(COLON58)
            ;
            adaptor.addChild(root_0, COLON58_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "argument_name"


    public static class argument_value_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "argument_value"
    // CSharp4.g:227:1: argument_value : ( expression | REF variable_reference | OUT variable_reference );
    public final CSharp4.argument_value_return argument_value() throws RecognitionException {
        CSharp4.argument_value_return retval = new CSharp4.argument_value_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token REF60=null;
        Token OUT62=null;
        CSharp4.expression_return expression59 =null;

        CSharp4.variable_reference_return variable_reference61 =null;

        CSharp4.variable_reference_return variable_reference63 =null;


        Object REF60_tree=null;
        Object OUT62_tree=null;

        try {
            // CSharp4.g:228:2: ( expression | REF variable_reference | OUT variable_reference )
            int alt17=3;
            switch ( input.LA(1) ) {
            case AMP:
            case BANG:
            case BASE:
            case BOOL:
            case BYTE:
            case CHAR:
            case CHARACTER_LITERAL:
            case CHECKED:
            case DECIMAL:
            case DEFAULT:
            case DELEGATE:
            case DOUBLE:
            case FALSE:
            case FLOAT:
            case IDENTIFIER:
            case INT:
            case INTEGER_LITERAL:
            case LONG:
            case MINUS:
            case NEW:
            case NULL:
            case OBJECT:
            case OPEN_PARENS:
            case OP_DEC:
            case OP_INC:
            case PLUS:
            case REAL_LITERAL:
            case SBYTE:
            case SHORT:
            case SIZEOF:
            case STAR:
            case STRING:
            case STRING_LITERAL:
            case THIS:
            case TILDE:
            case TRUE:
            case TYPEOF:
            case UINT:
            case ULONG:
            case UNCHECKED:
            case USHORT:
                {
                alt17=1;
                }
                break;
            case REF:
                {
                alt17=2;
                }
                break;
            case OUT:
                {
                alt17=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;

            }

            switch (alt17) {
                case 1 :
                    // CSharp4.g:228:4: expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_expression_in_argument_value652);
                    expression59=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression59.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:229:4: REF variable_reference
                    {
                    root_0 = (Object)adaptor.nil();


                    REF60=(Token)match(input,REF,FOLLOW_REF_in_argument_value657); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    REF60_tree = 
                    (Object)adaptor.create(REF60)
                    ;
                    adaptor.addChild(root_0, REF60_tree);
                    }

                    pushFollow(FOLLOW_variable_reference_in_argument_value659);
                    variable_reference61=variable_reference();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_reference61.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:230:4: OUT variable_reference
                    {
                    root_0 = (Object)adaptor.nil();


                    OUT62=(Token)match(input,OUT,FOLLOW_OUT_in_argument_value664); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OUT62_tree = 
                    (Object)adaptor.create(OUT62)
                    ;
                    adaptor.addChild(root_0, OUT62_tree);
                    }

                    pushFollow(FOLLOW_variable_reference_in_argument_value666);
                    variable_reference63=variable_reference();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_reference63.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "argument_value"


    public static class primary_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "primary_expression"
    // CSharp4.g:238:1: primary_expression : pe= primary_expression_start ( bracket_expression )* ( ( member_access2 | method_invocation2 | OP_INC | OP_DEC | OP_PTR IDENTIFIER ) ( bracket_expression )* )* ;
    public final CSharp4.primary_expression_return primary_expression() throws RecognitionException {
        CSharp4.primary_expression_return retval = new CSharp4.primary_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OP_INC67=null;
        Token OP_DEC68=null;
        Token OP_PTR69=null;
        Token IDENTIFIER70=null;
        CSharp4.primary_expression_start_return pe =null;

        CSharp4.bracket_expression_return bracket_expression64 =null;

        CSharp4.member_access2_return member_access265 =null;

        CSharp4.method_invocation2_return method_invocation266 =null;

        CSharp4.bracket_expression_return bracket_expression71 =null;


        Object OP_INC67_tree=null;
        Object OP_DEC68_tree=null;
        Object OP_PTR69_tree=null;
        Object IDENTIFIER70_tree=null;

        try {
            // CSharp4.g:239:3: (pe= primary_expression_start ( bracket_expression )* ( ( member_access2 | method_invocation2 | OP_INC | OP_DEC | OP_PTR IDENTIFIER ) ( bracket_expression )* )* )
            // CSharp4.g:239:5: pe= primary_expression_start ( bracket_expression )* ( ( member_access2 | method_invocation2 | OP_INC | OP_DEC | OP_PTR IDENTIFIER ) ( bracket_expression )* )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_primary_expression_start_in_primary_expression682);
            pe=primary_expression_start();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, pe.getTree());

            // CSharp4.g:239:34: ( bracket_expression )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==OPEN_BRACKET) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // CSharp4.g:239:34: bracket_expression
            	    {
            	    pushFollow(FOLLOW_bracket_expression_in_primary_expression685);
            	    bracket_expression64=bracket_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, bracket_expression64.getTree());

            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);


            // CSharp4.g:239:54: ( ( member_access2 | method_invocation2 | OP_INC | OP_DEC | OP_PTR IDENTIFIER ) ( bracket_expression )* )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==DOT||LA21_0==OPEN_PARENS||LA21_0==OP_DEC||LA21_0==OP_INC||LA21_0==OP_PTR) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // CSharp4.g:240:9: ( member_access2 | method_invocation2 | OP_INC | OP_DEC | OP_PTR IDENTIFIER ) ( bracket_expression )*
            	    {
            	    // CSharp4.g:240:9: ( member_access2 | method_invocation2 | OP_INC | OP_DEC | OP_PTR IDENTIFIER )
            	    int alt19=5;
            	    switch ( input.LA(1) ) {
            	    case DOT:
            	        {
            	        alt19=1;
            	        }
            	        break;
            	    case OPEN_PARENS:
            	        {
            	        alt19=2;
            	        }
            	        break;
            	    case OP_INC:
            	        {
            	        alt19=3;
            	        }
            	        break;
            	    case OP_DEC:
            	        {
            	        alt19=4;
            	        }
            	        break;
            	    case OP_PTR:
            	        {
            	        alt19=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 19, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt19) {
            	        case 1 :
            	            // CSharp4.g:240:11: member_access2
            	            {
            	            pushFollow(FOLLOW_member_access2_in_primary_expression700);
            	            member_access265=member_access2();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, member_access265.getTree());

            	            }
            	            break;
            	        case 2 :
            	            // CSharp4.g:241:9: method_invocation2
            	            {
            	            pushFollow(FOLLOW_method_invocation2_in_primary_expression710);
            	            method_invocation266=method_invocation2();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_invocation266.getTree());

            	            }
            	            break;
            	        case 3 :
            	            // CSharp4.g:242:9: OP_INC
            	            {
            	            OP_INC67=(Token)match(input,OP_INC,FOLLOW_OP_INC_in_primary_expression720); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            OP_INC67_tree = 
            	            (Object)adaptor.create(OP_INC67)
            	            ;
            	            adaptor.addChild(root_0, OP_INC67_tree);
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // CSharp4.g:243:9: OP_DEC
            	            {
            	            OP_DEC68=(Token)match(input,OP_DEC,FOLLOW_OP_DEC_in_primary_expression730); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            OP_DEC68_tree = 
            	            (Object)adaptor.create(OP_DEC68)
            	            ;
            	            adaptor.addChild(root_0, OP_DEC68_tree);
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // CSharp4.g:244:9: OP_PTR IDENTIFIER
            	            {
            	            OP_PTR69=(Token)match(input,OP_PTR,FOLLOW_OP_PTR_in_primary_expression740); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            OP_PTR69_tree = 
            	            (Object)adaptor.create(OP_PTR69)
            	            ;
            	            adaptor.addChild(root_0, OP_PTR69_tree);
            	            }

            	            IDENTIFIER70=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_primary_expression742); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            IDENTIFIER70_tree = 
            	            (Object)adaptor.create(IDENTIFIER70)
            	            ;
            	            adaptor.addChild(root_0, IDENTIFIER70_tree);
            	            }

            	            }
            	            break;

            	    }


            	    // CSharp4.g:246:7: ( bracket_expression )*
            	    loop20:
            	    do {
            	        int alt20=2;
            	        int LA20_0 = input.LA(1);

            	        if ( (LA20_0==OPEN_BRACKET) ) {
            	            alt20=1;
            	        }


            	        switch (alt20) {
            	    	case 1 :
            	    	    // CSharp4.g:246:7: bracket_expression
            	    	    {
            	    	    pushFollow(FOLLOW_bracket_expression_in_primary_expression759);
            	    	    bracket_expression71=bracket_expression();

            	    	    state._fsp--;
            	    	    if (state.failed) return retval;
            	    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, bracket_expression71.getTree());

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop20;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "primary_expression"


    public static class primary_expression_start_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "primary_expression_start"
    // CSharp4.g:249:1: primary_expression_start : ( literal | simple_name | parenthesized_expression | predefined_type | qualified_alias_member | this_access | base_access | NEW ( type ( object_creation_expression2 | object_or_collection_initializer | OPEN_BRACKET expression_list CLOSE_BRACKET ( rank_specifiers )? ( array_initializer )? | rank_specifiers array_initializer ) | anonymous_object_initializer | rank_specifier array_initializer ) | typeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression | sizeof_expression );
    public final CSharp4.primary_expression_start_return primary_expression_start() throws RecognitionException {
        CSharp4.primary_expression_start_return retval = new CSharp4.primary_expression_start_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW79=null;
        Token OPEN_BRACKET83=null;
        Token CLOSE_BRACKET85=null;
        CSharp4.literal_return literal72 =null;

        CSharp4.simple_name_return simple_name73 =null;

        CSharp4.parenthesized_expression_return parenthesized_expression74 =null;

        CSharp4.predefined_type_return predefined_type75 =null;

        CSharp4.qualified_alias_member_return qualified_alias_member76 =null;

        CSharp4.this_access_return this_access77 =null;

        CSharp4.base_access_return base_access78 =null;

        CSharp4.type_return type80 =null;

        CSharp4.object_creation_expression2_return object_creation_expression281 =null;

        CSharp4.object_or_collection_initializer_return object_or_collection_initializer82 =null;

        CSharp4.expression_list_return expression_list84 =null;

        CSharp4.rank_specifiers_return rank_specifiers86 =null;

        CSharp4.array_initializer_return array_initializer87 =null;

        CSharp4.rank_specifiers_return rank_specifiers88 =null;

        CSharp4.array_initializer_return array_initializer89 =null;

        CSharp4.anonymous_object_initializer_return anonymous_object_initializer90 =null;

        CSharp4.rank_specifier_return rank_specifier91 =null;

        CSharp4.array_initializer_return array_initializer92 =null;

        CSharp4.typeof_expression_return typeof_expression93 =null;

        CSharp4.checked_expression_return checked_expression94 =null;

        CSharp4.unchecked_expression_return unchecked_expression95 =null;

        CSharp4.default_value_expression_return default_value_expression96 =null;

        CSharp4.anonymous_method_expression_return anonymous_method_expression97 =null;

        CSharp4.sizeof_expression_return sizeof_expression98 =null;


        Object NEW79_tree=null;
        Object OPEN_BRACKET83_tree=null;
        Object CLOSE_BRACKET85_tree=null;

        try {
            // CSharp4.g:250:3: ( literal | simple_name | parenthesized_expression | predefined_type | qualified_alias_member | this_access | base_access | NEW ( type ( object_creation_expression2 | object_or_collection_initializer | OPEN_BRACKET expression_list CLOSE_BRACKET ( rank_specifiers )? ( array_initializer )? | rank_specifiers array_initializer ) | anonymous_object_initializer | rank_specifier array_initializer ) | typeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression | sizeof_expression )
            int alt26=14;
            switch ( input.LA(1) ) {
            case CHARACTER_LITERAL:
            case FALSE:
            case INTEGER_LITERAL:
            case NULL:
            case REAL_LITERAL:
            case STRING_LITERAL:
            case TRUE:
                {
                alt26=1;
                }
                break;
            case IDENTIFIER:
                {
                int LA26_2 = input.LA(2);

                if ( (LA26_2==DOUBLE_COLON) ) {
                    alt26=5;
                }
                else if ( (LA26_2==EOF||(LA26_2 >= AMP && LA26_2 <= ASSIGNMENT)||LA26_2==BITWISE_OR||LA26_2==CARET||(LA26_2 >= CLOSE_BRACE && LA26_2 <= COMMA)||LA26_2==DIV||LA26_2==DOT||LA26_2==GT||LA26_2==IDENTIFIER||(LA26_2 >= INTERR && LA26_2 <= IS)||LA26_2==LT||LA26_2==MINUS||(LA26_2 >= OPEN_BRACKET && LA26_2 <= OPEN_PARENS)||(LA26_2 >= OP_ADD_ASSIGNMENT && LA26_2 <= OP_XOR_ASSIGNMENT)||(LA26_2 >= PERCENT && LA26_2 <= PLUS)||LA26_2==SEMICOLON||LA26_2==STAR) ) {
                    alt26=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 2, input);

                    throw nvae;

                }
                }
                break;
            case OPEN_PARENS:
                {
                alt26=3;
                }
                break;
            case BOOL:
            case BYTE:
            case CHAR:
            case DECIMAL:
            case DOUBLE:
            case FLOAT:
            case INT:
            case LONG:
            case OBJECT:
            case SBYTE:
            case SHORT:
            case STRING:
            case UINT:
            case ULONG:
            case USHORT:
                {
                alt26=4;
                }
                break;
            case THIS:
                {
                alt26=6;
                }
                break;
            case BASE:
                {
                alt26=7;
                }
                break;
            case NEW:
                {
                alt26=8;
                }
                break;
            case TYPEOF:
                {
                alt26=9;
                }
                break;
            case CHECKED:
                {
                alt26=10;
                }
                break;
            case UNCHECKED:
                {
                alt26=11;
                }
                break;
            case DEFAULT:
                {
                alt26=12;
                }
                break;
            case DELEGATE:
                {
                alt26=13;
                }
                break;
            case SIZEOF:
                {
                alt26=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;

            }

            switch (alt26) {
                case 1 :
                    // CSharp4.g:250:5: literal
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_literal_in_primary_expression_start777);
                    literal72=literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, literal72.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:251:5: simple_name
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_simple_name_in_primary_expression_start783);
                    simple_name73=simple_name();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, simple_name73.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:252:5: parenthesized_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_parenthesized_expression_in_primary_expression_start789);
                    parenthesized_expression74=parenthesized_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, parenthesized_expression74.getTree());

                    }
                    break;
                case 4 :
                    // CSharp4.g:253:5: predefined_type
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_predefined_type_in_primary_expression_start795);
                    predefined_type75=predefined_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type75.getTree());

                    }
                    break;
                case 5 :
                    // CSharp4.g:254:5: qualified_alias_member
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_qualified_alias_member_in_primary_expression_start802);
                    qualified_alias_member76=qualified_alias_member();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, qualified_alias_member76.getTree());

                    }
                    break;
                case 6 :
                    // CSharp4.g:255:5: this_access
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_this_access_in_primary_expression_start810);
                    this_access77=this_access();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, this_access77.getTree());

                    }
                    break;
                case 7 :
                    // CSharp4.g:256:5: base_access
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_base_access_in_primary_expression_start816);
                    base_access78=base_access();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, base_access78.getTree());

                    }
                    break;
                case 8 :
                    // CSharp4.g:257:5: NEW ( type ( object_creation_expression2 | object_or_collection_initializer | OPEN_BRACKET expression_list CLOSE_BRACKET ( rank_specifiers )? ( array_initializer )? | rank_specifiers array_initializer ) | anonymous_object_initializer | rank_specifier array_initializer )
                    {
                    root_0 = (Object)adaptor.nil();


                    NEW79=(Token)match(input,NEW,FOLLOW_NEW_in_primary_expression_start822); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW79_tree = 
                    (Object)adaptor.create(NEW79)
                    ;
                    adaptor.addChild(root_0, NEW79_tree);
                    }

                    // CSharp4.g:257:9: ( type ( object_creation_expression2 | object_or_collection_initializer | OPEN_BRACKET expression_list CLOSE_BRACKET ( rank_specifiers )? ( array_initializer )? | rank_specifiers array_initializer ) | anonymous_object_initializer | rank_specifier array_initializer )
                    int alt25=3;
                    switch ( input.LA(1) ) {
                    case BOOL:
                    case BYTE:
                    case CHAR:
                    case DECIMAL:
                    case DOUBLE:
                    case FLOAT:
                    case IDENTIFIER:
                    case INT:
                    case LONG:
                    case OBJECT:
                    case SBYTE:
                    case SHORT:
                    case STRING:
                    case UINT:
                    case ULONG:
                    case USHORT:
                    case VOID:
                        {
                        alt25=1;
                        }
                        break;
                    case OPEN_BRACE:
                        {
                        alt25=2;
                        }
                        break;
                    case OPEN_BRACKET:
                        {
                        alt25=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 25, 0, input);

                        throw nvae;

                    }

                    switch (alt25) {
                        case 1 :
                            // CSharp4.g:257:11: type ( object_creation_expression2 | object_or_collection_initializer | OPEN_BRACKET expression_list CLOSE_BRACKET ( rank_specifiers )? ( array_initializer )? | rank_specifiers array_initializer )
                            {
                            pushFollow(FOLLOW_type_in_primary_expression_start826);
                            type80=type();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type80.getTree());

                            // CSharp4.g:257:16: ( object_creation_expression2 | object_or_collection_initializer | OPEN_BRACKET expression_list CLOSE_BRACKET ( rank_specifiers )? ( array_initializer )? | rank_specifiers array_initializer )
                            int alt24=4;
                            switch ( input.LA(1) ) {
                            case OPEN_PARENS:
                                {
                                alt24=1;
                                }
                                break;
                            case OPEN_BRACE:
                                {
                                alt24=2;
                                }
                                break;
                            case OPEN_BRACKET:
                                {
                                int LA24_3 = input.LA(2);

                                if ( (LA24_3==AMP||(LA24_3 >= BANG && LA24_3 <= BASE)||LA24_3==BOOL||LA24_3==BYTE||(LA24_3 >= CHAR && LA24_3 <= CHECKED)||LA24_3==DECIMAL||(LA24_3 >= DEFAULT && LA24_3 <= DELEGATE)||LA24_3==DOUBLE||LA24_3==FALSE||LA24_3==FLOAT||LA24_3==IDENTIFIER||(LA24_3 >= INT && LA24_3 <= INTEGER_LITERAL)||LA24_3==LONG||LA24_3==MINUS||LA24_3==NEW||LA24_3==NULL||LA24_3==OBJECT||LA24_3==OPEN_PARENS||LA24_3==OP_DEC||LA24_3==OP_INC||LA24_3==PLUS||LA24_3==REAL_LITERAL||LA24_3==SBYTE||LA24_3==SHORT||LA24_3==SIZEOF||LA24_3==STAR||(LA24_3 >= STRING && LA24_3 <= STRING_LITERAL)||LA24_3==THIS||(LA24_3 >= TILDE && LA24_3 <= TRUE)||(LA24_3 >= TYPEOF && LA24_3 <= UNCHECKED)||LA24_3==USHORT) ) {
                                    alt24=3;
                                }
                                else if ( (LA24_3==CLOSE_BRACKET||LA24_3==COMMA) ) {
                                    alt24=4;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return retval;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 24, 3, input);

                                    throw nvae;

                                }
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 24, 0, input);

                                throw nvae;

                            }

                            switch (alt24) {
                                case 1 :
                                    // CSharp4.g:257:18: object_creation_expression2
                                    {
                                    pushFollow(FOLLOW_object_creation_expression2_in_primary_expression_start830);
                                    object_creation_expression281=object_creation_expression2();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, object_creation_expression281.getTree());

                                    }
                                    break;
                                case 2 :
                                    // CSharp4.g:258:18: object_or_collection_initializer
                                    {
                                    pushFollow(FOLLOW_object_or_collection_initializer_in_primary_expression_start849);
                                    object_or_collection_initializer82=object_or_collection_initializer();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer82.getTree());

                                    }
                                    break;
                                case 3 :
                                    // CSharp4.g:259:18: OPEN_BRACKET expression_list CLOSE_BRACKET ( rank_specifiers )? ( array_initializer )?
                                    {
                                    OPEN_BRACKET83=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_primary_expression_start868); if (state.failed) return retval;
                                    if ( state.backtracking==0 ) {
                                    OPEN_BRACKET83_tree = 
                                    (Object)adaptor.create(OPEN_BRACKET83)
                                    ;
                                    adaptor.addChild(root_0, OPEN_BRACKET83_tree);
                                    }

                                    pushFollow(FOLLOW_expression_list_in_primary_expression_start870);
                                    expression_list84=expression_list();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list84.getTree());

                                    CLOSE_BRACKET85=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_primary_expression_start872); if (state.failed) return retval;
                                    if ( state.backtracking==0 ) {
                                    CLOSE_BRACKET85_tree = 
                                    (Object)adaptor.create(CLOSE_BRACKET85)
                                    ;
                                    adaptor.addChild(root_0, CLOSE_BRACKET85_tree);
                                    }

                                    // CSharp4.g:259:61: ( rank_specifiers )?
                                    int alt22=2;
                                    int LA22_0 = input.LA(1);

                                    if ( (LA22_0==OPEN_BRACKET) ) {
                                        int LA22_1 = input.LA(2);

                                        if ( (LA22_1==CLOSE_BRACKET||LA22_1==COMMA) ) {
                                            alt22=1;
                                        }
                                    }
                                    switch (alt22) {
                                        case 1 :
                                            // CSharp4.g:259:61: rank_specifiers
                                            {
                                            pushFollow(FOLLOW_rank_specifiers_in_primary_expression_start874);
                                            rank_specifiers86=rank_specifiers();

                                            state._fsp--;
                                            if (state.failed) return retval;
                                            if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifiers86.getTree());

                                            }
                                            break;

                                    }


                                    // CSharp4.g:259:78: ( array_initializer )?
                                    int alt23=2;
                                    int LA23_0 = input.LA(1);

                                    if ( (LA23_0==OPEN_BRACE) ) {
                                        alt23=1;
                                    }
                                    switch (alt23) {
                                        case 1 :
                                            // CSharp4.g:259:78: array_initializer
                                            {
                                            pushFollow(FOLLOW_array_initializer_in_primary_expression_start877);
                                            array_initializer87=array_initializer();

                                            state._fsp--;
                                            if (state.failed) return retval;
                                            if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer87.getTree());

                                            }
                                            break;

                                    }


                                    }
                                    break;
                                case 4 :
                                    // CSharp4.g:260:18: rank_specifiers array_initializer
                                    {
                                    pushFollow(FOLLOW_rank_specifiers_in_primary_expression_start897);
                                    rank_specifiers88=rank_specifiers();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifiers88.getTree());

                                    pushFollow(FOLLOW_array_initializer_in_primary_expression_start899);
                                    array_initializer89=array_initializer();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer89.getTree());

                                    }
                                    break;

                            }


                            }
                            break;
                        case 2 :
                            // CSharp4.g:262:11: anonymous_object_initializer
                            {
                            pushFollow(FOLLOW_anonymous_object_initializer_in_primary_expression_start928);
                            anonymous_object_initializer90=anonymous_object_initializer();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_object_initializer90.getTree());

                            }
                            break;
                        case 3 :
                            // CSharp4.g:263:11: rank_specifier array_initializer
                            {
                            pushFollow(FOLLOW_rank_specifier_in_primary_expression_start940);
                            rank_specifier91=rank_specifier();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier91.getTree());

                            pushFollow(FOLLOW_array_initializer_in_primary_expression_start942);
                            array_initializer92=array_initializer();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer92.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 9 :
                    // CSharp4.g:265:5: typeof_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_typeof_expression_in_primary_expression_start958);
                    typeof_expression93=typeof_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeof_expression93.getTree());

                    }
                    break;
                case 10 :
                    // CSharp4.g:266:5: checked_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_checked_expression_in_primary_expression_start964);
                    checked_expression94=checked_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, checked_expression94.getTree());

                    }
                    break;
                case 11 :
                    // CSharp4.g:267:5: unchecked_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_unchecked_expression_in_primary_expression_start970);
                    unchecked_expression95=unchecked_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unchecked_expression95.getTree());

                    }
                    break;
                case 12 :
                    // CSharp4.g:268:5: default_value_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_default_value_expression_in_primary_expression_start976);
                    default_value_expression96=default_value_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, default_value_expression96.getTree());

                    }
                    break;
                case 13 :
                    // CSharp4.g:269:5: anonymous_method_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_anonymous_method_expression_in_primary_expression_start982);
                    anonymous_method_expression97=anonymous_method_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_method_expression97.getTree());

                    }
                    break;
                case 14 :
                    // CSharp4.g:270:5: sizeof_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_sizeof_expression_in_primary_expression_start988);
                    sizeof_expression98=sizeof_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, sizeof_expression98.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "primary_expression_start"


    public static class bracket_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "bracket_expression"
    // CSharp4.g:278:1: bracket_expression : OPEN_BRACKET expression_list CLOSE_BRACKET ;
    public final CSharp4.bracket_expression_return bracket_expression() throws RecognitionException {
        CSharp4.bracket_expression_return retval = new CSharp4.bracket_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACKET99=null;
        Token CLOSE_BRACKET101=null;
        CSharp4.expression_list_return expression_list100 =null;


        Object OPEN_BRACKET99_tree=null;
        Object CLOSE_BRACKET101_tree=null;

        try {
            // CSharp4.g:279:3: ( OPEN_BRACKET expression_list CLOSE_BRACKET )
            // CSharp4.g:279:5: OPEN_BRACKET expression_list CLOSE_BRACKET
            {
            root_0 = (Object)adaptor.nil();


            OPEN_BRACKET99=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_bracket_expression1002); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACKET99_tree = 
            (Object)adaptor.create(OPEN_BRACKET99)
            ;
            adaptor.addChild(root_0, OPEN_BRACKET99_tree);
            }

            pushFollow(FOLLOW_expression_list_in_bracket_expression1004);
            expression_list100=expression_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list100.getTree());

            CLOSE_BRACKET101=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_bracket_expression1006); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACKET101_tree = 
            (Object)adaptor.create(CLOSE_BRACKET101)
            ;
            adaptor.addChild(root_0, CLOSE_BRACKET101_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "bracket_expression"


    public static class simple_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "simple_name"
    // CSharp4.g:354:1: simple_name : IDENTIFIER type_argument_list_opt ;
    public final CSharp4.simple_name_return simple_name() throws RecognitionException {
        CSharp4.simple_name_return retval = new CSharp4.simple_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER102=null;
        CSharp4.type_argument_list_opt_return type_argument_list_opt103 =null;


        Object IDENTIFIER102_tree=null;

        try {
            // CSharp4.g:355:2: ( IDENTIFIER type_argument_list_opt )
            // CSharp4.g:355:4: IDENTIFIER type_argument_list_opt
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER102=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_simple_name1024); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER102_tree = 
            (Object)adaptor.create(IDENTIFIER102)
            ;
            adaptor.addChild(root_0, IDENTIFIER102_tree);
            }

            pushFollow(FOLLOW_type_argument_list_opt_in_simple_name1026);
            type_argument_list_opt103=type_argument_list_opt();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_argument_list_opt103.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "simple_name"


    public static class parenthesized_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "parenthesized_expression"
    // CSharp4.g:358:1: parenthesized_expression : OPEN_PARENS expression CLOSE_PARENS ;
    public final CSharp4.parenthesized_expression_return parenthesized_expression() throws RecognitionException {
        CSharp4.parenthesized_expression_return retval = new CSharp4.parenthesized_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_PARENS104=null;
        Token CLOSE_PARENS106=null;
        CSharp4.expression_return expression105 =null;


        Object OPEN_PARENS104_tree=null;
        Object CLOSE_PARENS106_tree=null;

        try {
            // CSharp4.g:359:2: ( OPEN_PARENS expression CLOSE_PARENS )
            // CSharp4.g:359:4: OPEN_PARENS expression CLOSE_PARENS
            {
            root_0 = (Object)adaptor.nil();


            OPEN_PARENS104=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_parenthesized_expression1039); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS104_tree = 
            (Object)adaptor.create(OPEN_PARENS104)
            ;
            adaptor.addChild(root_0, OPEN_PARENS104_tree);
            }

            pushFollow(FOLLOW_expression_in_parenthesized_expression1041);
            expression105=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression105.getTree());

            CLOSE_PARENS106=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_parenthesized_expression1043); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS106_tree = 
            (Object)adaptor.create(CLOSE_PARENS106)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS106_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "parenthesized_expression"


    public static class member_access_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "member_access"
    // CSharp4.g:369:1: member_access : primary_expression ;
    public final CSharp4.member_access_return member_access() throws RecognitionException {
        CSharp4.member_access_return retval = new CSharp4.member_access_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.primary_expression_return primary_expression107 =null;



        try {
            // CSharp4.g:370:3: ( primary_expression )
            // CSharp4.g:370:5: primary_expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_primary_expression_in_member_access1059);
            primary_expression107=primary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression107.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "member_access"


    public static class predefined_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "predefined_type"
    // CSharp4.g:372:1: predefined_type : ( BOOL | BYTE | CHAR | DECIMAL | DOUBLE | FLOAT | INT | LONG | OBJECT | SBYTE | SHORT | STRING | UINT | ULONG | USHORT );
    public final CSharp4.predefined_type_return predefined_type() throws RecognitionException {
        CSharp4.predefined_type_return retval = new CSharp4.predefined_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set108=null;

        Object set108_tree=null;

        try {
            // CSharp4.g:373:2: ( BOOL | BYTE | CHAR | DECIMAL | DOUBLE | FLOAT | INT | LONG | OBJECT | SBYTE | SHORT | STRING | UINT | ULONG | USHORT )
            // CSharp4.g:
            {
            root_0 = (Object)adaptor.nil();


            set108=(Token)input.LT(1);

            if ( input.LA(1)==BOOL||input.LA(1)==BYTE||input.LA(1)==CHAR||input.LA(1)==DECIMAL||input.LA(1)==DOUBLE||input.LA(1)==FLOAT||input.LA(1)==INT||input.LA(1)==LONG||input.LA(1)==OBJECT||input.LA(1)==SBYTE||input.LA(1)==SHORT||input.LA(1)==STRING||(input.LA(1) >= UINT && input.LA(1) <= ULONG)||input.LA(1)==USHORT ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set108)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "predefined_type"


    public static class expression_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "expression_list"
    // CSharp4.g:400:1: expression_list : expression ( COMMA expression )* ;
    public final CSharp4.expression_list_return expression_list() throws RecognitionException {
        CSharp4.expression_list_return retval = new CSharp4.expression_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA110=null;
        CSharp4.expression_return expression109 =null;

        CSharp4.expression_return expression111 =null;


        Object COMMA110_tree=null;

        try {
            // CSharp4.g:401:2: ( expression ( COMMA expression )* )
            // CSharp4.g:401:4: expression ( COMMA expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_expression_in_expression_list1158);
            expression109=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression109.getTree());

            // CSharp4.g:401:15: ( COMMA expression )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==COMMA) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // CSharp4.g:401:17: COMMA expression
            	    {
            	    COMMA110=(Token)match(input,COMMA,FOLLOW_COMMA_in_expression_list1162); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA110_tree = 
            	    (Object)adaptor.create(COMMA110)
            	    ;
            	    adaptor.addChild(root_0, COMMA110_tree);
            	    }

            	    pushFollow(FOLLOW_expression_in_expression_list1164);
            	    expression111=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression111.getTree());

            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "expression_list"


    public static class this_access_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "this_access"
    // CSharp4.g:403:1: this_access : THIS ;
    public final CSharp4.this_access_return this_access() throws RecognitionException {
        CSharp4.this_access_return retval = new CSharp4.this_access_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token THIS112=null;

        Object THIS112_tree=null;

        try {
            // CSharp4.g:404:2: ( THIS )
            // CSharp4.g:404:4: THIS
            {
            root_0 = (Object)adaptor.nil();


            THIS112=(Token)match(input,THIS,FOLLOW_THIS_in_this_access1177); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            THIS112_tree = 
            (Object)adaptor.create(THIS112)
            ;
            adaptor.addChild(root_0, THIS112_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "this_access"


    public static class base_access_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "base_access"
    // CSharp4.g:407:1: base_access : ( BASE DOT IDENTIFIER type_argument_list_opt | BASE OPEN_BRACKET expression_list CLOSE_BRACKET );
    public final CSharp4.base_access_return base_access() throws RecognitionException {
        CSharp4.base_access_return retval = new CSharp4.base_access_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token BASE113=null;
        Token DOT114=null;
        Token IDENTIFIER115=null;
        Token BASE117=null;
        Token OPEN_BRACKET118=null;
        Token CLOSE_BRACKET120=null;
        CSharp4.type_argument_list_opt_return type_argument_list_opt116 =null;

        CSharp4.expression_list_return expression_list119 =null;


        Object BASE113_tree=null;
        Object DOT114_tree=null;
        Object IDENTIFIER115_tree=null;
        Object BASE117_tree=null;
        Object OPEN_BRACKET118_tree=null;
        Object CLOSE_BRACKET120_tree=null;

        try {
            // CSharp4.g:408:2: ( BASE DOT IDENTIFIER type_argument_list_opt | BASE OPEN_BRACKET expression_list CLOSE_BRACKET )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==BASE) ) {
                int LA28_1 = input.LA(2);

                if ( (LA28_1==DOT) ) {
                    alt28=1;
                }
                else if ( (LA28_1==OPEN_BRACKET) ) {
                    alt28=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;

            }
            switch (alt28) {
                case 1 :
                    // CSharp4.g:408:4: BASE DOT IDENTIFIER type_argument_list_opt
                    {
                    root_0 = (Object)adaptor.nil();


                    BASE113=(Token)match(input,BASE,FOLLOW_BASE_in_base_access1189); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BASE113_tree = 
                    (Object)adaptor.create(BASE113)
                    ;
                    adaptor.addChild(root_0, BASE113_tree);
                    }

                    DOT114=(Token)match(input,DOT,FOLLOW_DOT_in_base_access1191); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DOT114_tree = 
                    (Object)adaptor.create(DOT114)
                    ;
                    adaptor.addChild(root_0, DOT114_tree);
                    }

                    IDENTIFIER115=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_base_access1193); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER115_tree = 
                    (Object)adaptor.create(IDENTIFIER115)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER115_tree);
                    }

                    pushFollow(FOLLOW_type_argument_list_opt_in_base_access1195);
                    type_argument_list_opt116=type_argument_list_opt();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_argument_list_opt116.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:409:4: BASE OPEN_BRACKET expression_list CLOSE_BRACKET
                    {
                    root_0 = (Object)adaptor.nil();


                    BASE117=(Token)match(input,BASE,FOLLOW_BASE_in_base_access1200); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BASE117_tree = 
                    (Object)adaptor.create(BASE117)
                    ;
                    adaptor.addChild(root_0, BASE117_tree);
                    }

                    OPEN_BRACKET118=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_base_access1202); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACKET118_tree = 
                    (Object)adaptor.create(OPEN_BRACKET118)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACKET118_tree);
                    }

                    pushFollow(FOLLOW_expression_list_in_base_access1204);
                    expression_list119=expression_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list119.getTree());

                    CLOSE_BRACKET120=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_base_access1206); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACKET120_tree = 
                    (Object)adaptor.create(CLOSE_BRACKET120)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACKET120_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "base_access"


    public static class object_creation_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "object_creation_expression"
    // CSharp4.g:426:1: object_creation_expression : NEW type ( OPEN_PARENS ( argument_list )? CLOSE_PARENS ( object_or_collection_initializer )? | object_or_collection_initializer ) ;
    public final CSharp4.object_creation_expression_return object_creation_expression() throws RecognitionException {
        CSharp4.object_creation_expression_return retval = new CSharp4.object_creation_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW121=null;
        Token OPEN_PARENS123=null;
        Token CLOSE_PARENS125=null;
        CSharp4.type_return type122 =null;

        CSharp4.argument_list_return argument_list124 =null;

        CSharp4.object_or_collection_initializer_return object_or_collection_initializer126 =null;

        CSharp4.object_or_collection_initializer_return object_or_collection_initializer127 =null;


        Object NEW121_tree=null;
        Object OPEN_PARENS123_tree=null;
        Object CLOSE_PARENS125_tree=null;

        try {
            // CSharp4.g:427:3: ( NEW type ( OPEN_PARENS ( argument_list )? CLOSE_PARENS ( object_or_collection_initializer )? | object_or_collection_initializer ) )
            // CSharp4.g:427:5: NEW type ( OPEN_PARENS ( argument_list )? CLOSE_PARENS ( object_or_collection_initializer )? | object_or_collection_initializer )
            {
            root_0 = (Object)adaptor.nil();


            NEW121=(Token)match(input,NEW,FOLLOW_NEW_in_object_creation_expression1224); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            NEW121_tree = 
            (Object)adaptor.create(NEW121)
            ;
            adaptor.addChild(root_0, NEW121_tree);
            }

            pushFollow(FOLLOW_type_in_object_creation_expression1226);
            type122=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type122.getTree());

            // CSharp4.g:427:14: ( OPEN_PARENS ( argument_list )? CLOSE_PARENS ( object_or_collection_initializer )? | object_or_collection_initializer )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==OPEN_PARENS) ) {
                alt31=1;
            }
            else if ( (LA31_0==OPEN_BRACE) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;

            }
            switch (alt31) {
                case 1 :
                    // CSharp4.g:427:16: OPEN_PARENS ( argument_list )? CLOSE_PARENS ( object_or_collection_initializer )?
                    {
                    OPEN_PARENS123=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_object_creation_expression1230); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS123_tree = 
                    (Object)adaptor.create(OPEN_PARENS123)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS123_tree);
                    }

                    // CSharp4.g:427:28: ( argument_list )?
                    int alt29=2;
                    int LA29_0 = input.LA(1);

                    if ( (LA29_0==AMP||(LA29_0 >= BANG && LA29_0 <= BASE)||LA29_0==BOOL||LA29_0==BYTE||(LA29_0 >= CHAR && LA29_0 <= CHECKED)||LA29_0==DECIMAL||(LA29_0 >= DEFAULT && LA29_0 <= DELEGATE)||LA29_0==DOUBLE||LA29_0==FALSE||LA29_0==FLOAT||LA29_0==IDENTIFIER||(LA29_0 >= INT && LA29_0 <= INTEGER_LITERAL)||LA29_0==LONG||LA29_0==MINUS||LA29_0==NEW||LA29_0==NULL||LA29_0==OBJECT||LA29_0==OPEN_PARENS||LA29_0==OP_DEC||LA29_0==OP_INC||LA29_0==OUT||LA29_0==PLUS||(LA29_0 >= REAL_LITERAL && LA29_0 <= REF)||LA29_0==SBYTE||LA29_0==SHORT||LA29_0==SIZEOF||LA29_0==STAR||(LA29_0 >= STRING && LA29_0 <= STRING_LITERAL)||LA29_0==THIS||(LA29_0 >= TILDE && LA29_0 <= TRUE)||(LA29_0 >= TYPEOF && LA29_0 <= UNCHECKED)||LA29_0==USHORT) ) {
                        alt29=1;
                    }
                    switch (alt29) {
                        case 1 :
                            // CSharp4.g:427:28: argument_list
                            {
                            pushFollow(FOLLOW_argument_list_in_object_creation_expression1232);
                            argument_list124=argument_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list124.getTree());

                            }
                            break;

                    }


                    CLOSE_PARENS125=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_object_creation_expression1235); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS125_tree = 
                    (Object)adaptor.create(CLOSE_PARENS125)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS125_tree);
                    }

                    // CSharp4.g:427:56: ( object_or_collection_initializer )?
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==OPEN_BRACE) ) {
                        alt30=1;
                    }
                    switch (alt30) {
                        case 1 :
                            // CSharp4.g:427:56: object_or_collection_initializer
                            {
                            pushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression1237);
                            object_or_collection_initializer126=object_or_collection_initializer();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer126.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // CSharp4.g:428:16: object_or_collection_initializer
                    {
                    pushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression1255);
                    object_or_collection_initializer127=object_or_collection_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer127.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "object_creation_expression"


    public static class object_or_collection_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "object_or_collection_initializer"
    // CSharp4.g:432:1: object_or_collection_initializer : ( object_initializer | collection_initializer );
    public final CSharp4.object_or_collection_initializer_return object_or_collection_initializer() throws RecognitionException {
        CSharp4.object_or_collection_initializer_return retval = new CSharp4.object_or_collection_initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.object_initializer_return object_initializer128 =null;

        CSharp4.collection_initializer_return collection_initializer129 =null;



        try {
            // CSharp4.g:433:2: ( object_initializer | collection_initializer )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==OPEN_BRACE) ) {
                switch ( input.LA(2) ) {
                case CLOSE_BRACE:
                    {
                    alt32=1;
                    }
                    break;
                case IDENTIFIER:
                    {
                    int LA32_3 = input.LA(3);

                    if ( (LA32_3==ASSIGNMENT) ) {
                        int LA32_5 = input.LA(4);

                        if ( (LA32_5==GT) ) {
                            alt32=2;
                        }
                        else if ( (LA32_5==AMP||(LA32_5 >= BANG && LA32_5 <= BASE)||LA32_5==BOOL||LA32_5==BYTE||(LA32_5 >= CHAR && LA32_5 <= CHECKED)||LA32_5==DECIMAL||(LA32_5 >= DEFAULT && LA32_5 <= DELEGATE)||LA32_5==DOUBLE||LA32_5==FALSE||LA32_5==FLOAT||LA32_5==IDENTIFIER||(LA32_5 >= INT && LA32_5 <= INTEGER_LITERAL)||LA32_5==LONG||LA32_5==MINUS||LA32_5==NEW||LA32_5==NULL||(LA32_5 >= OBJECT && LA32_5 <= OPEN_BRACE)||LA32_5==OPEN_PARENS||LA32_5==OP_DEC||LA32_5==OP_INC||LA32_5==PLUS||LA32_5==REAL_LITERAL||LA32_5==SBYTE||LA32_5==SHORT||LA32_5==SIZEOF||LA32_5==STAR||(LA32_5 >= STRING && LA32_5 <= STRING_LITERAL)||LA32_5==THIS||(LA32_5 >= TILDE && LA32_5 <= TRUE)||(LA32_5 >= TYPEOF && LA32_5 <= UNCHECKED)||LA32_5==USHORT) ) {
                            alt32=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 5, input);

                            throw nvae;

                        }
                    }
                    else if ( ((LA32_3 >= AMP && LA32_3 <= AS)||(LA32_3 >= BITWISE_OR && LA32_3 <= BOOL)||(LA32_3 >= BYTE && LA32_3 <= CARET)||LA32_3==CHAR||LA32_3==CLOSE_BRACE||LA32_3==COMMA||LA32_3==DECIMAL||LA32_3==DIV||(LA32_3 >= DOT && LA32_3 <= DOUBLE)||LA32_3==DOUBLE_COLON||LA32_3==FLOAT||LA32_3==GT||LA32_3==IDENTIFIER||LA32_3==INT||(LA32_3 >= INTERR && LA32_3 <= IS)||(LA32_3 >= LONG && LA32_3 <= LT)||LA32_3==MINUS||LA32_3==OBJECT||(LA32_3 >= OPEN_BRACKET && LA32_3 <= OPEN_PARENS)||LA32_3==OP_AND||(LA32_3 >= OP_COALESCING && LA32_3 <= OP_DEC)||(LA32_3 >= OP_EQ && LA32_3 <= OP_LEFT_SHIFT)||(LA32_3 >= OP_NE && LA32_3 <= OP_OR)||LA32_3==OP_PTR||(LA32_3 >= PERCENT && LA32_3 <= PLUS)||LA32_3==SBYTE||LA32_3==SHORT||LA32_3==STAR||LA32_3==STRING||(LA32_3 >= UINT && LA32_3 <= ULONG)||LA32_3==USHORT||LA32_3==VOID) ) {
                        alt32=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 32, 3, input);

                        throw nvae;

                    }
                    }
                    break;
                case AMP:
                case BANG:
                case BASE:
                case BOOL:
                case BYTE:
                case CHAR:
                case CHARACTER_LITERAL:
                case CHECKED:
                case DECIMAL:
                case DEFAULT:
                case DELEGATE:
                case DOUBLE:
                case FALSE:
                case FLOAT:
                case INT:
                case INTEGER_LITERAL:
                case LONG:
                case MINUS:
                case NEW:
                case NULL:
                case OBJECT:
                case OPEN_BRACE:
                case OPEN_PARENS:
                case OP_DEC:
                case OP_INC:
                case PLUS:
                case REAL_LITERAL:
                case SBYTE:
                case SHORT:
                case SIZEOF:
                case STAR:
                case STRING:
                case STRING_LITERAL:
                case THIS:
                case TILDE:
                case TRUE:
                case TYPEOF:
                case UINT:
                case ULONG:
                case UNCHECKED:
                case USHORT:
                    {
                    alt32=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 32, 1, input);

                    throw nvae;

                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;

            }
            switch (alt32) {
                case 1 :
                    // CSharp4.g:433:4: object_initializer
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_object_initializer_in_object_or_collection_initializer1284);
                    object_initializer128=object_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, object_initializer128.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:434:4: collection_initializer
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_collection_initializer_in_object_or_collection_initializer1289);
                    collection_initializer129=collection_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, collection_initializer129.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "object_or_collection_initializer"


    public static class object_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "object_initializer"
    // CSharp4.g:443:1: object_initializer : ( OPEN_BRACE CLOSE_BRACE | OPEN_BRACE member_initializer_list ( COMMA )? CLOSE_BRACE );
    public final CSharp4.object_initializer_return object_initializer() throws RecognitionException {
        CSharp4.object_initializer_return retval = new CSharp4.object_initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE130=null;
        Token CLOSE_BRACE131=null;
        Token OPEN_BRACE132=null;
        Token COMMA134=null;
        Token CLOSE_BRACE135=null;
        CSharp4.member_initializer_list_return member_initializer_list133 =null;


        Object OPEN_BRACE130_tree=null;
        Object CLOSE_BRACE131_tree=null;
        Object OPEN_BRACE132_tree=null;
        Object COMMA134_tree=null;
        Object CLOSE_BRACE135_tree=null;

        try {
            // CSharp4.g:444:3: ( OPEN_BRACE CLOSE_BRACE | OPEN_BRACE member_initializer_list ( COMMA )? CLOSE_BRACE )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==OPEN_BRACE) ) {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==CLOSE_BRACE) ) {
                    alt34=1;
                }
                else if ( (LA34_1==IDENTIFIER) ) {
                    alt34=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;

            }
            switch (alt34) {
                case 1 :
                    // CSharp4.g:444:5: OPEN_BRACE CLOSE_BRACE
                    {
                    root_0 = (Object)adaptor.nil();


                    OPEN_BRACE130=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_object_initializer1305); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACE130_tree = 
                    (Object)adaptor.create(OPEN_BRACE130)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACE130_tree);
                    }

                    CLOSE_BRACE131=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_object_initializer1307); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACE131_tree = 
                    (Object)adaptor.create(CLOSE_BRACE131)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACE131_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:445:5: OPEN_BRACE member_initializer_list ( COMMA )? CLOSE_BRACE
                    {
                    root_0 = (Object)adaptor.nil();


                    OPEN_BRACE132=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_object_initializer1313); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACE132_tree = 
                    (Object)adaptor.create(OPEN_BRACE132)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACE132_tree);
                    }

                    pushFollow(FOLLOW_member_initializer_list_in_object_initializer1315);
                    member_initializer_list133=member_initializer_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer_list133.getTree());

                    // CSharp4.g:445:40: ( COMMA )?
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==COMMA) ) {
                        alt33=1;
                    }
                    switch (alt33) {
                        case 1 :
                            // CSharp4.g:445:40: COMMA
                            {
                            COMMA134=(Token)match(input,COMMA,FOLLOW_COMMA_in_object_initializer1317); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA134_tree = 
                            (Object)adaptor.create(COMMA134)
                            ;
                            adaptor.addChild(root_0, COMMA134_tree);
                            }

                            }
                            break;

                    }


                    CLOSE_BRACE135=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_object_initializer1320); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACE135_tree = 
                    (Object)adaptor.create(CLOSE_BRACE135)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACE135_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "object_initializer"


    public static class member_initializer_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "member_initializer_list"
    // CSharp4.g:447:1: member_initializer_list : member_initializer ( COMMA member_initializer )* ;
    public final CSharp4.member_initializer_list_return member_initializer_list() throws RecognitionException {
        CSharp4.member_initializer_list_return retval = new CSharp4.member_initializer_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA137=null;
        CSharp4.member_initializer_return member_initializer136 =null;

        CSharp4.member_initializer_return member_initializer138 =null;


        Object COMMA137_tree=null;

        try {
            // CSharp4.g:448:2: ( member_initializer ( COMMA member_initializer )* )
            // CSharp4.g:448:4: member_initializer ( COMMA member_initializer )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_member_initializer_in_member_initializer_list1332);
            member_initializer136=member_initializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer136.getTree());

            // CSharp4.g:448:23: ( COMMA member_initializer )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==COMMA) ) {
                    int LA35_1 = input.LA(2);

                    if ( (LA35_1==IDENTIFIER) ) {
                        alt35=1;
                    }


                }


                switch (alt35) {
            	case 1 :
            	    // CSharp4.g:448:25: COMMA member_initializer
            	    {
            	    COMMA137=(Token)match(input,COMMA,FOLLOW_COMMA_in_member_initializer_list1336); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA137_tree = 
            	    (Object)adaptor.create(COMMA137)
            	    ;
            	    adaptor.addChild(root_0, COMMA137_tree);
            	    }

            	    pushFollow(FOLLOW_member_initializer_in_member_initializer_list1338);
            	    member_initializer138=member_initializer();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer138.getTree());

            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "member_initializer_list"


    public static class member_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "member_initializer"
    // CSharp4.g:450:1: member_initializer : IDENTIFIER ASSIGNMENT initializer_value ;
    public final CSharp4.member_initializer_return member_initializer() throws RecognitionException {
        CSharp4.member_initializer_return retval = new CSharp4.member_initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER139=null;
        Token ASSIGNMENT140=null;
        CSharp4.initializer_value_return initializer_value141 =null;


        Object IDENTIFIER139_tree=null;
        Object ASSIGNMENT140_tree=null;

        try {
            // CSharp4.g:451:2: ( IDENTIFIER ASSIGNMENT initializer_value )
            // CSharp4.g:451:4: IDENTIFIER ASSIGNMENT initializer_value
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER139=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_member_initializer1351); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER139_tree = 
            (Object)adaptor.create(IDENTIFIER139)
            ;
            adaptor.addChild(root_0, IDENTIFIER139_tree);
            }

            ASSIGNMENT140=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_member_initializer1353); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGNMENT140_tree = 
            (Object)adaptor.create(ASSIGNMENT140)
            ;
            adaptor.addChild(root_0, ASSIGNMENT140_tree);
            }

            pushFollow(FOLLOW_initializer_value_in_member_initializer1355);
            initializer_value141=initializer_value();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, initializer_value141.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "member_initializer"


    public static class initializer_value_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "initializer_value"
    // CSharp4.g:453:1: initializer_value : ( expression | object_or_collection_initializer );
    public final CSharp4.initializer_value_return initializer_value() throws RecognitionException {
        CSharp4.initializer_value_return retval = new CSharp4.initializer_value_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.expression_return expression142 =null;

        CSharp4.object_or_collection_initializer_return object_or_collection_initializer143 =null;



        try {
            // CSharp4.g:454:2: ( expression | object_or_collection_initializer )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==AMP||(LA36_0 >= BANG && LA36_0 <= BASE)||LA36_0==BOOL||LA36_0==BYTE||(LA36_0 >= CHAR && LA36_0 <= CHECKED)||LA36_0==DECIMAL||(LA36_0 >= DEFAULT && LA36_0 <= DELEGATE)||LA36_0==DOUBLE||LA36_0==FALSE||LA36_0==FLOAT||LA36_0==IDENTIFIER||(LA36_0 >= INT && LA36_0 <= INTEGER_LITERAL)||LA36_0==LONG||LA36_0==MINUS||LA36_0==NEW||LA36_0==NULL||LA36_0==OBJECT||LA36_0==OPEN_PARENS||LA36_0==OP_DEC||LA36_0==OP_INC||LA36_0==PLUS||LA36_0==REAL_LITERAL||LA36_0==SBYTE||LA36_0==SHORT||LA36_0==SIZEOF||LA36_0==STAR||(LA36_0 >= STRING && LA36_0 <= STRING_LITERAL)||LA36_0==THIS||(LA36_0 >= TILDE && LA36_0 <= TRUE)||(LA36_0 >= TYPEOF && LA36_0 <= UNCHECKED)||LA36_0==USHORT) ) {
                alt36=1;
            }
            else if ( (LA36_0==OPEN_BRACE) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;

            }
            switch (alt36) {
                case 1 :
                    // CSharp4.g:454:4: expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_expression_in_initializer_value1366);
                    expression142=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression142.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:455:4: object_or_collection_initializer
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_object_or_collection_initializer_in_initializer_value1371);
                    object_or_collection_initializer143=object_or_collection_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer143.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "initializer_value"


    public static class collection_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "collection_initializer"
    // CSharp4.g:464:1: collection_initializer : OPEN_BRACE element_initializer_list ( COMMA )? CLOSE_BRACE ;
    public final CSharp4.collection_initializer_return collection_initializer() throws RecognitionException {
        CSharp4.collection_initializer_return retval = new CSharp4.collection_initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE144=null;
        Token COMMA146=null;
        Token CLOSE_BRACE147=null;
        CSharp4.element_initializer_list_return element_initializer_list145 =null;


        Object OPEN_BRACE144_tree=null;
        Object COMMA146_tree=null;
        Object CLOSE_BRACE147_tree=null;

        try {
            // CSharp4.g:465:3: ( OPEN_BRACE element_initializer_list ( COMMA )? CLOSE_BRACE )
            // CSharp4.g:465:5: OPEN_BRACE element_initializer_list ( COMMA )? CLOSE_BRACE
            {
            root_0 = (Object)adaptor.nil();


            OPEN_BRACE144=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_collection_initializer1387); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACE144_tree = 
            (Object)adaptor.create(OPEN_BRACE144)
            ;
            adaptor.addChild(root_0, OPEN_BRACE144_tree);
            }

            pushFollow(FOLLOW_element_initializer_list_in_collection_initializer1389);
            element_initializer_list145=element_initializer_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, element_initializer_list145.getTree());

            // CSharp4.g:465:41: ( COMMA )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==COMMA) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // CSharp4.g:465:41: COMMA
                    {
                    COMMA146=(Token)match(input,COMMA,FOLLOW_COMMA_in_collection_initializer1391); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA146_tree = 
                    (Object)adaptor.create(COMMA146)
                    ;
                    adaptor.addChild(root_0, COMMA146_tree);
                    }

                    }
                    break;

            }


            CLOSE_BRACE147=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_collection_initializer1394); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACE147_tree = 
            (Object)adaptor.create(CLOSE_BRACE147)
            ;
            adaptor.addChild(root_0, CLOSE_BRACE147_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "collection_initializer"


    public static class element_initializer_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "element_initializer_list"
    // CSharp4.g:467:1: element_initializer_list : element_initializer ( COMMA element_initializer )* ;
    public final CSharp4.element_initializer_list_return element_initializer_list() throws RecognitionException {
        CSharp4.element_initializer_list_return retval = new CSharp4.element_initializer_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA149=null;
        CSharp4.element_initializer_return element_initializer148 =null;

        CSharp4.element_initializer_return element_initializer150 =null;


        Object COMMA149_tree=null;

        try {
            // CSharp4.g:468:2: ( element_initializer ( COMMA element_initializer )* )
            // CSharp4.g:468:4: element_initializer ( COMMA element_initializer )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_element_initializer_in_element_initializer_list1406);
            element_initializer148=element_initializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, element_initializer148.getTree());

            // CSharp4.g:468:24: ( COMMA element_initializer )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==COMMA) ) {
                    int LA38_1 = input.LA(2);

                    if ( (LA38_1==AMP||(LA38_1 >= BANG && LA38_1 <= BASE)||LA38_1==BOOL||LA38_1==BYTE||(LA38_1 >= CHAR && LA38_1 <= CHECKED)||LA38_1==DECIMAL||(LA38_1 >= DEFAULT && LA38_1 <= DELEGATE)||LA38_1==DOUBLE||LA38_1==FALSE||LA38_1==FLOAT||LA38_1==IDENTIFIER||(LA38_1 >= INT && LA38_1 <= INTEGER_LITERAL)||LA38_1==LONG||LA38_1==MINUS||LA38_1==NEW||LA38_1==NULL||(LA38_1 >= OBJECT && LA38_1 <= OPEN_BRACE)||LA38_1==OPEN_PARENS||LA38_1==OP_DEC||LA38_1==OP_INC||LA38_1==PLUS||LA38_1==REAL_LITERAL||LA38_1==SBYTE||LA38_1==SHORT||LA38_1==SIZEOF||LA38_1==STAR||(LA38_1 >= STRING && LA38_1 <= STRING_LITERAL)||LA38_1==THIS||(LA38_1 >= TILDE && LA38_1 <= TRUE)||(LA38_1 >= TYPEOF && LA38_1 <= UNCHECKED)||LA38_1==USHORT) ) {
                        alt38=1;
                    }


                }


                switch (alt38) {
            	case 1 :
            	    // CSharp4.g:468:26: COMMA element_initializer
            	    {
            	    COMMA149=(Token)match(input,COMMA,FOLLOW_COMMA_in_element_initializer_list1410); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA149_tree = 
            	    (Object)adaptor.create(COMMA149)
            	    ;
            	    adaptor.addChild(root_0, COMMA149_tree);
            	    }

            	    pushFollow(FOLLOW_element_initializer_in_element_initializer_list1412);
            	    element_initializer150=element_initializer();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, element_initializer150.getTree());

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "element_initializer_list"


    public static class element_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "element_initializer"
    // CSharp4.g:470:1: element_initializer : ( non_assignment_expression | OPEN_BRACE expression_list CLOSE_BRACE );
    public final CSharp4.element_initializer_return element_initializer() throws RecognitionException {
        CSharp4.element_initializer_return retval = new CSharp4.element_initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE152=null;
        Token CLOSE_BRACE154=null;
        CSharp4.non_assignment_expression_return non_assignment_expression151 =null;

        CSharp4.expression_list_return expression_list153 =null;


        Object OPEN_BRACE152_tree=null;
        Object CLOSE_BRACE154_tree=null;

        try {
            // CSharp4.g:471:2: ( non_assignment_expression | OPEN_BRACE expression_list CLOSE_BRACE )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==AMP||(LA39_0 >= BANG && LA39_0 <= BASE)||LA39_0==BOOL||LA39_0==BYTE||(LA39_0 >= CHAR && LA39_0 <= CHECKED)||LA39_0==DECIMAL||(LA39_0 >= DEFAULT && LA39_0 <= DELEGATE)||LA39_0==DOUBLE||LA39_0==FALSE||LA39_0==FLOAT||LA39_0==IDENTIFIER||(LA39_0 >= INT && LA39_0 <= INTEGER_LITERAL)||LA39_0==LONG||LA39_0==MINUS||LA39_0==NEW||LA39_0==NULL||LA39_0==OBJECT||LA39_0==OPEN_PARENS||LA39_0==OP_DEC||LA39_0==OP_INC||LA39_0==PLUS||LA39_0==REAL_LITERAL||LA39_0==SBYTE||LA39_0==SHORT||LA39_0==SIZEOF||LA39_0==STAR||(LA39_0 >= STRING && LA39_0 <= STRING_LITERAL)||LA39_0==THIS||(LA39_0 >= TILDE && LA39_0 <= TRUE)||(LA39_0 >= TYPEOF && LA39_0 <= UNCHECKED)||LA39_0==USHORT) ) {
                alt39=1;
            }
            else if ( (LA39_0==OPEN_BRACE) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;

            }
            switch (alt39) {
                case 1 :
                    // CSharp4.g:471:4: non_assignment_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_non_assignment_expression_in_element_initializer1425);
                    non_assignment_expression151=non_assignment_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, non_assignment_expression151.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:472:4: OPEN_BRACE expression_list CLOSE_BRACE
                    {
                    root_0 = (Object)adaptor.nil();


                    OPEN_BRACE152=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_element_initializer1430); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACE152_tree = 
                    (Object)adaptor.create(OPEN_BRACE152)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACE152_tree);
                    }

                    pushFollow(FOLLOW_expression_list_in_element_initializer1432);
                    expression_list153=expression_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list153.getTree());

                    CLOSE_BRACE154=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_element_initializer1434); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACE154_tree = 
                    (Object)adaptor.create(CLOSE_BRACE154)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACE154_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "element_initializer"


    public static class array_creation_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "array_creation_expression"
    // CSharp4.g:481:1: array_creation_expression : NEW ( ( array_type OPEN_BRACKET )=> array_type array_initializer | non_array_type OPEN_BRACKET expression_list CLOSE_BRACKET ( rank_specifiers )? ( array_initializer )? | rank_specifier array_initializer ) ;
    public final CSharp4.array_creation_expression_return array_creation_expression() throws RecognitionException {
        CSharp4.array_creation_expression_return retval = new CSharp4.array_creation_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW155=null;
        Token OPEN_BRACKET159=null;
        Token CLOSE_BRACKET161=null;
        CSharp4.array_type_return array_type156 =null;

        CSharp4.array_initializer_return array_initializer157 =null;

        CSharp4.non_array_type_return non_array_type158 =null;

        CSharp4.expression_list_return expression_list160 =null;

        CSharp4.rank_specifiers_return rank_specifiers162 =null;

        CSharp4.array_initializer_return array_initializer163 =null;

        CSharp4.rank_specifier_return rank_specifier164 =null;

        CSharp4.array_initializer_return array_initializer165 =null;


        Object NEW155_tree=null;
        Object OPEN_BRACKET159_tree=null;
        Object CLOSE_BRACKET161_tree=null;

        try {
            // CSharp4.g:482:3: ( NEW ( ( array_type OPEN_BRACKET )=> array_type array_initializer | non_array_type OPEN_BRACKET expression_list CLOSE_BRACKET ( rank_specifiers )? ( array_initializer )? | rank_specifier array_initializer ) )
            // CSharp4.g:482:5: NEW ( ( array_type OPEN_BRACKET )=> array_type array_initializer | non_array_type OPEN_BRACKET expression_list CLOSE_BRACKET ( rank_specifiers )? ( array_initializer )? | rank_specifier array_initializer )
            {
            root_0 = (Object)adaptor.nil();


            NEW155=(Token)match(input,NEW,FOLLOW_NEW_in_array_creation_expression1448); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            NEW155_tree = 
            (Object)adaptor.create(NEW155)
            ;
            adaptor.addChild(root_0, NEW155_tree);
            }

            // CSharp4.g:482:9: ( ( array_type OPEN_BRACKET )=> array_type array_initializer | non_array_type OPEN_BRACKET expression_list CLOSE_BRACKET ( rank_specifiers )? ( array_initializer )? | rank_specifier array_initializer )
            int alt42=3;
            switch ( input.LA(1) ) {
            case BYTE:
            case CHAR:
            case INT:
            case LONG:
            case SBYTE:
            case SHORT:
            case UINT:
            case ULONG:
            case USHORT:
                {
                int LA42_1 = input.LA(2);

                if ( (synpred5_CSharp4()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 1, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE:
            case FLOAT:
                {
                int LA42_2 = input.LA(2);

                if ( (synpred5_CSharp4()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 2, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL:
                {
                int LA42_3 = input.LA(2);

                if ( (synpred5_CSharp4()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 3, input);

                    throw nvae;

                }
                }
                break;
            case BOOL:
                {
                int LA42_4 = input.LA(2);

                if ( (synpred5_CSharp4()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 4, input);

                    throw nvae;

                }
                }
                break;
            case IDENTIFIER:
                {
                int LA42_5 = input.LA(2);

                if ( (synpred5_CSharp4()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 5, input);

                    throw nvae;

                }
                }
                break;
            case OBJECT:
                {
                int LA42_6 = input.LA(2);

                if ( (synpred5_CSharp4()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 6, input);

                    throw nvae;

                }
                }
                break;
            case STRING:
                {
                int LA42_7 = input.LA(2);

                if ( (synpred5_CSharp4()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 7, input);

                    throw nvae;

                }
                }
                break;
            case VOID:
                {
                int LA42_8 = input.LA(2);

                if ( (synpred5_CSharp4()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 8, input);

                    throw nvae;

                }
                }
                break;
            case OPEN_BRACKET:
                {
                alt42=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;

            }

            switch (alt42) {
                case 1 :
                    // CSharp4.g:482:11: ( array_type OPEN_BRACKET )=> array_type array_initializer
                    {
                    pushFollow(FOLLOW_array_type_in_array_creation_expression1460);
                    array_type156=array_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, array_type156.getTree());

                    pushFollow(FOLLOW_array_initializer_in_array_creation_expression1462);
                    array_initializer157=array_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer157.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:483:11: non_array_type OPEN_BRACKET expression_list CLOSE_BRACKET ( rank_specifiers )? ( array_initializer )?
                    {
                    pushFollow(FOLLOW_non_array_type_in_array_creation_expression1474);
                    non_array_type158=non_array_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, non_array_type158.getTree());

                    OPEN_BRACKET159=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_array_creation_expression1476); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACKET159_tree = 
                    (Object)adaptor.create(OPEN_BRACKET159)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACKET159_tree);
                    }

                    pushFollow(FOLLOW_expression_list_in_array_creation_expression1478);
                    expression_list160=expression_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list160.getTree());

                    CLOSE_BRACKET161=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_array_creation_expression1480); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACKET161_tree = 
                    (Object)adaptor.create(CLOSE_BRACKET161)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACKET161_tree);
                    }

                    // CSharp4.g:483:69: ( rank_specifiers )?
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==OPEN_BRACKET) ) {
                        alt40=1;
                    }
                    switch (alt40) {
                        case 1 :
                            // CSharp4.g:483:69: rank_specifiers
                            {
                            pushFollow(FOLLOW_rank_specifiers_in_array_creation_expression1482);
                            rank_specifiers162=rank_specifiers();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifiers162.getTree());

                            }
                            break;

                    }


                    // CSharp4.g:483:86: ( array_initializer )?
                    int alt41=2;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==OPEN_BRACE) ) {
                        alt41=1;
                    }
                    switch (alt41) {
                        case 1 :
                            // CSharp4.g:483:86: array_initializer
                            {
                            pushFollow(FOLLOW_array_initializer_in_array_creation_expression1485);
                            array_initializer163=array_initializer();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer163.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // CSharp4.g:484:11: rank_specifier array_initializer
                    {
                    pushFollow(FOLLOW_rank_specifier_in_array_creation_expression1498);
                    rank_specifier164=rank_specifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier164.getTree());

                    pushFollow(FOLLOW_array_initializer_in_array_creation_expression1500);
                    array_initializer165=array_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer165.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "array_creation_expression"


    public static class delegate_creation_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "delegate_creation_expression"
    // CSharp4.g:488:1: delegate_creation_expression : NEW delegate_type OPEN_PARENS expression CLOSE_PARENS ;
    public final CSharp4.delegate_creation_expression_return delegate_creation_expression() throws RecognitionException {
        CSharp4.delegate_creation_expression_return retval = new CSharp4.delegate_creation_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW166=null;
        Token OPEN_PARENS168=null;
        Token CLOSE_PARENS170=null;
        CSharp4.delegate_type_return delegate_type167 =null;

        CSharp4.expression_return expression169 =null;


        Object NEW166_tree=null;
        Object OPEN_PARENS168_tree=null;
        Object CLOSE_PARENS170_tree=null;

        try {
            // CSharp4.g:489:2: ( NEW delegate_type OPEN_PARENS expression CLOSE_PARENS )
            // CSharp4.g:489:4: NEW delegate_type OPEN_PARENS expression CLOSE_PARENS
            {
            root_0 = (Object)adaptor.nil();


            NEW166=(Token)match(input,NEW,FOLLOW_NEW_in_delegate_creation_expression1524); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            NEW166_tree = 
            (Object)adaptor.create(NEW166)
            ;
            adaptor.addChild(root_0, NEW166_tree);
            }

            pushFollow(FOLLOW_delegate_type_in_delegate_creation_expression1526);
            delegate_type167=delegate_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_type167.getTree());

            OPEN_PARENS168=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_delegate_creation_expression1528); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS168_tree = 
            (Object)adaptor.create(OPEN_PARENS168)
            ;
            adaptor.addChild(root_0, OPEN_PARENS168_tree);
            }

            pushFollow(FOLLOW_expression_in_delegate_creation_expression1530);
            expression169=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression169.getTree());

            CLOSE_PARENS170=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_delegate_creation_expression1532); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS170_tree = 
            (Object)adaptor.create(CLOSE_PARENS170)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS170_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "delegate_creation_expression"


    public static class anonymous_object_creation_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "anonymous_object_creation_expression"
    // CSharp4.g:492:1: anonymous_object_creation_expression : NEW anonymous_object_initializer ;
    public final CSharp4.anonymous_object_creation_expression_return anonymous_object_creation_expression() throws RecognitionException {
        CSharp4.anonymous_object_creation_expression_return retval = new CSharp4.anonymous_object_creation_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW171=null;
        CSharp4.anonymous_object_initializer_return anonymous_object_initializer172 =null;


        Object NEW171_tree=null;

        try {
            // CSharp4.g:493:2: ( NEW anonymous_object_initializer )
            // CSharp4.g:493:4: NEW anonymous_object_initializer
            {
            root_0 = (Object)adaptor.nil();


            NEW171=(Token)match(input,NEW,FOLLOW_NEW_in_anonymous_object_creation_expression1545); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            NEW171_tree = 
            (Object)adaptor.create(NEW171)
            ;
            adaptor.addChild(root_0, NEW171_tree);
            }

            pushFollow(FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression1547);
            anonymous_object_initializer172=anonymous_object_initializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_object_initializer172.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "anonymous_object_creation_expression"


    public static class anonymous_object_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "anonymous_object_initializer"
    // CSharp4.g:502:1: anonymous_object_initializer : ( OPEN_BRACE CLOSE_BRACE | OPEN_BRACE member_declarator_list ( COMMA )? CLOSE_BRACE );
    public final CSharp4.anonymous_object_initializer_return anonymous_object_initializer() throws RecognitionException {
        CSharp4.anonymous_object_initializer_return retval = new CSharp4.anonymous_object_initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE173=null;
        Token CLOSE_BRACE174=null;
        Token OPEN_BRACE175=null;
        Token COMMA177=null;
        Token CLOSE_BRACE178=null;
        CSharp4.member_declarator_list_return member_declarator_list176 =null;


        Object OPEN_BRACE173_tree=null;
        Object CLOSE_BRACE174_tree=null;
        Object OPEN_BRACE175_tree=null;
        Object COMMA177_tree=null;
        Object CLOSE_BRACE178_tree=null;

        try {
            // CSharp4.g:503:3: ( OPEN_BRACE CLOSE_BRACE | OPEN_BRACE member_declarator_list ( COMMA )? CLOSE_BRACE )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==OPEN_BRACE) ) {
                int LA44_1 = input.LA(2);

                if ( (LA44_1==CLOSE_BRACE) ) {
                    alt44=1;
                }
                else if ( (LA44_1==BASE||LA44_1==BOOL||LA44_1==BYTE||(LA44_1 >= CHAR && LA44_1 <= CHECKED)||LA44_1==DECIMAL||(LA44_1 >= DEFAULT && LA44_1 <= DELEGATE)||LA44_1==DOUBLE||LA44_1==FALSE||LA44_1==FLOAT||LA44_1==IDENTIFIER||(LA44_1 >= INT && LA44_1 <= INTEGER_LITERAL)||LA44_1==LONG||LA44_1==NEW||LA44_1==NULL||LA44_1==OBJECT||LA44_1==OPEN_PARENS||LA44_1==REAL_LITERAL||LA44_1==SBYTE||LA44_1==SHORT||LA44_1==SIZEOF||(LA44_1 >= STRING && LA44_1 <= STRING_LITERAL)||LA44_1==THIS||LA44_1==TRUE||(LA44_1 >= TYPEOF && LA44_1 <= UNCHECKED)||LA44_1==USHORT) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;

            }
            switch (alt44) {
                case 1 :
                    // CSharp4.g:503:5: OPEN_BRACE CLOSE_BRACE
                    {
                    root_0 = (Object)adaptor.nil();


                    OPEN_BRACE173=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_anonymous_object_initializer1563); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACE173_tree = 
                    (Object)adaptor.create(OPEN_BRACE173)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACE173_tree);
                    }

                    CLOSE_BRACE174=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_anonymous_object_initializer1565); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACE174_tree = 
                    (Object)adaptor.create(CLOSE_BRACE174)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACE174_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:504:5: OPEN_BRACE member_declarator_list ( COMMA )? CLOSE_BRACE
                    {
                    root_0 = (Object)adaptor.nil();


                    OPEN_BRACE175=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_anonymous_object_initializer1571); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACE175_tree = 
                    (Object)adaptor.create(OPEN_BRACE175)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACE175_tree);
                    }

                    pushFollow(FOLLOW_member_declarator_list_in_anonymous_object_initializer1573);
                    member_declarator_list176=member_declarator_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declarator_list176.getTree());

                    // CSharp4.g:504:39: ( COMMA )?
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==COMMA) ) {
                        alt43=1;
                    }
                    switch (alt43) {
                        case 1 :
                            // CSharp4.g:504:39: COMMA
                            {
                            COMMA177=(Token)match(input,COMMA,FOLLOW_COMMA_in_anonymous_object_initializer1575); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA177_tree = 
                            (Object)adaptor.create(COMMA177)
                            ;
                            adaptor.addChild(root_0, COMMA177_tree);
                            }

                            }
                            break;

                    }


                    CLOSE_BRACE178=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_anonymous_object_initializer1578); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACE178_tree = 
                    (Object)adaptor.create(CLOSE_BRACE178)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACE178_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "anonymous_object_initializer"


    public static class member_declarator_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "member_declarator_list"
    // CSharp4.g:506:1: member_declarator_list : member_declarator ( COMMA member_declarator )* ;
    public final CSharp4.member_declarator_list_return member_declarator_list() throws RecognitionException {
        CSharp4.member_declarator_list_return retval = new CSharp4.member_declarator_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA180=null;
        CSharp4.member_declarator_return member_declarator179 =null;

        CSharp4.member_declarator_return member_declarator181 =null;


        Object COMMA180_tree=null;

        try {
            // CSharp4.g:507:2: ( member_declarator ( COMMA member_declarator )* )
            // CSharp4.g:507:4: member_declarator ( COMMA member_declarator )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_member_declarator_in_member_declarator_list1590);
            member_declarator179=member_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declarator179.getTree());

            // CSharp4.g:507:22: ( COMMA member_declarator )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==COMMA) ) {
                    int LA45_1 = input.LA(2);

                    if ( (LA45_1==BASE||LA45_1==BOOL||LA45_1==BYTE||(LA45_1 >= CHAR && LA45_1 <= CHECKED)||LA45_1==DECIMAL||(LA45_1 >= DEFAULT && LA45_1 <= DELEGATE)||LA45_1==DOUBLE||LA45_1==FALSE||LA45_1==FLOAT||LA45_1==IDENTIFIER||(LA45_1 >= INT && LA45_1 <= INTEGER_LITERAL)||LA45_1==LONG||LA45_1==NEW||LA45_1==NULL||LA45_1==OBJECT||LA45_1==OPEN_PARENS||LA45_1==REAL_LITERAL||LA45_1==SBYTE||LA45_1==SHORT||LA45_1==SIZEOF||(LA45_1 >= STRING && LA45_1 <= STRING_LITERAL)||LA45_1==THIS||LA45_1==TRUE||(LA45_1 >= TYPEOF && LA45_1 <= UNCHECKED)||LA45_1==USHORT) ) {
                        alt45=1;
                    }


                }


                switch (alt45) {
            	case 1 :
            	    // CSharp4.g:507:24: COMMA member_declarator
            	    {
            	    COMMA180=(Token)match(input,COMMA,FOLLOW_COMMA_in_member_declarator_list1594); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA180_tree = 
            	    (Object)adaptor.create(COMMA180)
            	    ;
            	    adaptor.addChild(root_0, COMMA180_tree);
            	    }

            	    pushFollow(FOLLOW_member_declarator_in_member_declarator_list1596);
            	    member_declarator181=member_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declarator181.getTree());

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "member_declarator_list"


    public static class member_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "member_declarator"
    // CSharp4.g:517:1: member_declarator : ( primary_expression | IDENTIFIER ASSIGNMENT expression );
    public final CSharp4.member_declarator_return member_declarator() throws RecognitionException {
        CSharp4.member_declarator_return retval = new CSharp4.member_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER183=null;
        Token ASSIGNMENT184=null;
        CSharp4.primary_expression_return primary_expression182 =null;

        CSharp4.expression_return expression185 =null;


        Object IDENTIFIER183_tree=null;
        Object ASSIGNMENT184_tree=null;

        try {
            // CSharp4.g:518:3: ( primary_expression | IDENTIFIER ASSIGNMENT expression )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==BASE||LA46_0==BOOL||LA46_0==BYTE||(LA46_0 >= CHAR && LA46_0 <= CHECKED)||LA46_0==DECIMAL||(LA46_0 >= DEFAULT && LA46_0 <= DELEGATE)||LA46_0==DOUBLE||LA46_0==FALSE||LA46_0==FLOAT||(LA46_0 >= INT && LA46_0 <= INTEGER_LITERAL)||LA46_0==LONG||LA46_0==NEW||LA46_0==NULL||LA46_0==OBJECT||LA46_0==OPEN_PARENS||LA46_0==REAL_LITERAL||LA46_0==SBYTE||LA46_0==SHORT||LA46_0==SIZEOF||(LA46_0 >= STRING && LA46_0 <= STRING_LITERAL)||LA46_0==THIS||LA46_0==TRUE||(LA46_0 >= TYPEOF && LA46_0 <= UNCHECKED)||LA46_0==USHORT) ) {
                alt46=1;
            }
            else if ( (LA46_0==IDENTIFIER) ) {
                int LA46_2 = input.LA(2);

                if ( (LA46_2==CLOSE_BRACE||LA46_2==COMMA||LA46_2==DOT||LA46_2==DOUBLE_COLON||LA46_2==LT||(LA46_2 >= OPEN_BRACKET && LA46_2 <= OPEN_PARENS)||LA46_2==OP_DEC||LA46_2==OP_INC||LA46_2==OP_PTR) ) {
                    alt46=1;
                }
                else if ( (LA46_2==ASSIGNMENT) ) {
                    alt46=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 2, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;

            }
            switch (alt46) {
                case 1 :
                    // CSharp4.g:518:5: primary_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_primary_expression_in_member_declarator1612);
                    primary_expression182=primary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression182.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:519:5: IDENTIFIER ASSIGNMENT expression
                    {
                    root_0 = (Object)adaptor.nil();


                    IDENTIFIER183=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_member_declarator1618); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER183_tree = 
                    (Object)adaptor.create(IDENTIFIER183)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER183_tree);
                    }

                    ASSIGNMENT184=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_member_declarator1620); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGNMENT184_tree = 
                    (Object)adaptor.create(ASSIGNMENT184)
                    ;
                    adaptor.addChild(root_0, ASSIGNMENT184_tree);
                    }

                    pushFollow(FOLLOW_expression_in_member_declarator1622);
                    expression185=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression185.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "member_declarator"


    public static class typeof_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "typeof_expression"
    // CSharp4.g:521:1: typeof_expression : TYPEOF OPEN_PARENS ( ( unbound_type_name )=> unbound_type_name CLOSE_PARENS | type CLOSE_PARENS | VOID CLOSE_PARENS ) ;
    public final CSharp4.typeof_expression_return typeof_expression() throws RecognitionException {
        CSharp4.typeof_expression_return retval = new CSharp4.typeof_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token TYPEOF186=null;
        Token OPEN_PARENS187=null;
        Token CLOSE_PARENS189=null;
        Token CLOSE_PARENS191=null;
        Token VOID192=null;
        Token CLOSE_PARENS193=null;
        CSharp4.unbound_type_name_return unbound_type_name188 =null;

        CSharp4.type_return type190 =null;


        Object TYPEOF186_tree=null;
        Object OPEN_PARENS187_tree=null;
        Object CLOSE_PARENS189_tree=null;
        Object CLOSE_PARENS191_tree=null;
        Object VOID192_tree=null;
        Object CLOSE_PARENS193_tree=null;

        try {
            // CSharp4.g:522:2: ( TYPEOF OPEN_PARENS ( ( unbound_type_name )=> unbound_type_name CLOSE_PARENS | type CLOSE_PARENS | VOID CLOSE_PARENS ) )
            // CSharp4.g:522:4: TYPEOF OPEN_PARENS ( ( unbound_type_name )=> unbound_type_name CLOSE_PARENS | type CLOSE_PARENS | VOID CLOSE_PARENS )
            {
            root_0 = (Object)adaptor.nil();


            TYPEOF186=(Token)match(input,TYPEOF,FOLLOW_TYPEOF_in_typeof_expression1634); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            TYPEOF186_tree = 
            (Object)adaptor.create(TYPEOF186)
            ;
            adaptor.addChild(root_0, TYPEOF186_tree);
            }

            OPEN_PARENS187=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_typeof_expression1636); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS187_tree = 
            (Object)adaptor.create(OPEN_PARENS187)
            ;
            adaptor.addChild(root_0, OPEN_PARENS187_tree);
            }

            // CSharp4.g:523:4: ( ( unbound_type_name )=> unbound_type_name CLOSE_PARENS | type CLOSE_PARENS | VOID CLOSE_PARENS )
            int alt47=3;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // CSharp4.g:523:6: ( unbound_type_name )=> unbound_type_name CLOSE_PARENS
                    {
                    pushFollow(FOLLOW_unbound_type_name_in_typeof_expression1649);
                    unbound_type_name188=unbound_type_name();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unbound_type_name188.getTree());

                    CLOSE_PARENS189=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_typeof_expression1651); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS189_tree = 
                    (Object)adaptor.create(CLOSE_PARENS189)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS189_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:524:6: type CLOSE_PARENS
                    {
                    pushFollow(FOLLOW_type_in_typeof_expression1658);
                    type190=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type190.getTree());

                    CLOSE_PARENS191=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_typeof_expression1660); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS191_tree = 
                    (Object)adaptor.create(CLOSE_PARENS191)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS191_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:525:6: VOID CLOSE_PARENS
                    {
                    VOID192=(Token)match(input,VOID,FOLLOW_VOID_in_typeof_expression1667); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VOID192_tree = 
                    (Object)adaptor.create(VOID192)
                    ;
                    adaptor.addChild(root_0, VOID192_tree);
                    }

                    CLOSE_PARENS193=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_typeof_expression1669); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS193_tree = 
                    (Object)adaptor.create(CLOSE_PARENS193)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS193_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typeof_expression"


    public static class unbound_type_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "unbound_type_name"
    // CSharp4.g:535:1: unbound_type_name : IDENTIFIER ( ( generic_dimension_specifier )? | DOUBLE_COLON IDENTIFIER ( generic_dimension_specifier )? ) ( DOT IDENTIFIER ( generic_dimension_specifier )? )* ;
    public final CSharp4.unbound_type_name_return unbound_type_name() throws RecognitionException {
        CSharp4.unbound_type_name_return retval = new CSharp4.unbound_type_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER194=null;
        Token DOUBLE_COLON196=null;
        Token IDENTIFIER197=null;
        Token DOT199=null;
        Token IDENTIFIER200=null;
        CSharp4.generic_dimension_specifier_return generic_dimension_specifier195 =null;

        CSharp4.generic_dimension_specifier_return generic_dimension_specifier198 =null;

        CSharp4.generic_dimension_specifier_return generic_dimension_specifier201 =null;


        Object IDENTIFIER194_tree=null;
        Object DOUBLE_COLON196_tree=null;
        Object IDENTIFIER197_tree=null;
        Object DOT199_tree=null;
        Object IDENTIFIER200_tree=null;

        try {
            // CSharp4.g:536:3: ( IDENTIFIER ( ( generic_dimension_specifier )? | DOUBLE_COLON IDENTIFIER ( generic_dimension_specifier )? ) ( DOT IDENTIFIER ( generic_dimension_specifier )? )* )
            // CSharp4.g:536:5: IDENTIFIER ( ( generic_dimension_specifier )? | DOUBLE_COLON IDENTIFIER ( generic_dimension_specifier )? ) ( DOT IDENTIFIER ( generic_dimension_specifier )? )*
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER194=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_unbound_type_name1688); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER194_tree = 
            (Object)adaptor.create(IDENTIFIER194)
            ;
            adaptor.addChild(root_0, IDENTIFIER194_tree);
            }

            // CSharp4.g:536:16: ( ( generic_dimension_specifier )? | DOUBLE_COLON IDENTIFIER ( generic_dimension_specifier )? )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==EOF||LA50_0==CLOSE_PARENS||LA50_0==DOT||LA50_0==LT) ) {
                alt50=1;
            }
            else if ( (LA50_0==DOUBLE_COLON) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;

            }
            switch (alt50) {
                case 1 :
                    // CSharp4.g:536:18: ( generic_dimension_specifier )?
                    {
                    // CSharp4.g:536:18: ( generic_dimension_specifier )?
                    int alt48=2;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==LT) ) {
                        alt48=1;
                    }
                    switch (alt48) {
                        case 1 :
                            // CSharp4.g:536:18: generic_dimension_specifier
                            {
                            pushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name1692);
                            generic_dimension_specifier195=generic_dimension_specifier();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_dimension_specifier195.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // CSharp4.g:537:18: DOUBLE_COLON IDENTIFIER ( generic_dimension_specifier )?
                    {
                    DOUBLE_COLON196=(Token)match(input,DOUBLE_COLON,FOLLOW_DOUBLE_COLON_in_unbound_type_name1712); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DOUBLE_COLON196_tree = 
                    (Object)adaptor.create(DOUBLE_COLON196)
                    ;
                    adaptor.addChild(root_0, DOUBLE_COLON196_tree);
                    }

                    IDENTIFIER197=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_unbound_type_name1714); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER197_tree = 
                    (Object)adaptor.create(IDENTIFIER197)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER197_tree);
                    }

                    // CSharp4.g:537:42: ( generic_dimension_specifier )?
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==LT) ) {
                        alt49=1;
                    }
                    switch (alt49) {
                        case 1 :
                            // CSharp4.g:537:42: generic_dimension_specifier
                            {
                            pushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name1716);
                            generic_dimension_specifier198=generic_dimension_specifier();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_dimension_specifier198.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }


            // CSharp4.g:539:5: ( DOT IDENTIFIER ( generic_dimension_specifier )? )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==DOT) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // CSharp4.g:539:6: DOT IDENTIFIER ( generic_dimension_specifier )?
            	    {
            	    DOT199=(Token)match(input,DOT,FOLLOW_DOT_in_unbound_type_name1741); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    DOT199_tree = 
            	    (Object)adaptor.create(DOT199)
            	    ;
            	    adaptor.addChild(root_0, DOT199_tree);
            	    }

            	    IDENTIFIER200=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_unbound_type_name1743); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    IDENTIFIER200_tree = 
            	    (Object)adaptor.create(IDENTIFIER200)
            	    ;
            	    adaptor.addChild(root_0, IDENTIFIER200_tree);
            	    }

            	    // CSharp4.g:539:21: ( generic_dimension_specifier )?
            	    int alt51=2;
            	    int LA51_0 = input.LA(1);

            	    if ( (LA51_0==LT) ) {
            	        alt51=1;
            	    }
            	    switch (alt51) {
            	        case 1 :
            	            // CSharp4.g:539:21: generic_dimension_specifier
            	            {
            	            pushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name1745);
            	            generic_dimension_specifier201=generic_dimension_specifier();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_dimension_specifier201.getTree());

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unbound_type_name"


    public static class generic_dimension_specifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "generic_dimension_specifier"
    // CSharp4.g:541:1: generic_dimension_specifier : LT ( commas )? GT ;
    public final CSharp4.generic_dimension_specifier_return generic_dimension_specifier() throws RecognitionException {
        CSharp4.generic_dimension_specifier_return retval = new CSharp4.generic_dimension_specifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token LT202=null;
        Token GT204=null;
        CSharp4.commas_return commas203 =null;


        Object LT202_tree=null;
        Object GT204_tree=null;

        try {
            // CSharp4.g:542:2: ( LT ( commas )? GT )
            // CSharp4.g:542:4: LT ( commas )? GT
            {
            root_0 = (Object)adaptor.nil();


            LT202=(Token)match(input,LT,FOLLOW_LT_in_generic_dimension_specifier1760); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LT202_tree = 
            (Object)adaptor.create(LT202)
            ;
            adaptor.addChild(root_0, LT202_tree);
            }

            // CSharp4.g:542:7: ( commas )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==COMMA) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // CSharp4.g:542:7: commas
                    {
                    pushFollow(FOLLOW_commas_in_generic_dimension_specifier1762);
                    commas203=commas();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, commas203.getTree());

                    }
                    break;

            }


            GT204=(Token)match(input,GT,FOLLOW_GT_in_generic_dimension_specifier1765); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            GT204_tree = 
            (Object)adaptor.create(GT204)
            ;
            adaptor.addChild(root_0, GT204_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "generic_dimension_specifier"


    public static class commas_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "commas"
    // CSharp4.g:544:1: commas : COMMA ( COMMA )* ;
    public final CSharp4.commas_return commas() throws RecognitionException {
        CSharp4.commas_return retval = new CSharp4.commas_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA205=null;
        Token COMMA206=null;

        Object COMMA205_tree=null;
        Object COMMA206_tree=null;

        try {
            // CSharp4.g:545:2: ( COMMA ( COMMA )* )
            // CSharp4.g:545:4: COMMA ( COMMA )*
            {
            root_0 = (Object)adaptor.nil();


            COMMA205=(Token)match(input,COMMA,FOLLOW_COMMA_in_commas1776); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COMMA205_tree = 
            (Object)adaptor.create(COMMA205)
            ;
            adaptor.addChild(root_0, COMMA205_tree);
            }

            // CSharp4.g:545:10: ( COMMA )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==COMMA) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // CSharp4.g:545:12: COMMA
            	    {
            	    COMMA206=(Token)match(input,COMMA,FOLLOW_COMMA_in_commas1780); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA206_tree = 
            	    (Object)adaptor.create(COMMA206)
            	    ;
            	    adaptor.addChild(root_0, COMMA206_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "commas"


    public static class checked_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "checked_expression"
    // CSharp4.g:547:1: checked_expression : CHECKED OPEN_PARENS expression CLOSE_PARENS ;
    public final CSharp4.checked_expression_return checked_expression() throws RecognitionException {
        CSharp4.checked_expression_return retval = new CSharp4.checked_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token CHECKED207=null;
        Token OPEN_PARENS208=null;
        Token CLOSE_PARENS210=null;
        CSharp4.expression_return expression209 =null;


        Object CHECKED207_tree=null;
        Object OPEN_PARENS208_tree=null;
        Object CLOSE_PARENS210_tree=null;

        try {
            // CSharp4.g:548:2: ( CHECKED OPEN_PARENS expression CLOSE_PARENS )
            // CSharp4.g:548:4: CHECKED OPEN_PARENS expression CLOSE_PARENS
            {
            root_0 = (Object)adaptor.nil();


            CHECKED207=(Token)match(input,CHECKED,FOLLOW_CHECKED_in_checked_expression1794); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CHECKED207_tree = 
            (Object)adaptor.create(CHECKED207)
            ;
            adaptor.addChild(root_0, CHECKED207_tree);
            }

            OPEN_PARENS208=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_checked_expression1796); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS208_tree = 
            (Object)adaptor.create(OPEN_PARENS208)
            ;
            adaptor.addChild(root_0, OPEN_PARENS208_tree);
            }

            pushFollow(FOLLOW_expression_in_checked_expression1798);
            expression209=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression209.getTree());

            CLOSE_PARENS210=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_checked_expression1800); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS210_tree = 
            (Object)adaptor.create(CLOSE_PARENS210)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS210_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "checked_expression"


    public static class unchecked_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "unchecked_expression"
    // CSharp4.g:550:1: unchecked_expression : UNCHECKED OPEN_PARENS expression CLOSE_PARENS ;
    public final CSharp4.unchecked_expression_return unchecked_expression() throws RecognitionException {
        CSharp4.unchecked_expression_return retval = new CSharp4.unchecked_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNCHECKED211=null;
        Token OPEN_PARENS212=null;
        Token CLOSE_PARENS214=null;
        CSharp4.expression_return expression213 =null;


        Object UNCHECKED211_tree=null;
        Object OPEN_PARENS212_tree=null;
        Object CLOSE_PARENS214_tree=null;

        try {
            // CSharp4.g:551:2: ( UNCHECKED OPEN_PARENS expression CLOSE_PARENS )
            // CSharp4.g:551:4: UNCHECKED OPEN_PARENS expression CLOSE_PARENS
            {
            root_0 = (Object)adaptor.nil();


            UNCHECKED211=(Token)match(input,UNCHECKED,FOLLOW_UNCHECKED_in_unchecked_expression1811); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNCHECKED211_tree = 
            (Object)adaptor.create(UNCHECKED211)
            ;
            adaptor.addChild(root_0, UNCHECKED211_tree);
            }

            OPEN_PARENS212=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_unchecked_expression1813); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS212_tree = 
            (Object)adaptor.create(OPEN_PARENS212)
            ;
            adaptor.addChild(root_0, OPEN_PARENS212_tree);
            }

            pushFollow(FOLLOW_expression_in_unchecked_expression1815);
            expression213=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression213.getTree());

            CLOSE_PARENS214=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_unchecked_expression1817); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS214_tree = 
            (Object)adaptor.create(CLOSE_PARENS214)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS214_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unchecked_expression"


    public static class default_value_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "default_value_expression"
    // CSharp4.g:553:1: default_value_expression : DEFAULT OPEN_PARENS type CLOSE_PARENS ;
    public final CSharp4.default_value_expression_return default_value_expression() throws RecognitionException {
        CSharp4.default_value_expression_return retval = new CSharp4.default_value_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token DEFAULT215=null;
        Token OPEN_PARENS216=null;
        Token CLOSE_PARENS218=null;
        CSharp4.type_return type217 =null;


        Object DEFAULT215_tree=null;
        Object OPEN_PARENS216_tree=null;
        Object CLOSE_PARENS218_tree=null;

        try {
            // CSharp4.g:554:2: ( DEFAULT OPEN_PARENS type CLOSE_PARENS )
            // CSharp4.g:554:4: DEFAULT OPEN_PARENS type CLOSE_PARENS
            {
            root_0 = (Object)adaptor.nil();


            DEFAULT215=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_default_value_expression1828); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            DEFAULT215_tree = 
            (Object)adaptor.create(DEFAULT215)
            ;
            adaptor.addChild(root_0, DEFAULT215_tree);
            }

            OPEN_PARENS216=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_default_value_expression1830); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS216_tree = 
            (Object)adaptor.create(OPEN_PARENS216)
            ;
            adaptor.addChild(root_0, OPEN_PARENS216_tree);
            }

            pushFollow(FOLLOW_type_in_default_value_expression1832);
            type217=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type217.getTree());

            CLOSE_PARENS218=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_default_value_expression1834); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS218_tree = 
            (Object)adaptor.create(CLOSE_PARENS218)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS218_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "default_value_expression"


    public static class unary_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "unary_expression"
    // CSharp4.g:569:1: unary_expression : ( ( scan_for_cast_generic_precedence | OPEN_PARENS predefined_type )=> cast_expression | primary_expression | PLUS unary_expression | MINUS unary_expression | BANG unary_expression | TILDE unary_expression | pre_increment_expression | pre_decrement_expression | unary_expression_unsafe );
    public final CSharp4.unary_expression_return unary_expression() throws RecognitionException {
        CSharp4.unary_expression_return retval = new CSharp4.unary_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token PLUS221=null;
        Token MINUS223=null;
        Token BANG225=null;
        Token TILDE227=null;
        CSharp4.cast_expression_return cast_expression219 =null;

        CSharp4.primary_expression_return primary_expression220 =null;

        CSharp4.unary_expression_return unary_expression222 =null;

        CSharp4.unary_expression_return unary_expression224 =null;

        CSharp4.unary_expression_return unary_expression226 =null;

        CSharp4.unary_expression_return unary_expression228 =null;

        CSharp4.pre_increment_expression_return pre_increment_expression229 =null;

        CSharp4.pre_decrement_expression_return pre_decrement_expression230 =null;

        CSharp4.unary_expression_unsafe_return unary_expression_unsafe231 =null;


        Object PLUS221_tree=null;
        Object MINUS223_tree=null;
        Object BANG225_tree=null;
        Object TILDE227_tree=null;

        try {
            // CSharp4.g:570:2: ( ( scan_for_cast_generic_precedence | OPEN_PARENS predefined_type )=> cast_expression | primary_expression | PLUS unary_expression | MINUS unary_expression | BANG unary_expression | TILDE unary_expression | pre_increment_expression | pre_decrement_expression | unary_expression_unsafe )
            int alt55=9;
            switch ( input.LA(1) ) {
            case OPEN_PARENS:
                {
                int LA55_1 = input.LA(2);

                if ( (synpred7_CSharp4()) ) {
                    alt55=1;
                }
                else if ( (true) ) {
                    alt55=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 1, input);

                    throw nvae;

                }
                }
                break;
            case BASE:
            case BOOL:
            case BYTE:
            case CHAR:
            case CHARACTER_LITERAL:
            case CHECKED:
            case DECIMAL:
            case DEFAULT:
            case DELEGATE:
            case DOUBLE:
            case FALSE:
            case FLOAT:
            case IDENTIFIER:
            case INT:
            case INTEGER_LITERAL:
            case LONG:
            case NEW:
            case NULL:
            case OBJECT:
            case REAL_LITERAL:
            case SBYTE:
            case SHORT:
            case SIZEOF:
            case STRING:
            case STRING_LITERAL:
            case THIS:
            case TRUE:
            case TYPEOF:
            case UINT:
            case ULONG:
            case UNCHECKED:
            case USHORT:
                {
                alt55=2;
                }
                break;
            case PLUS:
                {
                alt55=3;
                }
                break;
            case MINUS:
                {
                alt55=4;
                }
                break;
            case BANG:
                {
                alt55=5;
                }
                break;
            case TILDE:
                {
                alt55=6;
                }
                break;
            case OP_INC:
                {
                alt55=7;
                }
                break;
            case OP_DEC:
                {
                alt55=8;
                }
                break;
            case AMP:
            case STAR:
                {
                alt55=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;

            }

            switch (alt55) {
                case 1 :
                    // CSharp4.g:570:4: ( scan_for_cast_generic_precedence | OPEN_PARENS predefined_type )=> cast_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_cast_expression_in_unary_expression1859);
                    cast_expression219=cast_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cast_expression219.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:571:4: primary_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_primary_expression_in_unary_expression1864);
                    primary_expression220=primary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression220.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:572:4: PLUS unary_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    PLUS221=(Token)match(input,PLUS,FOLLOW_PLUS_in_unary_expression1869); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PLUS221_tree = 
                    (Object)adaptor.create(PLUS221)
                    ;
                    adaptor.addChild(root_0, PLUS221_tree);
                    }

                    pushFollow(FOLLOW_unary_expression_in_unary_expression1871);
                    unary_expression222=unary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression222.getTree());

                    }
                    break;
                case 4 :
                    // CSharp4.g:573:4: MINUS unary_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    MINUS223=(Token)match(input,MINUS,FOLLOW_MINUS_in_unary_expression1876); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    MINUS223_tree = 
                    (Object)adaptor.create(MINUS223)
                    ;
                    adaptor.addChild(root_0, MINUS223_tree);
                    }

                    pushFollow(FOLLOW_unary_expression_in_unary_expression1878);
                    unary_expression224=unary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression224.getTree());

                    }
                    break;
                case 5 :
                    // CSharp4.g:574:4: BANG unary_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    BANG225=(Token)match(input,BANG,FOLLOW_BANG_in_unary_expression1883); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BANG225_tree = 
                    (Object)adaptor.create(BANG225)
                    ;
                    adaptor.addChild(root_0, BANG225_tree);
                    }

                    pushFollow(FOLLOW_unary_expression_in_unary_expression1885);
                    unary_expression226=unary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression226.getTree());

                    }
                    break;
                case 6 :
                    // CSharp4.g:575:4: TILDE unary_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    TILDE227=(Token)match(input,TILDE,FOLLOW_TILDE_in_unary_expression1890); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    TILDE227_tree = 
                    (Object)adaptor.create(TILDE227)
                    ;
                    adaptor.addChild(root_0, TILDE227_tree);
                    }

                    pushFollow(FOLLOW_unary_expression_in_unary_expression1892);
                    unary_expression228=unary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression228.getTree());

                    }
                    break;
                case 7 :
                    // CSharp4.g:576:4: pre_increment_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_pre_increment_expression_in_unary_expression1897);
                    pre_increment_expression229=pre_increment_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, pre_increment_expression229.getTree());

                    }
                    break;
                case 8 :
                    // CSharp4.g:577:4: pre_decrement_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_pre_decrement_expression_in_unary_expression1902);
                    pre_decrement_expression230=pre_decrement_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, pre_decrement_expression230.getTree());

                    }
                    break;
                case 9 :
                    // CSharp4.g:578:4: unary_expression_unsafe
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_unary_expression_unsafe_in_unary_expression1907);
                    unary_expression_unsafe231=unary_expression_unsafe();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression_unsafe231.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unary_expression"


    public static class scan_for_cast_generic_precedence_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "scan_for_cast_generic_precedence"
    // CSharp4.g:583:1: scan_for_cast_generic_precedence : OPEN_PARENS type CLOSE_PARENS cast_disambiguation_token ;
    public final CSharp4.scan_for_cast_generic_precedence_return scan_for_cast_generic_precedence() throws RecognitionException {
        CSharp4.scan_for_cast_generic_precedence_return retval = new CSharp4.scan_for_cast_generic_precedence_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_PARENS232=null;
        Token CLOSE_PARENS234=null;
        CSharp4.type_return type233 =null;

        CSharp4.cast_disambiguation_token_return cast_disambiguation_token235 =null;


        Object OPEN_PARENS232_tree=null;
        Object CLOSE_PARENS234_tree=null;

        try {
            // CSharp4.g:584:3: ( OPEN_PARENS type CLOSE_PARENS cast_disambiguation_token )
            // CSharp4.g:584:5: OPEN_PARENS type CLOSE_PARENS cast_disambiguation_token
            {
            root_0 = (Object)adaptor.nil();


            OPEN_PARENS232=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_scan_for_cast_generic_precedence1921); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS232_tree = 
            (Object)adaptor.create(OPEN_PARENS232)
            ;
            adaptor.addChild(root_0, OPEN_PARENS232_tree);
            }

            pushFollow(FOLLOW_type_in_scan_for_cast_generic_precedence1923);
            type233=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type233.getTree());

            CLOSE_PARENS234=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_scan_for_cast_generic_precedence1925); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS234_tree = 
            (Object)adaptor.create(CLOSE_PARENS234)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS234_tree);
            }

            pushFollow(FOLLOW_cast_disambiguation_token_in_scan_for_cast_generic_precedence1927);
            cast_disambiguation_token235=cast_disambiguation_token();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, cast_disambiguation_token235.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "scan_for_cast_generic_precedence"


    public static class cast_disambiguation_token_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "cast_disambiguation_token"
    // CSharp4.g:589:1: cast_disambiguation_token : ( TILDE | BANG | OPEN_PARENS | IDENTIFIER | literal | ABSTRACT | BASE | BOOL | BREAK | BYTE | CASE | CATCH | CHAR | CHECKED | CLASS | CONST | CONTINUE | DECIMAL | DEFAULT | DELEGATE | DO | DOUBLE | ELSE | ENUM | EVENT | EXPLICIT | EXTERN | FINALLY | FIXED | FLOAT | FOR | FOREACH | GOTO | IF | IMPLICIT | IN | INT | INTERFACE | INTERNAL | LOCK | LONG | NAMESPACE | NEW | OBJECT | OPERATOR | OUT | OVERRIDE | PARAMS | PRIVATE | PROTECTED | PUBLIC | READONLY | REF | RETURN | SBYTE | SEALED | SHORT | SIZEOF | STACKALLOC | STATIC | STRING | STRUCT | SWITCH | THIS | THROW | TRY | TYPEOF | UINT | ULONG | UNCHECKED | UNSAFE | USHORT | USING | VIRTUAL | VOID | VOLATILE | WHILE ) ;
    public final CSharp4.cast_disambiguation_token_return cast_disambiguation_token() throws RecognitionException {
        CSharp4.cast_disambiguation_token_return retval = new CSharp4.cast_disambiguation_token_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token TILDE236=null;
        Token BANG237=null;
        Token OPEN_PARENS238=null;
        Token IDENTIFIER239=null;
        Token ABSTRACT241=null;
        Token BASE242=null;
        Token BOOL243=null;
        Token BREAK244=null;
        Token BYTE245=null;
        Token CASE246=null;
        Token CATCH247=null;
        Token CHAR248=null;
        Token CHECKED249=null;
        Token CLASS250=null;
        Token CONST251=null;
        Token CONTINUE252=null;
        Token DECIMAL253=null;
        Token DEFAULT254=null;
        Token DELEGATE255=null;
        Token DO256=null;
        Token DOUBLE257=null;
        Token ELSE258=null;
        Token ENUM259=null;
        Token EVENT260=null;
        Token EXPLICIT261=null;
        Token EXTERN262=null;
        Token FINALLY263=null;
        Token FIXED264=null;
        Token FLOAT265=null;
        Token FOR266=null;
        Token FOREACH267=null;
        Token GOTO268=null;
        Token IF269=null;
        Token IMPLICIT270=null;
        Token IN271=null;
        Token INT272=null;
        Token INTERFACE273=null;
        Token INTERNAL274=null;
        Token LOCK275=null;
        Token LONG276=null;
        Token NAMESPACE277=null;
        Token NEW278=null;
        Token OBJECT279=null;
        Token OPERATOR280=null;
        Token OUT281=null;
        Token OVERRIDE282=null;
        Token PARAMS283=null;
        Token PRIVATE284=null;
        Token PROTECTED285=null;
        Token PUBLIC286=null;
        Token READONLY287=null;
        Token REF288=null;
        Token RETURN289=null;
        Token SBYTE290=null;
        Token SEALED291=null;
        Token SHORT292=null;
        Token SIZEOF293=null;
        Token STACKALLOC294=null;
        Token STATIC295=null;
        Token STRING296=null;
        Token STRUCT297=null;
        Token SWITCH298=null;
        Token THIS299=null;
        Token THROW300=null;
        Token TRY301=null;
        Token TYPEOF302=null;
        Token UINT303=null;
        Token ULONG304=null;
        Token UNCHECKED305=null;
        Token UNSAFE306=null;
        Token USHORT307=null;
        Token USING308=null;
        Token VIRTUAL309=null;
        Token VOID310=null;
        Token VOLATILE311=null;
        Token WHILE312=null;
        CSharp4.literal_return literal240 =null;


        Object TILDE236_tree=null;
        Object BANG237_tree=null;
        Object OPEN_PARENS238_tree=null;
        Object IDENTIFIER239_tree=null;
        Object ABSTRACT241_tree=null;
        Object BASE242_tree=null;
        Object BOOL243_tree=null;
        Object BREAK244_tree=null;
        Object BYTE245_tree=null;
        Object CASE246_tree=null;
        Object CATCH247_tree=null;
        Object CHAR248_tree=null;
        Object CHECKED249_tree=null;
        Object CLASS250_tree=null;
        Object CONST251_tree=null;
        Object CONTINUE252_tree=null;
        Object DECIMAL253_tree=null;
        Object DEFAULT254_tree=null;
        Object DELEGATE255_tree=null;
        Object DO256_tree=null;
        Object DOUBLE257_tree=null;
        Object ELSE258_tree=null;
        Object ENUM259_tree=null;
        Object EVENT260_tree=null;
        Object EXPLICIT261_tree=null;
        Object EXTERN262_tree=null;
        Object FINALLY263_tree=null;
        Object FIXED264_tree=null;
        Object FLOAT265_tree=null;
        Object FOR266_tree=null;
        Object FOREACH267_tree=null;
        Object GOTO268_tree=null;
        Object IF269_tree=null;
        Object IMPLICIT270_tree=null;
        Object IN271_tree=null;
        Object INT272_tree=null;
        Object INTERFACE273_tree=null;
        Object INTERNAL274_tree=null;
        Object LOCK275_tree=null;
        Object LONG276_tree=null;
        Object NAMESPACE277_tree=null;
        Object NEW278_tree=null;
        Object OBJECT279_tree=null;
        Object OPERATOR280_tree=null;
        Object OUT281_tree=null;
        Object OVERRIDE282_tree=null;
        Object PARAMS283_tree=null;
        Object PRIVATE284_tree=null;
        Object PROTECTED285_tree=null;
        Object PUBLIC286_tree=null;
        Object READONLY287_tree=null;
        Object REF288_tree=null;
        Object RETURN289_tree=null;
        Object SBYTE290_tree=null;
        Object SEALED291_tree=null;
        Object SHORT292_tree=null;
        Object SIZEOF293_tree=null;
        Object STACKALLOC294_tree=null;
        Object STATIC295_tree=null;
        Object STRING296_tree=null;
        Object STRUCT297_tree=null;
        Object SWITCH298_tree=null;
        Object THIS299_tree=null;
        Object THROW300_tree=null;
        Object TRY301_tree=null;
        Object TYPEOF302_tree=null;
        Object UINT303_tree=null;
        Object ULONG304_tree=null;
        Object UNCHECKED305_tree=null;
        Object UNSAFE306_tree=null;
        Object USHORT307_tree=null;
        Object USING308_tree=null;
        Object VIRTUAL309_tree=null;
        Object VOID310_tree=null;
        Object VOLATILE311_tree=null;
        Object WHILE312_tree=null;

        try {
            // CSharp4.g:590:3: ( ( TILDE | BANG | OPEN_PARENS | IDENTIFIER | literal | ABSTRACT | BASE | BOOL | BREAK | BYTE | CASE | CATCH | CHAR | CHECKED | CLASS | CONST | CONTINUE | DECIMAL | DEFAULT | DELEGATE | DO | DOUBLE | ELSE | ENUM | EVENT | EXPLICIT | EXTERN | FINALLY | FIXED | FLOAT | FOR | FOREACH | GOTO | IF | IMPLICIT | IN | INT | INTERFACE | INTERNAL | LOCK | LONG | NAMESPACE | NEW | OBJECT | OPERATOR | OUT | OVERRIDE | PARAMS | PRIVATE | PROTECTED | PUBLIC | READONLY | REF | RETURN | SBYTE | SEALED | SHORT | SIZEOF | STACKALLOC | STATIC | STRING | STRUCT | SWITCH | THIS | THROW | TRY | TYPEOF | UINT | ULONG | UNCHECKED | UNSAFE | USHORT | USING | VIRTUAL | VOID | VOLATILE | WHILE ) )
            // CSharp4.g:590:5: ( TILDE | BANG | OPEN_PARENS | IDENTIFIER | literal | ABSTRACT | BASE | BOOL | BREAK | BYTE | CASE | CATCH | CHAR | CHECKED | CLASS | CONST | CONTINUE | DECIMAL | DEFAULT | DELEGATE | DO | DOUBLE | ELSE | ENUM | EVENT | EXPLICIT | EXTERN | FINALLY | FIXED | FLOAT | FOR | FOREACH | GOTO | IF | IMPLICIT | IN | INT | INTERFACE | INTERNAL | LOCK | LONG | NAMESPACE | NEW | OBJECT | OPERATOR | OUT | OVERRIDE | PARAMS | PRIVATE | PROTECTED | PUBLIC | READONLY | REF | RETURN | SBYTE | SEALED | SHORT | SIZEOF | STACKALLOC | STATIC | STRING | STRUCT | SWITCH | THIS | THROW | TRY | TYPEOF | UINT | ULONG | UNCHECKED | UNSAFE | USHORT | USING | VIRTUAL | VOID | VOLATILE | WHILE )
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:590:5: ( TILDE | BANG | OPEN_PARENS | IDENTIFIER | literal | ABSTRACT | BASE | BOOL | BREAK | BYTE | CASE | CATCH | CHAR | CHECKED | CLASS | CONST | CONTINUE | DECIMAL | DEFAULT | DELEGATE | DO | DOUBLE | ELSE | ENUM | EVENT | EXPLICIT | EXTERN | FINALLY | FIXED | FLOAT | FOR | FOREACH | GOTO | IF | IMPLICIT | IN | INT | INTERFACE | INTERNAL | LOCK | LONG | NAMESPACE | NEW | OBJECT | OPERATOR | OUT | OVERRIDE | PARAMS | PRIVATE | PROTECTED | PUBLIC | READONLY | REF | RETURN | SBYTE | SEALED | SHORT | SIZEOF | STACKALLOC | STATIC | STRING | STRUCT | SWITCH | THIS | THROW | TRY | TYPEOF | UINT | ULONG | UNCHECKED | UNSAFE | USHORT | USING | VIRTUAL | VOID | VOLATILE | WHILE )
            int alt56=77;
            switch ( input.LA(1) ) {
            case TILDE:
                {
                alt56=1;
                }
                break;
            case BANG:
                {
                alt56=2;
                }
                break;
            case OPEN_PARENS:
                {
                alt56=3;
                }
                break;
            case IDENTIFIER:
                {
                alt56=4;
                }
                break;
            case CHARACTER_LITERAL:
            case FALSE:
            case INTEGER_LITERAL:
            case NULL:
            case REAL_LITERAL:
            case STRING_LITERAL:
            case TRUE:
                {
                alt56=5;
                }
                break;
            case ABSTRACT:
                {
                alt56=6;
                }
                break;
            case BASE:
                {
                alt56=7;
                }
                break;
            case BOOL:
                {
                alt56=8;
                }
                break;
            case BREAK:
                {
                alt56=9;
                }
                break;
            case BYTE:
                {
                alt56=10;
                }
                break;
            case CASE:
                {
                alt56=11;
                }
                break;
            case CATCH:
                {
                alt56=12;
                }
                break;
            case CHAR:
                {
                alt56=13;
                }
                break;
            case CHECKED:
                {
                alt56=14;
                }
                break;
            case CLASS:
                {
                alt56=15;
                }
                break;
            case CONST:
                {
                alt56=16;
                }
                break;
            case CONTINUE:
                {
                alt56=17;
                }
                break;
            case DECIMAL:
                {
                alt56=18;
                }
                break;
            case DEFAULT:
                {
                alt56=19;
                }
                break;
            case DELEGATE:
                {
                alt56=20;
                }
                break;
            case DO:
                {
                alt56=21;
                }
                break;
            case DOUBLE:
                {
                alt56=22;
                }
                break;
            case ELSE:
                {
                alt56=23;
                }
                break;
            case ENUM:
                {
                alt56=24;
                }
                break;
            case EVENT:
                {
                alt56=25;
                }
                break;
            case EXPLICIT:
                {
                alt56=26;
                }
                break;
            case EXTERN:
                {
                alt56=27;
                }
                break;
            case FINALLY:
                {
                alt56=28;
                }
                break;
            case FIXED:
                {
                alt56=29;
                }
                break;
            case FLOAT:
                {
                alt56=30;
                }
                break;
            case FOR:
                {
                alt56=31;
                }
                break;
            case FOREACH:
                {
                alt56=32;
                }
                break;
            case GOTO:
                {
                alt56=33;
                }
                break;
            case IF:
                {
                alt56=34;
                }
                break;
            case IMPLICIT:
                {
                alt56=35;
                }
                break;
            case IN:
                {
                alt56=36;
                }
                break;
            case INT:
                {
                alt56=37;
                }
                break;
            case INTERFACE:
                {
                alt56=38;
                }
                break;
            case INTERNAL:
                {
                alt56=39;
                }
                break;
            case LOCK:
                {
                alt56=40;
                }
                break;
            case LONG:
                {
                alt56=41;
                }
                break;
            case NAMESPACE:
                {
                alt56=42;
                }
                break;
            case NEW:
                {
                alt56=43;
                }
                break;
            case OBJECT:
                {
                alt56=44;
                }
                break;
            case OPERATOR:
                {
                alt56=45;
                }
                break;
            case OUT:
                {
                alt56=46;
                }
                break;
            case OVERRIDE:
                {
                alt56=47;
                }
                break;
            case PARAMS:
                {
                alt56=48;
                }
                break;
            case PRIVATE:
                {
                alt56=49;
                }
                break;
            case PROTECTED:
                {
                alt56=50;
                }
                break;
            case PUBLIC:
                {
                alt56=51;
                }
                break;
            case READONLY:
                {
                alt56=52;
                }
                break;
            case REF:
                {
                alt56=53;
                }
                break;
            case RETURN:
                {
                alt56=54;
                }
                break;
            case SBYTE:
                {
                alt56=55;
                }
                break;
            case SEALED:
                {
                alt56=56;
                }
                break;
            case SHORT:
                {
                alt56=57;
                }
                break;
            case SIZEOF:
                {
                alt56=58;
                }
                break;
            case STACKALLOC:
                {
                alt56=59;
                }
                break;
            case STATIC:
                {
                alt56=60;
                }
                break;
            case STRING:
                {
                alt56=61;
                }
                break;
            case STRUCT:
                {
                alt56=62;
                }
                break;
            case SWITCH:
                {
                alt56=63;
                }
                break;
            case THIS:
                {
                alt56=64;
                }
                break;
            case THROW:
                {
                alt56=65;
                }
                break;
            case TRY:
                {
                alt56=66;
                }
                break;
            case TYPEOF:
                {
                alt56=67;
                }
                break;
            case UINT:
                {
                alt56=68;
                }
                break;
            case ULONG:
                {
                alt56=69;
                }
                break;
            case UNCHECKED:
                {
                alt56=70;
                }
                break;
            case UNSAFE:
                {
                alt56=71;
                }
                break;
            case USHORT:
                {
                alt56=72;
                }
                break;
            case USING:
                {
                alt56=73;
                }
                break;
            case VIRTUAL:
                {
                alt56=74;
                }
                break;
            case VOID:
                {
                alt56=75;
                }
                break;
            case VOLATILE:
                {
                alt56=76;
                }
                break;
            case WHILE:
                {
                alt56=77;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;

            }

            switch (alt56) {
                case 1 :
                    // CSharp4.g:590:6: TILDE
                    {
                    TILDE236=(Token)match(input,TILDE,FOLLOW_TILDE_in_cast_disambiguation_token1943); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    TILDE236_tree = 
                    (Object)adaptor.create(TILDE236)
                    ;
                    adaptor.addChild(root_0, TILDE236_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:590:14: BANG
                    {
                    BANG237=(Token)match(input,BANG,FOLLOW_BANG_in_cast_disambiguation_token1947); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BANG237_tree = 
                    (Object)adaptor.create(BANG237)
                    ;
                    adaptor.addChild(root_0, BANG237_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:590:21: OPEN_PARENS
                    {
                    OPEN_PARENS238=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_cast_disambiguation_token1951); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS238_tree = 
                    (Object)adaptor.create(OPEN_PARENS238)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS238_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:590:35: IDENTIFIER
                    {
                    IDENTIFIER239=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_cast_disambiguation_token1955); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER239_tree = 
                    (Object)adaptor.create(IDENTIFIER239)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER239_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:590:48: literal
                    {
                    pushFollow(FOLLOW_literal_in_cast_disambiguation_token1959);
                    literal240=literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, literal240.getTree());

                    }
                    break;
                case 6 :
                    // CSharp4.g:590:58: ABSTRACT
                    {
                    ABSTRACT241=(Token)match(input,ABSTRACT,FOLLOW_ABSTRACT_in_cast_disambiguation_token1963); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ABSTRACT241_tree = 
                    (Object)adaptor.create(ABSTRACT241)
                    ;
                    adaptor.addChild(root_0, ABSTRACT241_tree);
                    }

                    }
                    break;
                case 7 :
                    // CSharp4.g:590:69: BASE
                    {
                    BASE242=(Token)match(input,BASE,FOLLOW_BASE_in_cast_disambiguation_token1967); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BASE242_tree = 
                    (Object)adaptor.create(BASE242)
                    ;
                    adaptor.addChild(root_0, BASE242_tree);
                    }

                    }
                    break;
                case 8 :
                    // CSharp4.g:590:76: BOOL
                    {
                    BOOL243=(Token)match(input,BOOL,FOLLOW_BOOL_in_cast_disambiguation_token1971); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BOOL243_tree = 
                    (Object)adaptor.create(BOOL243)
                    ;
                    adaptor.addChild(root_0, BOOL243_tree);
                    }

                    }
                    break;
                case 9 :
                    // CSharp4.g:590:83: BREAK
                    {
                    BREAK244=(Token)match(input,BREAK,FOLLOW_BREAK_in_cast_disambiguation_token1975); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BREAK244_tree = 
                    (Object)adaptor.create(BREAK244)
                    ;
                    adaptor.addChild(root_0, BREAK244_tree);
                    }

                    }
                    break;
                case 10 :
                    // CSharp4.g:590:91: BYTE
                    {
                    BYTE245=(Token)match(input,BYTE,FOLLOW_BYTE_in_cast_disambiguation_token1979); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BYTE245_tree = 
                    (Object)adaptor.create(BYTE245)
                    ;
                    adaptor.addChild(root_0, BYTE245_tree);
                    }

                    }
                    break;
                case 11 :
                    // CSharp4.g:590:98: CASE
                    {
                    CASE246=(Token)match(input,CASE,FOLLOW_CASE_in_cast_disambiguation_token1983); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CASE246_tree = 
                    (Object)adaptor.create(CASE246)
                    ;
                    adaptor.addChild(root_0, CASE246_tree);
                    }

                    }
                    break;
                case 12 :
                    // CSharp4.g:590:105: CATCH
                    {
                    CATCH247=(Token)match(input,CATCH,FOLLOW_CATCH_in_cast_disambiguation_token1987); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CATCH247_tree = 
                    (Object)adaptor.create(CATCH247)
                    ;
                    adaptor.addChild(root_0, CATCH247_tree);
                    }

                    }
                    break;
                case 13 :
                    // CSharp4.g:591:7: CHAR
                    {
                    CHAR248=(Token)match(input,CHAR,FOLLOW_CHAR_in_cast_disambiguation_token1995); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CHAR248_tree = 
                    (Object)adaptor.create(CHAR248)
                    ;
                    adaptor.addChild(root_0, CHAR248_tree);
                    }

                    }
                    break;
                case 14 :
                    // CSharp4.g:591:14: CHECKED
                    {
                    CHECKED249=(Token)match(input,CHECKED,FOLLOW_CHECKED_in_cast_disambiguation_token1999); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CHECKED249_tree = 
                    (Object)adaptor.create(CHECKED249)
                    ;
                    adaptor.addChild(root_0, CHECKED249_tree);
                    }

                    }
                    break;
                case 15 :
                    // CSharp4.g:591:24: CLASS
                    {
                    CLASS250=(Token)match(input,CLASS,FOLLOW_CLASS_in_cast_disambiguation_token2003); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLASS250_tree = 
                    (Object)adaptor.create(CLASS250)
                    ;
                    adaptor.addChild(root_0, CLASS250_tree);
                    }

                    }
                    break;
                case 16 :
                    // CSharp4.g:591:32: CONST
                    {
                    CONST251=(Token)match(input,CONST,FOLLOW_CONST_in_cast_disambiguation_token2007); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CONST251_tree = 
                    (Object)adaptor.create(CONST251)
                    ;
                    adaptor.addChild(root_0, CONST251_tree);
                    }

                    }
                    break;
                case 17 :
                    // CSharp4.g:591:40: CONTINUE
                    {
                    CONTINUE252=(Token)match(input,CONTINUE,FOLLOW_CONTINUE_in_cast_disambiguation_token2011); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CONTINUE252_tree = 
                    (Object)adaptor.create(CONTINUE252)
                    ;
                    adaptor.addChild(root_0, CONTINUE252_tree);
                    }

                    }
                    break;
                case 18 :
                    // CSharp4.g:591:51: DECIMAL
                    {
                    DECIMAL253=(Token)match(input,DECIMAL,FOLLOW_DECIMAL_in_cast_disambiguation_token2015); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DECIMAL253_tree = 
                    (Object)adaptor.create(DECIMAL253)
                    ;
                    adaptor.addChild(root_0, DECIMAL253_tree);
                    }

                    }
                    break;
                case 19 :
                    // CSharp4.g:591:61: DEFAULT
                    {
                    DEFAULT254=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_cast_disambiguation_token2019); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DEFAULT254_tree = 
                    (Object)adaptor.create(DEFAULT254)
                    ;
                    adaptor.addChild(root_0, DEFAULT254_tree);
                    }

                    }
                    break;
                case 20 :
                    // CSharp4.g:591:71: DELEGATE
                    {
                    DELEGATE255=(Token)match(input,DELEGATE,FOLLOW_DELEGATE_in_cast_disambiguation_token2023); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DELEGATE255_tree = 
                    (Object)adaptor.create(DELEGATE255)
                    ;
                    adaptor.addChild(root_0, DELEGATE255_tree);
                    }

                    }
                    break;
                case 21 :
                    // CSharp4.g:591:82: DO
                    {
                    DO256=(Token)match(input,DO,FOLLOW_DO_in_cast_disambiguation_token2027); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DO256_tree = 
                    (Object)adaptor.create(DO256)
                    ;
                    adaptor.addChild(root_0, DO256_tree);
                    }

                    }
                    break;
                case 22 :
                    // CSharp4.g:591:87: DOUBLE
                    {
                    DOUBLE257=(Token)match(input,DOUBLE,FOLLOW_DOUBLE_in_cast_disambiguation_token2031); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DOUBLE257_tree = 
                    (Object)adaptor.create(DOUBLE257)
                    ;
                    adaptor.addChild(root_0, DOUBLE257_tree);
                    }

                    }
                    break;
                case 23 :
                    // CSharp4.g:591:96: ELSE
                    {
                    ELSE258=(Token)match(input,ELSE,FOLLOW_ELSE_in_cast_disambiguation_token2035); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ELSE258_tree = 
                    (Object)adaptor.create(ELSE258)
                    ;
                    adaptor.addChild(root_0, ELSE258_tree);
                    }

                    }
                    break;
                case 24 :
                    // CSharp4.g:591:103: ENUM
                    {
                    ENUM259=(Token)match(input,ENUM,FOLLOW_ENUM_in_cast_disambiguation_token2039); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ENUM259_tree = 
                    (Object)adaptor.create(ENUM259)
                    ;
                    adaptor.addChild(root_0, ENUM259_tree);
                    }

                    }
                    break;
                case 25 :
                    // CSharp4.g:592:7: EVENT
                    {
                    EVENT260=(Token)match(input,EVENT,FOLLOW_EVENT_in_cast_disambiguation_token2047); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EVENT260_tree = 
                    (Object)adaptor.create(EVENT260)
                    ;
                    adaptor.addChild(root_0, EVENT260_tree);
                    }

                    }
                    break;
                case 26 :
                    // CSharp4.g:592:15: EXPLICIT
                    {
                    EXPLICIT261=(Token)match(input,EXPLICIT,FOLLOW_EXPLICIT_in_cast_disambiguation_token2051); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXPLICIT261_tree = 
                    (Object)adaptor.create(EXPLICIT261)
                    ;
                    adaptor.addChild(root_0, EXPLICIT261_tree);
                    }

                    }
                    break;
                case 27 :
                    // CSharp4.g:592:26: EXTERN
                    {
                    EXTERN262=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_cast_disambiguation_token2055); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN262_tree = 
                    (Object)adaptor.create(EXTERN262)
                    ;
                    adaptor.addChild(root_0, EXTERN262_tree);
                    }

                    }
                    break;
                case 28 :
                    // CSharp4.g:592:35: FINALLY
                    {
                    FINALLY263=(Token)match(input,FINALLY,FOLLOW_FINALLY_in_cast_disambiguation_token2059); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    FINALLY263_tree = 
                    (Object)adaptor.create(FINALLY263)
                    ;
                    adaptor.addChild(root_0, FINALLY263_tree);
                    }

                    }
                    break;
                case 29 :
                    // CSharp4.g:592:45: FIXED
                    {
                    FIXED264=(Token)match(input,FIXED,FOLLOW_FIXED_in_cast_disambiguation_token2063); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    FIXED264_tree = 
                    (Object)adaptor.create(FIXED264)
                    ;
                    adaptor.addChild(root_0, FIXED264_tree);
                    }

                    }
                    break;
                case 30 :
                    // CSharp4.g:592:53: FLOAT
                    {
                    FLOAT265=(Token)match(input,FLOAT,FOLLOW_FLOAT_in_cast_disambiguation_token2067); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    FLOAT265_tree = 
                    (Object)adaptor.create(FLOAT265)
                    ;
                    adaptor.addChild(root_0, FLOAT265_tree);
                    }

                    }
                    break;
                case 31 :
                    // CSharp4.g:592:61: FOR
                    {
                    FOR266=(Token)match(input,FOR,FOLLOW_FOR_in_cast_disambiguation_token2071); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    FOR266_tree = 
                    (Object)adaptor.create(FOR266)
                    ;
                    adaptor.addChild(root_0, FOR266_tree);
                    }

                    }
                    break;
                case 32 :
                    // CSharp4.g:592:67: FOREACH
                    {
                    FOREACH267=(Token)match(input,FOREACH,FOLLOW_FOREACH_in_cast_disambiguation_token2075); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    FOREACH267_tree = 
                    (Object)adaptor.create(FOREACH267)
                    ;
                    adaptor.addChild(root_0, FOREACH267_tree);
                    }

                    }
                    break;
                case 33 :
                    // CSharp4.g:592:77: GOTO
                    {
                    GOTO268=(Token)match(input,GOTO,FOLLOW_GOTO_in_cast_disambiguation_token2079); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    GOTO268_tree = 
                    (Object)adaptor.create(GOTO268)
                    ;
                    adaptor.addChild(root_0, GOTO268_tree);
                    }

                    }
                    break;
                case 34 :
                    // CSharp4.g:592:84: IF
                    {
                    IF269=(Token)match(input,IF,FOLLOW_IF_in_cast_disambiguation_token2083); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IF269_tree = 
                    (Object)adaptor.create(IF269)
                    ;
                    adaptor.addChild(root_0, IF269_tree);
                    }

                    }
                    break;
                case 35 :
                    // CSharp4.g:592:89: IMPLICIT
                    {
                    IMPLICIT270=(Token)match(input,IMPLICIT,FOLLOW_IMPLICIT_in_cast_disambiguation_token2087); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IMPLICIT270_tree = 
                    (Object)adaptor.create(IMPLICIT270)
                    ;
                    adaptor.addChild(root_0, IMPLICIT270_tree);
                    }

                    }
                    break;
                case 36 :
                    // CSharp4.g:592:100: IN
                    {
                    IN271=(Token)match(input,IN,FOLLOW_IN_in_cast_disambiguation_token2091); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IN271_tree = 
                    (Object)adaptor.create(IN271)
                    ;
                    adaptor.addChild(root_0, IN271_tree);
                    }

                    }
                    break;
                case 37 :
                    // CSharp4.g:592:105: INT
                    {
                    INT272=(Token)match(input,INT,FOLLOW_INT_in_cast_disambiguation_token2095); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INT272_tree = 
                    (Object)adaptor.create(INT272)
                    ;
                    adaptor.addChild(root_0, INT272_tree);
                    }

                    }
                    break;
                case 38 :
                    // CSharp4.g:593:7: INTERFACE
                    {
                    INTERFACE273=(Token)match(input,INTERFACE,FOLLOW_INTERFACE_in_cast_disambiguation_token2103); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERFACE273_tree = 
                    (Object)adaptor.create(INTERFACE273)
                    ;
                    adaptor.addChild(root_0, INTERFACE273_tree);
                    }

                    }
                    break;
                case 39 :
                    // CSharp4.g:593:19: INTERNAL
                    {
                    INTERNAL274=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_cast_disambiguation_token2107); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL274_tree = 
                    (Object)adaptor.create(INTERNAL274)
                    ;
                    adaptor.addChild(root_0, INTERNAL274_tree);
                    }

                    }
                    break;
                case 40 :
                    // CSharp4.g:593:30: LOCK
                    {
                    LOCK275=(Token)match(input,LOCK,FOLLOW_LOCK_in_cast_disambiguation_token2111); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LOCK275_tree = 
                    (Object)adaptor.create(LOCK275)
                    ;
                    adaptor.addChild(root_0, LOCK275_tree);
                    }

                    }
                    break;
                case 41 :
                    // CSharp4.g:593:37: LONG
                    {
                    LONG276=(Token)match(input,LONG,FOLLOW_LONG_in_cast_disambiguation_token2115); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LONG276_tree = 
                    (Object)adaptor.create(LONG276)
                    ;
                    adaptor.addChild(root_0, LONG276_tree);
                    }

                    }
                    break;
                case 42 :
                    // CSharp4.g:593:44: NAMESPACE
                    {
                    NAMESPACE277=(Token)match(input,NAMESPACE,FOLLOW_NAMESPACE_in_cast_disambiguation_token2119); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NAMESPACE277_tree = 
                    (Object)adaptor.create(NAMESPACE277)
                    ;
                    adaptor.addChild(root_0, NAMESPACE277_tree);
                    }

                    }
                    break;
                case 43 :
                    // CSharp4.g:593:56: NEW
                    {
                    NEW278=(Token)match(input,NEW,FOLLOW_NEW_in_cast_disambiguation_token2123); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW278_tree = 
                    (Object)adaptor.create(NEW278)
                    ;
                    adaptor.addChild(root_0, NEW278_tree);
                    }

                    }
                    break;
                case 44 :
                    // CSharp4.g:593:62: OBJECT
                    {
                    OBJECT279=(Token)match(input,OBJECT,FOLLOW_OBJECT_in_cast_disambiguation_token2127); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OBJECT279_tree = 
                    (Object)adaptor.create(OBJECT279)
                    ;
                    adaptor.addChild(root_0, OBJECT279_tree);
                    }

                    }
                    break;
                case 45 :
                    // CSharp4.g:593:71: OPERATOR
                    {
                    OPERATOR280=(Token)match(input,OPERATOR,FOLLOW_OPERATOR_in_cast_disambiguation_token2131); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPERATOR280_tree = 
                    (Object)adaptor.create(OPERATOR280)
                    ;
                    adaptor.addChild(root_0, OPERATOR280_tree);
                    }

                    }
                    break;
                case 46 :
                    // CSharp4.g:593:82: OUT
                    {
                    OUT281=(Token)match(input,OUT,FOLLOW_OUT_in_cast_disambiguation_token2135); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OUT281_tree = 
                    (Object)adaptor.create(OUT281)
                    ;
                    adaptor.addChild(root_0, OUT281_tree);
                    }

                    }
                    break;
                case 47 :
                    // CSharp4.g:593:88: OVERRIDE
                    {
                    OVERRIDE282=(Token)match(input,OVERRIDE,FOLLOW_OVERRIDE_in_cast_disambiguation_token2139); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OVERRIDE282_tree = 
                    (Object)adaptor.create(OVERRIDE282)
                    ;
                    adaptor.addChild(root_0, OVERRIDE282_tree);
                    }

                    }
                    break;
                case 48 :
                    // CSharp4.g:593:99: PARAMS
                    {
                    PARAMS283=(Token)match(input,PARAMS,FOLLOW_PARAMS_in_cast_disambiguation_token2143); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PARAMS283_tree = 
                    (Object)adaptor.create(PARAMS283)
                    ;
                    adaptor.addChild(root_0, PARAMS283_tree);
                    }

                    }
                    break;
                case 49 :
                    // CSharp4.g:594:7: PRIVATE
                    {
                    PRIVATE284=(Token)match(input,PRIVATE,FOLLOW_PRIVATE_in_cast_disambiguation_token2151); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PRIVATE284_tree = 
                    (Object)adaptor.create(PRIVATE284)
                    ;
                    adaptor.addChild(root_0, PRIVATE284_tree);
                    }

                    }
                    break;
                case 50 :
                    // CSharp4.g:594:17: PROTECTED
                    {
                    PROTECTED285=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_cast_disambiguation_token2155); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED285_tree = 
                    (Object)adaptor.create(PROTECTED285)
                    ;
                    adaptor.addChild(root_0, PROTECTED285_tree);
                    }

                    }
                    break;
                case 51 :
                    // CSharp4.g:594:29: PUBLIC
                    {
                    PUBLIC286=(Token)match(input,PUBLIC,FOLLOW_PUBLIC_in_cast_disambiguation_token2159); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PUBLIC286_tree = 
                    (Object)adaptor.create(PUBLIC286)
                    ;
                    adaptor.addChild(root_0, PUBLIC286_tree);
                    }

                    }
                    break;
                case 52 :
                    // CSharp4.g:594:38: READONLY
                    {
                    READONLY287=(Token)match(input,READONLY,FOLLOW_READONLY_in_cast_disambiguation_token2163); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    READONLY287_tree = 
                    (Object)adaptor.create(READONLY287)
                    ;
                    adaptor.addChild(root_0, READONLY287_tree);
                    }

                    }
                    break;
                case 53 :
                    // CSharp4.g:594:49: REF
                    {
                    REF288=(Token)match(input,REF,FOLLOW_REF_in_cast_disambiguation_token2167); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    REF288_tree = 
                    (Object)adaptor.create(REF288)
                    ;
                    adaptor.addChild(root_0, REF288_tree);
                    }

                    }
                    break;
                case 54 :
                    // CSharp4.g:594:55: RETURN
                    {
                    RETURN289=(Token)match(input,RETURN,FOLLOW_RETURN_in_cast_disambiguation_token2171); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RETURN289_tree = 
                    (Object)adaptor.create(RETURN289)
                    ;
                    adaptor.addChild(root_0, RETURN289_tree);
                    }

                    }
                    break;
                case 55 :
                    // CSharp4.g:594:64: SBYTE
                    {
                    SBYTE290=(Token)match(input,SBYTE,FOLLOW_SBYTE_in_cast_disambiguation_token2175); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SBYTE290_tree = 
                    (Object)adaptor.create(SBYTE290)
                    ;
                    adaptor.addChild(root_0, SBYTE290_tree);
                    }

                    }
                    break;
                case 56 :
                    // CSharp4.g:594:72: SEALED
                    {
                    SEALED291=(Token)match(input,SEALED,FOLLOW_SEALED_in_cast_disambiguation_token2179); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEALED291_tree = 
                    (Object)adaptor.create(SEALED291)
                    ;
                    adaptor.addChild(root_0, SEALED291_tree);
                    }

                    }
                    break;
                case 57 :
                    // CSharp4.g:594:81: SHORT
                    {
                    SHORT292=(Token)match(input,SHORT,FOLLOW_SHORT_in_cast_disambiguation_token2183); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SHORT292_tree = 
                    (Object)adaptor.create(SHORT292)
                    ;
                    adaptor.addChild(root_0, SHORT292_tree);
                    }

                    }
                    break;
                case 58 :
                    // CSharp4.g:594:89: SIZEOF
                    {
                    SIZEOF293=(Token)match(input,SIZEOF,FOLLOW_SIZEOF_in_cast_disambiguation_token2187); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SIZEOF293_tree = 
                    (Object)adaptor.create(SIZEOF293)
                    ;
                    adaptor.addChild(root_0, SIZEOF293_tree);
                    }

                    }
                    break;
                case 59 :
                    // CSharp4.g:594:98: STACKALLOC
                    {
                    STACKALLOC294=(Token)match(input,STACKALLOC,FOLLOW_STACKALLOC_in_cast_disambiguation_token2191); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STACKALLOC294_tree = 
                    (Object)adaptor.create(STACKALLOC294)
                    ;
                    adaptor.addChild(root_0, STACKALLOC294_tree);
                    }

                    }
                    break;
                case 60 :
                    // CSharp4.g:595:7: STATIC
                    {
                    STATIC295=(Token)match(input,STATIC,FOLLOW_STATIC_in_cast_disambiguation_token2199); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC295_tree = 
                    (Object)adaptor.create(STATIC295)
                    ;
                    adaptor.addChild(root_0, STATIC295_tree);
                    }

                    }
                    break;
                case 61 :
                    // CSharp4.g:595:16: STRING
                    {
                    STRING296=(Token)match(input,STRING,FOLLOW_STRING_in_cast_disambiguation_token2203); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STRING296_tree = 
                    (Object)adaptor.create(STRING296)
                    ;
                    adaptor.addChild(root_0, STRING296_tree);
                    }

                    }
                    break;
                case 62 :
                    // CSharp4.g:595:25: STRUCT
                    {
                    STRUCT297=(Token)match(input,STRUCT,FOLLOW_STRUCT_in_cast_disambiguation_token2207); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STRUCT297_tree = 
                    (Object)adaptor.create(STRUCT297)
                    ;
                    adaptor.addChild(root_0, STRUCT297_tree);
                    }

                    }
                    break;
                case 63 :
                    // CSharp4.g:595:34: SWITCH
                    {
                    SWITCH298=(Token)match(input,SWITCH,FOLLOW_SWITCH_in_cast_disambiguation_token2211); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SWITCH298_tree = 
                    (Object)adaptor.create(SWITCH298)
                    ;
                    adaptor.addChild(root_0, SWITCH298_tree);
                    }

                    }
                    break;
                case 64 :
                    // CSharp4.g:595:43: THIS
                    {
                    THIS299=(Token)match(input,THIS,FOLLOW_THIS_in_cast_disambiguation_token2215); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    THIS299_tree = 
                    (Object)adaptor.create(THIS299)
                    ;
                    adaptor.addChild(root_0, THIS299_tree);
                    }

                    }
                    break;
                case 65 :
                    // CSharp4.g:595:50: THROW
                    {
                    THROW300=(Token)match(input,THROW,FOLLOW_THROW_in_cast_disambiguation_token2219); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    THROW300_tree = 
                    (Object)adaptor.create(THROW300)
                    ;
                    adaptor.addChild(root_0, THROW300_tree);
                    }

                    }
                    break;
                case 66 :
                    // CSharp4.g:595:58: TRY
                    {
                    TRY301=(Token)match(input,TRY,FOLLOW_TRY_in_cast_disambiguation_token2223); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    TRY301_tree = 
                    (Object)adaptor.create(TRY301)
                    ;
                    adaptor.addChild(root_0, TRY301_tree);
                    }

                    }
                    break;
                case 67 :
                    // CSharp4.g:595:64: TYPEOF
                    {
                    TYPEOF302=(Token)match(input,TYPEOF,FOLLOW_TYPEOF_in_cast_disambiguation_token2227); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    TYPEOF302_tree = 
                    (Object)adaptor.create(TYPEOF302)
                    ;
                    adaptor.addChild(root_0, TYPEOF302_tree);
                    }

                    }
                    break;
                case 68 :
                    // CSharp4.g:595:73: UINT
                    {
                    UINT303=(Token)match(input,UINT,FOLLOW_UINT_in_cast_disambiguation_token2231); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    UINT303_tree = 
                    (Object)adaptor.create(UINT303)
                    ;
                    adaptor.addChild(root_0, UINT303_tree);
                    }

                    }
                    break;
                case 69 :
                    // CSharp4.g:595:80: ULONG
                    {
                    ULONG304=(Token)match(input,ULONG,FOLLOW_ULONG_in_cast_disambiguation_token2235); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ULONG304_tree = 
                    (Object)adaptor.create(ULONG304)
                    ;
                    adaptor.addChild(root_0, ULONG304_tree);
                    }

                    }
                    break;
                case 70 :
                    // CSharp4.g:595:88: UNCHECKED
                    {
                    UNCHECKED305=(Token)match(input,UNCHECKED,FOLLOW_UNCHECKED_in_cast_disambiguation_token2239); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    UNCHECKED305_tree = 
                    (Object)adaptor.create(UNCHECKED305)
                    ;
                    adaptor.addChild(root_0, UNCHECKED305_tree);
                    }

                    }
                    break;
                case 71 :
                    // CSharp4.g:595:100: UNSAFE
                    {
                    UNSAFE306=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_cast_disambiguation_token2243); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    UNSAFE306_tree = 
                    (Object)adaptor.create(UNSAFE306)
                    ;
                    adaptor.addChild(root_0, UNSAFE306_tree);
                    }

                    }
                    break;
                case 72 :
                    // CSharp4.g:596:7: USHORT
                    {
                    USHORT307=(Token)match(input,USHORT,FOLLOW_USHORT_in_cast_disambiguation_token2251); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    USHORT307_tree = 
                    (Object)adaptor.create(USHORT307)
                    ;
                    adaptor.addChild(root_0, USHORT307_tree);
                    }

                    }
                    break;
                case 73 :
                    // CSharp4.g:596:16: USING
                    {
                    USING308=(Token)match(input,USING,FOLLOW_USING_in_cast_disambiguation_token2255); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    USING308_tree = 
                    (Object)adaptor.create(USING308)
                    ;
                    adaptor.addChild(root_0, USING308_tree);
                    }

                    }
                    break;
                case 74 :
                    // CSharp4.g:596:24: VIRTUAL
                    {
                    VIRTUAL309=(Token)match(input,VIRTUAL,FOLLOW_VIRTUAL_in_cast_disambiguation_token2259); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VIRTUAL309_tree = 
                    (Object)adaptor.create(VIRTUAL309)
                    ;
                    adaptor.addChild(root_0, VIRTUAL309_tree);
                    }

                    }
                    break;
                case 75 :
                    // CSharp4.g:596:34: VOID
                    {
                    VOID310=(Token)match(input,VOID,FOLLOW_VOID_in_cast_disambiguation_token2263); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VOID310_tree = 
                    (Object)adaptor.create(VOID310)
                    ;
                    adaptor.addChild(root_0, VOID310_tree);
                    }

                    }
                    break;
                case 76 :
                    // CSharp4.g:596:41: VOLATILE
                    {
                    VOLATILE311=(Token)match(input,VOLATILE,FOLLOW_VOLATILE_in_cast_disambiguation_token2267); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VOLATILE311_tree = 
                    (Object)adaptor.create(VOLATILE311)
                    ;
                    adaptor.addChild(root_0, VOLATILE311_tree);
                    }

                    }
                    break;
                case 77 :
                    // CSharp4.g:596:52: WHILE
                    {
                    WHILE312=(Token)match(input,WHILE,FOLLOW_WHILE_in_cast_disambiguation_token2271); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    WHILE312_tree = 
                    (Object)adaptor.create(WHILE312)
                    ;
                    adaptor.addChild(root_0, WHILE312_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "cast_disambiguation_token"


    public static class pre_increment_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "pre_increment_expression"
    // CSharp4.g:599:1: pre_increment_expression : OP_INC unary_expression ;
    public final CSharp4.pre_increment_expression_return pre_increment_expression() throws RecognitionException {
        CSharp4.pre_increment_expression_return retval = new CSharp4.pre_increment_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OP_INC313=null;
        CSharp4.unary_expression_return unary_expression314 =null;


        Object OP_INC313_tree=null;

        try {
            // CSharp4.g:600:2: ( OP_INC unary_expression )
            // CSharp4.g:600:4: OP_INC unary_expression
            {
            root_0 = (Object)adaptor.nil();


            OP_INC313=(Token)match(input,OP_INC,FOLLOW_OP_INC_in_pre_increment_expression2289); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OP_INC313_tree = 
            (Object)adaptor.create(OP_INC313)
            ;
            adaptor.addChild(root_0, OP_INC313_tree);
            }

            pushFollow(FOLLOW_unary_expression_in_pre_increment_expression2291);
            unary_expression314=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression314.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "pre_increment_expression"


    public static class pre_decrement_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "pre_decrement_expression"
    // CSharp4.g:602:1: pre_decrement_expression : OP_DEC unary_expression ;
    public final CSharp4.pre_decrement_expression_return pre_decrement_expression() throws RecognitionException {
        CSharp4.pre_decrement_expression_return retval = new CSharp4.pre_decrement_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OP_DEC315=null;
        CSharp4.unary_expression_return unary_expression316 =null;


        Object OP_DEC315_tree=null;

        try {
            // CSharp4.g:603:2: ( OP_DEC unary_expression )
            // CSharp4.g:603:4: OP_DEC unary_expression
            {
            root_0 = (Object)adaptor.nil();


            OP_DEC315=(Token)match(input,OP_DEC,FOLLOW_OP_DEC_in_pre_decrement_expression2302); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OP_DEC315_tree = 
            (Object)adaptor.create(OP_DEC315)
            ;
            adaptor.addChild(root_0, OP_DEC315_tree);
            }

            pushFollow(FOLLOW_unary_expression_in_pre_decrement_expression2304);
            unary_expression316=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression316.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "pre_decrement_expression"


    public static class cast_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "cast_expression"
    // CSharp4.g:605:1: cast_expression : OPEN_PARENS type CLOSE_PARENS unary_expression ;
    public final CSharp4.cast_expression_return cast_expression() throws RecognitionException {
        CSharp4.cast_expression_return retval = new CSharp4.cast_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_PARENS317=null;
        Token CLOSE_PARENS319=null;
        CSharp4.type_return type318 =null;

        CSharp4.unary_expression_return unary_expression320 =null;


        Object OPEN_PARENS317_tree=null;
        Object CLOSE_PARENS319_tree=null;

        try {
            // CSharp4.g:606:2: ( OPEN_PARENS type CLOSE_PARENS unary_expression )
            // CSharp4.g:606:4: OPEN_PARENS type CLOSE_PARENS unary_expression
            {
            root_0 = (Object)adaptor.nil();


            OPEN_PARENS317=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_cast_expression2315); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS317_tree = 
            (Object)adaptor.create(OPEN_PARENS317)
            ;
            adaptor.addChild(root_0, OPEN_PARENS317_tree);
            }

            pushFollow(FOLLOW_type_in_cast_expression2317);
            type318=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type318.getTree());

            CLOSE_PARENS319=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_cast_expression2319); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS319_tree = 
            (Object)adaptor.create(CLOSE_PARENS319)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS319_tree);
            }

            pushFollow(FOLLOW_unary_expression_in_cast_expression2321);
            unary_expression320=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression320.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "cast_expression"


    public static class multiplicative_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "multiplicative_expression"
    // CSharp4.g:608:1: multiplicative_expression : unary_expression ( ( STAR unary_expression ) | ( DIV unary_expression ) | ( PERCENT unary_expression ) )* ;
    public final CSharp4.multiplicative_expression_return multiplicative_expression() throws RecognitionException {
        CSharp4.multiplicative_expression_return retval = new CSharp4.multiplicative_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token STAR322=null;
        Token DIV324=null;
        Token PERCENT326=null;
        CSharp4.unary_expression_return unary_expression321 =null;

        CSharp4.unary_expression_return unary_expression323 =null;

        CSharp4.unary_expression_return unary_expression325 =null;

        CSharp4.unary_expression_return unary_expression327 =null;


        Object STAR322_tree=null;
        Object DIV324_tree=null;
        Object PERCENT326_tree=null;

        try {
            // CSharp4.g:609:2: ( unary_expression ( ( STAR unary_expression ) | ( DIV unary_expression ) | ( PERCENT unary_expression ) )* )
            // CSharp4.g:609:4: unary_expression ( ( STAR unary_expression ) | ( DIV unary_expression ) | ( PERCENT unary_expression ) )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_unary_expression_in_multiplicative_expression2332);
            unary_expression321=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression321.getTree());

            // CSharp4.g:609:21: ( ( STAR unary_expression ) | ( DIV unary_expression ) | ( PERCENT unary_expression ) )*
            loop57:
            do {
                int alt57=4;
                switch ( input.LA(1) ) {
                case STAR:
                    {
                    alt57=1;
                    }
                    break;
                case DIV:
                    {
                    alt57=2;
                    }
                    break;
                case PERCENT:
                    {
                    alt57=3;
                    }
                    break;

                }

                switch (alt57) {
            	case 1 :
            	    // CSharp4.g:609:23: ( STAR unary_expression )
            	    {
            	    // CSharp4.g:609:23: ( STAR unary_expression )
            	    // CSharp4.g:609:25: STAR unary_expression
            	    {
            	    STAR322=(Token)match(input,STAR,FOLLOW_STAR_in_multiplicative_expression2338); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    STAR322_tree = 
            	    (Object)adaptor.create(STAR322)
            	    ;
            	    adaptor.addChild(root_0, STAR322_tree);
            	    }

            	    pushFollow(FOLLOW_unary_expression_in_multiplicative_expression2341);
            	    unary_expression323=unary_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression323.getTree());

            	    }


            	    }
            	    break;
            	case 2 :
            	    // CSharp4.g:609:52: ( DIV unary_expression )
            	    {
            	    // CSharp4.g:609:52: ( DIV unary_expression )
            	    // CSharp4.g:609:54: DIV unary_expression
            	    {
            	    DIV324=(Token)match(input,DIV,FOLLOW_DIV_in_multiplicative_expression2349); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    DIV324_tree = 
            	    (Object)adaptor.create(DIV324)
            	    ;
            	    adaptor.addChild(root_0, DIV324_tree);
            	    }

            	    pushFollow(FOLLOW_unary_expression_in_multiplicative_expression2352);
            	    unary_expression325=unary_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression325.getTree());

            	    }


            	    }
            	    break;
            	case 3 :
            	    // CSharp4.g:609:80: ( PERCENT unary_expression )
            	    {
            	    // CSharp4.g:609:80: ( PERCENT unary_expression )
            	    // CSharp4.g:609:82: PERCENT unary_expression
            	    {
            	    PERCENT326=(Token)match(input,PERCENT,FOLLOW_PERCENT_in_multiplicative_expression2360); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    PERCENT326_tree = 
            	    (Object)adaptor.create(PERCENT326)
            	    ;
            	    adaptor.addChild(root_0, PERCENT326_tree);
            	    }

            	    pushFollow(FOLLOW_unary_expression_in_multiplicative_expression2363);
            	    unary_expression327=unary_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression327.getTree());

            	    }


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "multiplicative_expression"


    public static class additive_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "additive_expression"
    // CSharp4.g:611:1: additive_expression : multiplicative_expression ( ( PLUS multiplicative_expression ) | ( MINUS multiplicative_expression ) )* ;
    public final CSharp4.additive_expression_return additive_expression() throws RecognitionException {
        CSharp4.additive_expression_return retval = new CSharp4.additive_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token PLUS329=null;
        Token MINUS331=null;
        CSharp4.multiplicative_expression_return multiplicative_expression328 =null;

        CSharp4.multiplicative_expression_return multiplicative_expression330 =null;

        CSharp4.multiplicative_expression_return multiplicative_expression332 =null;


        Object PLUS329_tree=null;
        Object MINUS331_tree=null;

        try {
            // CSharp4.g:612:2: ( multiplicative_expression ( ( PLUS multiplicative_expression ) | ( MINUS multiplicative_expression ) )* )
            // CSharp4.g:612:4: multiplicative_expression ( ( PLUS multiplicative_expression ) | ( MINUS multiplicative_expression ) )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_multiplicative_expression_in_additive_expression2379);
            multiplicative_expression328=multiplicative_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, multiplicative_expression328.getTree());

            // CSharp4.g:612:30: ( ( PLUS multiplicative_expression ) | ( MINUS multiplicative_expression ) )*
            loop58:
            do {
                int alt58=3;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==PLUS) ) {
                    alt58=1;
                }
                else if ( (LA58_0==MINUS) ) {
                    alt58=2;
                }


                switch (alt58) {
            	case 1 :
            	    // CSharp4.g:612:32: ( PLUS multiplicative_expression )
            	    {
            	    // CSharp4.g:612:32: ( PLUS multiplicative_expression )
            	    // CSharp4.g:612:34: PLUS multiplicative_expression
            	    {
            	    PLUS329=(Token)match(input,PLUS,FOLLOW_PLUS_in_additive_expression2385); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    PLUS329_tree = 
            	    (Object)adaptor.create(PLUS329)
            	    ;
            	    adaptor.addChild(root_0, PLUS329_tree);
            	    }

            	    pushFollow(FOLLOW_multiplicative_expression_in_additive_expression2388);
            	    multiplicative_expression330=multiplicative_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, multiplicative_expression330.getTree());

            	    }


            	    }
            	    break;
            	case 2 :
            	    // CSharp4.g:612:70: ( MINUS multiplicative_expression )
            	    {
            	    // CSharp4.g:612:70: ( MINUS multiplicative_expression )
            	    // CSharp4.g:612:72: MINUS multiplicative_expression
            	    {
            	    MINUS331=(Token)match(input,MINUS,FOLLOW_MINUS_in_additive_expression2396); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    MINUS331_tree = 
            	    (Object)adaptor.create(MINUS331)
            	    ;
            	    adaptor.addChild(root_0, MINUS331_tree);
            	    }

            	    pushFollow(FOLLOW_multiplicative_expression_in_additive_expression2399);
            	    multiplicative_expression332=multiplicative_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, multiplicative_expression332.getTree());

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "additive_expression"


    public static class shift_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "shift_expression"
    // CSharp4.g:614:1: shift_expression : additive_expression ( ( OP_LEFT_SHIFT additive_expression ) | ( right_shift additive_expression ) )* ;
    public final CSharp4.shift_expression_return shift_expression() throws RecognitionException {
        CSharp4.shift_expression_return retval = new CSharp4.shift_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OP_LEFT_SHIFT334=null;
        CSharp4.additive_expression_return additive_expression333 =null;

        CSharp4.additive_expression_return additive_expression335 =null;

        CSharp4.right_shift_return right_shift336 =null;

        CSharp4.additive_expression_return additive_expression337 =null;


        Object OP_LEFT_SHIFT334_tree=null;

        try {
            // CSharp4.g:615:2: ( additive_expression ( ( OP_LEFT_SHIFT additive_expression ) | ( right_shift additive_expression ) )* )
            // CSharp4.g:615:4: additive_expression ( ( OP_LEFT_SHIFT additive_expression ) | ( right_shift additive_expression ) )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_additive_expression_in_shift_expression2415);
            additive_expression333=additive_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, additive_expression333.getTree());

            // CSharp4.g:615:24: ( ( OP_LEFT_SHIFT additive_expression ) | ( right_shift additive_expression ) )*
            loop59:
            do {
                int alt59=3;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==GT) ) {
                    int LA59_2 = input.LA(2);

                    if ( (LA59_2==GT) ) {
                        alt59=2;
                    }


                }
                else if ( (LA59_0==OP_LEFT_SHIFT) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // CSharp4.g:615:26: ( OP_LEFT_SHIFT additive_expression )
            	    {
            	    // CSharp4.g:615:26: ( OP_LEFT_SHIFT additive_expression )
            	    // CSharp4.g:615:28: OP_LEFT_SHIFT additive_expression
            	    {
            	    OP_LEFT_SHIFT334=(Token)match(input,OP_LEFT_SHIFT,FOLLOW_OP_LEFT_SHIFT_in_shift_expression2421); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    OP_LEFT_SHIFT334_tree = 
            	    (Object)adaptor.create(OP_LEFT_SHIFT334)
            	    ;
            	    adaptor.addChild(root_0, OP_LEFT_SHIFT334_tree);
            	    }

            	    pushFollow(FOLLOW_additive_expression_in_shift_expression2424);
            	    additive_expression335=additive_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, additive_expression335.getTree());

            	    }


            	    }
            	    break;
            	case 2 :
            	    // CSharp4.g:615:67: ( right_shift additive_expression )
            	    {
            	    // CSharp4.g:615:67: ( right_shift additive_expression )
            	    // CSharp4.g:615:69: right_shift additive_expression
            	    {
            	    pushFollow(FOLLOW_right_shift_in_shift_expression2432);
            	    right_shift336=right_shift();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, right_shift336.getTree());

            	    pushFollow(FOLLOW_additive_expression_in_shift_expression2435);
            	    additive_expression337=additive_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, additive_expression337.getTree());

            	    }


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "shift_expression"


    public static class relational_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "relational_expression"
    // CSharp4.g:617:1: relational_expression : shift_expression ( LT shift_expression | GT shift_expression | OP_LE shift_expression | OP_GE shift_expression | IS isType | AS type )* ;
    public final CSharp4.relational_expression_return relational_expression() throws RecognitionException {
        CSharp4.relational_expression_return retval = new CSharp4.relational_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token LT339=null;
        Token GT341=null;
        Token OP_LE343=null;
        Token OP_GE345=null;
        Token IS347=null;
        Token AS349=null;
        CSharp4.shift_expression_return shift_expression338 =null;

        CSharp4.shift_expression_return shift_expression340 =null;

        CSharp4.shift_expression_return shift_expression342 =null;

        CSharp4.shift_expression_return shift_expression344 =null;

        CSharp4.shift_expression_return shift_expression346 =null;

        CSharp4.isType_return isType348 =null;

        CSharp4.type_return type350 =null;


        Object LT339_tree=null;
        Object GT341_tree=null;
        Object OP_LE343_tree=null;
        Object OP_GE345_tree=null;
        Object IS347_tree=null;
        Object AS349_tree=null;

        try {
            // CSharp4.g:618:3: ( shift_expression ( LT shift_expression | GT shift_expression | OP_LE shift_expression | OP_GE shift_expression | IS isType | AS type )* )
            // CSharp4.g:619:6: shift_expression ( LT shift_expression | GT shift_expression | OP_LE shift_expression | OP_GE shift_expression | IS isType | AS type )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_shift_expression_in_relational_expression2453);
            shift_expression338=shift_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression338.getTree());

            // CSharp4.g:619:23: ( LT shift_expression | GT shift_expression | OP_LE shift_expression | OP_GE shift_expression | IS isType | AS type )*
            loop60:
            do {
                int alt60=7;
                switch ( input.LA(1) ) {
                case LT:
                    {
                    alt60=1;
                    }
                    break;
                case GT:
                    {
                    alt60=2;
                    }
                    break;
                case OP_LE:
                    {
                    alt60=3;
                    }
                    break;
                case OP_GE:
                    {
                    alt60=4;
                    }
                    break;
                case IS:
                    {
                    alt60=5;
                    }
                    break;
                case AS:
                    {
                    alt60=6;
                    }
                    break;

                }

                switch (alt60) {
            	case 1 :
            	    // CSharp4.g:619:25: LT shift_expression
            	    {
            	    LT339=(Token)match(input,LT,FOLLOW_LT_in_relational_expression2457); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    LT339_tree = 
            	    (Object)adaptor.create(LT339)
            	    ;
            	    adaptor.addChild(root_0, LT339_tree);
            	    }

            	    pushFollow(FOLLOW_shift_expression_in_relational_expression2459);
            	    shift_expression340=shift_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression340.getTree());

            	    }
            	    break;
            	case 2 :
            	    // CSharp4.g:620:24: GT shift_expression
            	    {
            	    GT341=(Token)match(input,GT,FOLLOW_GT_in_relational_expression2484); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    GT341_tree = 
            	    (Object)adaptor.create(GT341)
            	    ;
            	    adaptor.addChild(root_0, GT341_tree);
            	    }

            	    pushFollow(FOLLOW_shift_expression_in_relational_expression2486);
            	    shift_expression342=shift_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression342.getTree());

            	    }
            	    break;
            	case 3 :
            	    // CSharp4.g:621:24: OP_LE shift_expression
            	    {
            	    OP_LE343=(Token)match(input,OP_LE,FOLLOW_OP_LE_in_relational_expression2511); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    OP_LE343_tree = 
            	    (Object)adaptor.create(OP_LE343)
            	    ;
            	    adaptor.addChild(root_0, OP_LE343_tree);
            	    }

            	    pushFollow(FOLLOW_shift_expression_in_relational_expression2513);
            	    shift_expression344=shift_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression344.getTree());

            	    }
            	    break;
            	case 4 :
            	    // CSharp4.g:622:24: OP_GE shift_expression
            	    {
            	    OP_GE345=(Token)match(input,OP_GE,FOLLOW_OP_GE_in_relational_expression2538); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    OP_GE345_tree = 
            	    (Object)adaptor.create(OP_GE345)
            	    ;
            	    adaptor.addChild(root_0, OP_GE345_tree);
            	    }

            	    pushFollow(FOLLOW_shift_expression_in_relational_expression2540);
            	    shift_expression346=shift_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression346.getTree());

            	    }
            	    break;
            	case 5 :
            	    // CSharp4.g:623:24: IS isType
            	    {
            	    IS347=(Token)match(input,IS,FOLLOW_IS_in_relational_expression2565); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    IS347_tree = 
            	    (Object)adaptor.create(IS347)
            	    ;
            	    adaptor.addChild(root_0, IS347_tree);
            	    }

            	    pushFollow(FOLLOW_isType_in_relational_expression2567);
            	    isType348=isType();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, isType348.getTree());

            	    }
            	    break;
            	case 6 :
            	    // CSharp4.g:624:24: AS type
            	    {
            	    AS349=(Token)match(input,AS,FOLLOW_AS_in_relational_expression2592); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    AS349_tree = 
            	    (Object)adaptor.create(AS349)
            	    ;
            	    adaptor.addChild(root_0, AS349_tree);
            	    }

            	    pushFollow(FOLLOW_type_in_relational_expression2594);
            	    type350=type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type350.getTree());

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "relational_expression"


    public static class scan_for_shift_generic_precedence_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "scan_for_shift_generic_precedence"
    // CSharp4.g:629:1: scan_for_shift_generic_precedence : IDENTIFIER LT type ( COMMA type )* GT shift_disambiguation_token ;
    public final CSharp4.scan_for_shift_generic_precedence_return scan_for_shift_generic_precedence() throws RecognitionException {
        CSharp4.scan_for_shift_generic_precedence_return retval = new CSharp4.scan_for_shift_generic_precedence_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER351=null;
        Token LT352=null;
        Token COMMA354=null;
        Token GT356=null;
        CSharp4.type_return type353 =null;

        CSharp4.type_return type355 =null;

        CSharp4.shift_disambiguation_token_return shift_disambiguation_token357 =null;


        Object IDENTIFIER351_tree=null;
        Object LT352_tree=null;
        Object COMMA354_tree=null;
        Object GT356_tree=null;

        try {
            // CSharp4.g:630:3: ( IDENTIFIER LT type ( COMMA type )* GT shift_disambiguation_token )
            // CSharp4.g:630:5: IDENTIFIER LT type ( COMMA type )* GT shift_disambiguation_token
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER351=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_scan_for_shift_generic_precedence2630); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER351_tree = 
            (Object)adaptor.create(IDENTIFIER351)
            ;
            adaptor.addChild(root_0, IDENTIFIER351_tree);
            }

            LT352=(Token)match(input,LT,FOLLOW_LT_in_scan_for_shift_generic_precedence2632); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LT352_tree = 
            (Object)adaptor.create(LT352)
            ;
            adaptor.addChild(root_0, LT352_tree);
            }

            pushFollow(FOLLOW_type_in_scan_for_shift_generic_precedence2634);
            type353=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type353.getTree());

            // CSharp4.g:630:24: ( COMMA type )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==COMMA) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // CSharp4.g:630:25: COMMA type
            	    {
            	    COMMA354=(Token)match(input,COMMA,FOLLOW_COMMA_in_scan_for_shift_generic_precedence2637); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA354_tree = 
            	    (Object)adaptor.create(COMMA354)
            	    ;
            	    adaptor.addChild(root_0, COMMA354_tree);
            	    }

            	    pushFollow(FOLLOW_type_in_scan_for_shift_generic_precedence2639);
            	    type355=type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type355.getTree());

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);


            GT356=(Token)match(input,GT,FOLLOW_GT_in_scan_for_shift_generic_precedence2643); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            GT356_tree = 
            (Object)adaptor.create(GT356)
            ;
            adaptor.addChild(root_0, GT356_tree);
            }

            pushFollow(FOLLOW_shift_disambiguation_token_in_scan_for_shift_generic_precedence2645);
            shift_disambiguation_token357=shift_disambiguation_token();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_disambiguation_token357.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "scan_for_shift_generic_precedence"


    public static class shift_disambiguation_token_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "shift_disambiguation_token"
    // CSharp4.g:635:1: shift_disambiguation_token : ( OPEN_PARENS | CLOSE_PARENS | CLOSE_BRACKET | COLON | SEMICOLON | COMMA | DOT | INTERR | OP_EQ | OP_NE | GT );
    public final CSharp4.shift_disambiguation_token_return shift_disambiguation_token() throws RecognitionException {
        CSharp4.shift_disambiguation_token_return retval = new CSharp4.shift_disambiguation_token_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set358=null;

        Object set358_tree=null;

        try {
            // CSharp4.g:636:3: ( OPEN_PARENS | CLOSE_PARENS | CLOSE_BRACKET | COLON | SEMICOLON | COMMA | DOT | INTERR | OP_EQ | OP_NE | GT )
            // CSharp4.g:
            {
            root_0 = (Object)adaptor.nil();


            set358=(Token)input.LT(1);

            if ( (input.LA(1) >= CLOSE_BRACKET && input.LA(1) <= COMMA)||input.LA(1)==DOT||input.LA(1)==GT||input.LA(1)==INTERR||input.LA(1)==OPEN_PARENS||input.LA(1)==OP_EQ||input.LA(1)==OP_NE||input.LA(1)==SEMICOLON ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set358)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "shift_disambiguation_token"


    public static class isType_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "isType"
    // CSharp4.g:639:1: isType : non_nullable_value_type ( ( INTERR is_disambiguation_token )=> INTERR )? ;
    public final CSharp4.isType_return isType() throws RecognitionException {
        CSharp4.isType_return retval = new CSharp4.isType_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token INTERR360=null;
        CSharp4.non_nullable_value_type_return non_nullable_value_type359 =null;


        Object INTERR360_tree=null;

        try {
            // CSharp4.g:640:3: ( non_nullable_value_type ( ( INTERR is_disambiguation_token )=> INTERR )? )
            // CSharp4.g:640:5: non_nullable_value_type ( ( INTERR is_disambiguation_token )=> INTERR )?
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_non_nullable_value_type_in_isType2713);
            non_nullable_value_type359=non_nullable_value_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, non_nullable_value_type359.getTree());

            // CSharp4.g:640:29: ( ( INTERR is_disambiguation_token )=> INTERR )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==INTERR) ) {
                int LA62_1 = input.LA(2);

                if ( (synpred8_CSharp4()) ) {
                    alt62=1;
                }
            }
            switch (alt62) {
                case 1 :
                    // CSharp4.g:640:31: ( INTERR is_disambiguation_token )=> INTERR
                    {
                    INTERR360=(Token)match(input,INTERR,FOLLOW_INTERR_in_isType2725); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERR360_tree = 
                    (Object)adaptor.create(INTERR360)
                    ;
                    adaptor.addChild(root_0, INTERR360_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "isType"


    public static class is_disambiguation_token_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "is_disambiguation_token"
    // CSharp4.g:642:1: is_disambiguation_token : ( CLOSE_PARENS | OP_AND | OP_OR | INTERR );
    public final CSharp4.is_disambiguation_token_return is_disambiguation_token() throws RecognitionException {
        CSharp4.is_disambiguation_token_return retval = new CSharp4.is_disambiguation_token_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set361=null;

        Object set361_tree=null;

        try {
            // CSharp4.g:643:3: ( CLOSE_PARENS | OP_AND | OP_OR | INTERR )
            // CSharp4.g:
            {
            root_0 = (Object)adaptor.nil();


            set361=(Token)input.LT(1);

            if ( input.LA(1)==CLOSE_PARENS||input.LA(1)==INTERR||input.LA(1)==OP_AND||input.LA(1)==OP_OR ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set361)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "is_disambiguation_token"


    public static class equality_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "equality_expression"
    // CSharp4.g:645:1: equality_expression : relational_expression ( ( OP_EQ relational_expression ) | ( OP_NE relational_expression ) )* ;
    public final CSharp4.equality_expression_return equality_expression() throws RecognitionException {
        CSharp4.equality_expression_return retval = new CSharp4.equality_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OP_EQ363=null;
        Token OP_NE365=null;
        CSharp4.relational_expression_return relational_expression362 =null;

        CSharp4.relational_expression_return relational_expression364 =null;

        CSharp4.relational_expression_return relational_expression366 =null;


        Object OP_EQ363_tree=null;
        Object OP_NE365_tree=null;

        try {
            // CSharp4.g:646:2: ( relational_expression ( ( OP_EQ relational_expression ) | ( OP_NE relational_expression ) )* )
            // CSharp4.g:646:4: relational_expression ( ( OP_EQ relational_expression ) | ( OP_NE relational_expression ) )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_relational_expression_in_equality_expression2762);
            relational_expression362=relational_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_expression362.getTree());

            // CSharp4.g:646:26: ( ( OP_EQ relational_expression ) | ( OP_NE relational_expression ) )*
            loop63:
            do {
                int alt63=3;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==OP_EQ) ) {
                    alt63=1;
                }
                else if ( (LA63_0==OP_NE) ) {
                    alt63=2;
                }


                switch (alt63) {
            	case 1 :
            	    // CSharp4.g:646:28: ( OP_EQ relational_expression )
            	    {
            	    // CSharp4.g:646:28: ( OP_EQ relational_expression )
            	    // CSharp4.g:646:30: OP_EQ relational_expression
            	    {
            	    OP_EQ363=(Token)match(input,OP_EQ,FOLLOW_OP_EQ_in_equality_expression2768); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    OP_EQ363_tree = 
            	    (Object)adaptor.create(OP_EQ363)
            	    ;
            	    adaptor.addChild(root_0, OP_EQ363_tree);
            	    }

            	    pushFollow(FOLLOW_relational_expression_in_equality_expression2771);
            	    relational_expression364=relational_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_expression364.getTree());

            	    }


            	    }
            	    break;
            	case 2 :
            	    // CSharp4.g:646:63: ( OP_NE relational_expression )
            	    {
            	    // CSharp4.g:646:63: ( OP_NE relational_expression )
            	    // CSharp4.g:646:65: OP_NE relational_expression
            	    {
            	    OP_NE365=(Token)match(input,OP_NE,FOLLOW_OP_NE_in_equality_expression2779); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    OP_NE365_tree = 
            	    (Object)adaptor.create(OP_NE365)
            	    ;
            	    adaptor.addChild(root_0, OP_NE365_tree);
            	    }

            	    pushFollow(FOLLOW_relational_expression_in_equality_expression2782);
            	    relational_expression366=relational_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_expression366.getTree());

            	    }


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "equality_expression"


    public static class and_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "and_expression"
    // CSharp4.g:648:1: and_expression : equality_expression ( AMP equality_expression )* ;
    public final CSharp4.and_expression_return and_expression() throws RecognitionException {
        CSharp4.and_expression_return retval = new CSharp4.and_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token AMP368=null;
        CSharp4.equality_expression_return equality_expression367 =null;

        CSharp4.equality_expression_return equality_expression369 =null;


        Object AMP368_tree=null;

        try {
            // CSharp4.g:649:2: ( equality_expression ( AMP equality_expression )* )
            // CSharp4.g:649:4: equality_expression ( AMP equality_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_equality_expression_in_and_expression2798);
            equality_expression367=equality_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, equality_expression367.getTree());

            // CSharp4.g:649:24: ( AMP equality_expression )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==AMP) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // CSharp4.g:649:26: AMP equality_expression
            	    {
            	    AMP368=(Token)match(input,AMP,FOLLOW_AMP_in_and_expression2802); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    AMP368_tree = 
            	    (Object)adaptor.create(AMP368)
            	    ;
            	    adaptor.addChild(root_0, AMP368_tree);
            	    }

            	    pushFollow(FOLLOW_equality_expression_in_and_expression2804);
            	    equality_expression369=equality_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, equality_expression369.getTree());

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "and_expression"


    public static class exclusive_or_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "exclusive_or_expression"
    // CSharp4.g:651:1: exclusive_or_expression : and_expression ( CARET and_expression )* ;
    public final CSharp4.exclusive_or_expression_return exclusive_or_expression() throws RecognitionException {
        CSharp4.exclusive_or_expression_return retval = new CSharp4.exclusive_or_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token CARET371=null;
        CSharp4.and_expression_return and_expression370 =null;

        CSharp4.and_expression_return and_expression372 =null;


        Object CARET371_tree=null;

        try {
            // CSharp4.g:652:2: ( and_expression ( CARET and_expression )* )
            // CSharp4.g:652:4: and_expression ( CARET and_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_and_expression_in_exclusive_or_expression2817);
            and_expression370=and_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, and_expression370.getTree());

            // CSharp4.g:652:19: ( CARET and_expression )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==CARET) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // CSharp4.g:652:21: CARET and_expression
            	    {
            	    CARET371=(Token)match(input,CARET,FOLLOW_CARET_in_exclusive_or_expression2821); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    CARET371_tree = 
            	    (Object)adaptor.create(CARET371)
            	    ;
            	    adaptor.addChild(root_0, CARET371_tree);
            	    }

            	    pushFollow(FOLLOW_and_expression_in_exclusive_or_expression2823);
            	    and_expression372=and_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, and_expression372.getTree());

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "exclusive_or_expression"


    public static class inclusive_or_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "inclusive_or_expression"
    // CSharp4.g:654:1: inclusive_or_expression : exclusive_or_expression ( BITWISE_OR exclusive_or_expression )* ;
    public final CSharp4.inclusive_or_expression_return inclusive_or_expression() throws RecognitionException {
        CSharp4.inclusive_or_expression_return retval = new CSharp4.inclusive_or_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token BITWISE_OR374=null;
        CSharp4.exclusive_or_expression_return exclusive_or_expression373 =null;

        CSharp4.exclusive_or_expression_return exclusive_or_expression375 =null;


        Object BITWISE_OR374_tree=null;

        try {
            // CSharp4.g:655:2: ( exclusive_or_expression ( BITWISE_OR exclusive_or_expression )* )
            // CSharp4.g:655:4: exclusive_or_expression ( BITWISE_OR exclusive_or_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression2836);
            exclusive_or_expression373=exclusive_or_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, exclusive_or_expression373.getTree());

            // CSharp4.g:655:28: ( BITWISE_OR exclusive_or_expression )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==BITWISE_OR) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // CSharp4.g:655:30: BITWISE_OR exclusive_or_expression
            	    {
            	    BITWISE_OR374=(Token)match(input,BITWISE_OR,FOLLOW_BITWISE_OR_in_inclusive_or_expression2840); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    BITWISE_OR374_tree = 
            	    (Object)adaptor.create(BITWISE_OR374)
            	    ;
            	    adaptor.addChild(root_0, BITWISE_OR374_tree);
            	    }

            	    pushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression2842);
            	    exclusive_or_expression375=exclusive_or_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exclusive_or_expression375.getTree());

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "inclusive_or_expression"


    public static class conditional_and_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "conditional_and_expression"
    // CSharp4.g:657:1: conditional_and_expression : inclusive_or_expression ( OP_AND inclusive_or_expression )* ;
    public final CSharp4.conditional_and_expression_return conditional_and_expression() throws RecognitionException {
        CSharp4.conditional_and_expression_return retval = new CSharp4.conditional_and_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OP_AND377=null;
        CSharp4.inclusive_or_expression_return inclusive_or_expression376 =null;

        CSharp4.inclusive_or_expression_return inclusive_or_expression378 =null;


        Object OP_AND377_tree=null;

        try {
            // CSharp4.g:658:2: ( inclusive_or_expression ( OP_AND inclusive_or_expression )* )
            // CSharp4.g:658:4: inclusive_or_expression ( OP_AND inclusive_or_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_inclusive_or_expression_in_conditional_and_expression2855);
            inclusive_or_expression376=inclusive_or_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, inclusive_or_expression376.getTree());

            // CSharp4.g:658:28: ( OP_AND inclusive_or_expression )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==OP_AND) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // CSharp4.g:658:30: OP_AND inclusive_or_expression
            	    {
            	    OP_AND377=(Token)match(input,OP_AND,FOLLOW_OP_AND_in_conditional_and_expression2859); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    OP_AND377_tree = 
            	    (Object)adaptor.create(OP_AND377)
            	    ;
            	    adaptor.addChild(root_0, OP_AND377_tree);
            	    }

            	    pushFollow(FOLLOW_inclusive_or_expression_in_conditional_and_expression2861);
            	    inclusive_or_expression378=inclusive_or_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, inclusive_or_expression378.getTree());

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "conditional_and_expression"


    public static class conditional_or_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "conditional_or_expression"
    // CSharp4.g:660:1: conditional_or_expression : conditional_and_expression ( OP_OR conditional_and_expression )* ;
    public final CSharp4.conditional_or_expression_return conditional_or_expression() throws RecognitionException {
        CSharp4.conditional_or_expression_return retval = new CSharp4.conditional_or_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OP_OR380=null;
        CSharp4.conditional_and_expression_return conditional_and_expression379 =null;

        CSharp4.conditional_and_expression_return conditional_and_expression381 =null;


        Object OP_OR380_tree=null;

        try {
            // CSharp4.g:661:2: ( conditional_and_expression ( OP_OR conditional_and_expression )* )
            // CSharp4.g:661:4: conditional_and_expression ( OP_OR conditional_and_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression2874);
            conditional_and_expression379=conditional_and_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_and_expression379.getTree());

            // CSharp4.g:661:31: ( OP_OR conditional_and_expression )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==OP_OR) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // CSharp4.g:661:33: OP_OR conditional_and_expression
            	    {
            	    OP_OR380=(Token)match(input,OP_OR,FOLLOW_OP_OR_in_conditional_or_expression2878); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    OP_OR380_tree = 
            	    (Object)adaptor.create(OP_OR380)
            	    ;
            	    adaptor.addChild(root_0, OP_OR380_tree);
            	    }

            	    pushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression2880);
            	    conditional_and_expression381=conditional_and_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_and_expression381.getTree());

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "conditional_or_expression"


    public static class null_coalescing_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "null_coalescing_expression"
    // CSharp4.g:669:1: null_coalescing_expression : conditional_or_expression ( OP_COALESCING null_coalescing_expression )? ;
    public final CSharp4.null_coalescing_expression_return null_coalescing_expression() throws RecognitionException {
        CSharp4.null_coalescing_expression_return retval = new CSharp4.null_coalescing_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OP_COALESCING383=null;
        CSharp4.conditional_or_expression_return conditional_or_expression382 =null;

        CSharp4.null_coalescing_expression_return null_coalescing_expression384 =null;


        Object OP_COALESCING383_tree=null;

        try {
            // CSharp4.g:670:3: ( conditional_or_expression ( OP_COALESCING null_coalescing_expression )? )
            // CSharp4.g:670:5: conditional_or_expression ( OP_COALESCING null_coalescing_expression )?
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_conditional_or_expression_in_null_coalescing_expression2896);
            conditional_or_expression382=conditional_or_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_or_expression382.getTree());

            // CSharp4.g:670:31: ( OP_COALESCING null_coalescing_expression )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==OP_COALESCING) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // CSharp4.g:670:32: OP_COALESCING null_coalescing_expression
                    {
                    OP_COALESCING383=(Token)match(input,OP_COALESCING,FOLLOW_OP_COALESCING_in_null_coalescing_expression2899); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_COALESCING383_tree = 
                    (Object)adaptor.create(OP_COALESCING383)
                    ;
                    adaptor.addChild(root_0, OP_COALESCING383_tree);
                    }

                    pushFollow(FOLLOW_null_coalescing_expression_in_null_coalescing_expression2901);
                    null_coalescing_expression384=null_coalescing_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, null_coalescing_expression384.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "null_coalescing_expression"


    public static class conditional_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "conditional_expression"
    // CSharp4.g:679:1: conditional_expression : null_coalescing_expression ( INTERR expression COLON expression )? ;
    public final CSharp4.conditional_expression_return conditional_expression() throws RecognitionException {
        CSharp4.conditional_expression_return retval = new CSharp4.conditional_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token INTERR386=null;
        Token COLON388=null;
        CSharp4.null_coalescing_expression_return null_coalescing_expression385 =null;

        CSharp4.expression_return expression387 =null;

        CSharp4.expression_return expression389 =null;


        Object INTERR386_tree=null;
        Object COLON388_tree=null;

        try {
            // CSharp4.g:680:3: ( null_coalescing_expression ( INTERR expression COLON expression )? )
            // CSharp4.g:680:5: null_coalescing_expression ( INTERR expression COLON expression )?
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_null_coalescing_expression_in_conditional_expression2920);
            null_coalescing_expression385=null_coalescing_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, null_coalescing_expression385.getTree());

            // CSharp4.g:680:32: ( INTERR expression COLON expression )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==INTERR) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // CSharp4.g:680:33: INTERR expression COLON expression
                    {
                    INTERR386=(Token)match(input,INTERR,FOLLOW_INTERR_in_conditional_expression2923); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERR386_tree = 
                    (Object)adaptor.create(INTERR386)
                    ;
                    adaptor.addChild(root_0, INTERR386_tree);
                    }

                    pushFollow(FOLLOW_expression_in_conditional_expression2925);
                    expression387=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression387.getTree());

                    COLON388=(Token)match(input,COLON,FOLLOW_COLON_in_conditional_expression2927); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON388_tree = 
                    (Object)adaptor.create(COLON388)
                    ;
                    adaptor.addChild(root_0, COLON388_tree);
                    }

                    pushFollow(FOLLOW_expression_in_conditional_expression2929);
                    expression389=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression389.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "conditional_expression"


    public static class lambda_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "lambda_expression"
    // CSharp4.g:683:1: lambda_expression : anonymous_function_signature right_arrow anonymous_function_body ;
    public final CSharp4.lambda_expression_return lambda_expression() throws RecognitionException {
        CSharp4.lambda_expression_return retval = new CSharp4.lambda_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.anonymous_function_signature_return anonymous_function_signature390 =null;

        CSharp4.right_arrow_return right_arrow391 =null;

        CSharp4.anonymous_function_body_return anonymous_function_body392 =null;



        try {
            // CSharp4.g:684:2: ( anonymous_function_signature right_arrow anonymous_function_body )
            // CSharp4.g:684:4: anonymous_function_signature right_arrow anonymous_function_body
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_anonymous_function_signature_in_lambda_expression2945);
            anonymous_function_signature390=anonymous_function_signature();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_function_signature390.getTree());

            pushFollow(FOLLOW_right_arrow_in_lambda_expression2947);
            right_arrow391=right_arrow();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, right_arrow391.getTree());

            pushFollow(FOLLOW_anonymous_function_body_in_lambda_expression2949);
            anonymous_function_body392=anonymous_function_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_function_body392.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "lambda_expression"


    public static class anonymous_method_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "anonymous_method_expression"
    // CSharp4.g:687:1: anonymous_method_expression : DELEGATE ( explicit_anonymous_function_signature )? block ;
    public final CSharp4.anonymous_method_expression_return anonymous_method_expression() throws RecognitionException {
        CSharp4.anonymous_method_expression_return retval = new CSharp4.anonymous_method_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token DELEGATE393=null;
        CSharp4.explicit_anonymous_function_signature_return explicit_anonymous_function_signature394 =null;

        CSharp4.block_return block395 =null;


        Object DELEGATE393_tree=null;

        try {
            // CSharp4.g:688:2: ( DELEGATE ( explicit_anonymous_function_signature )? block )
            // CSharp4.g:688:4: DELEGATE ( explicit_anonymous_function_signature )? block
            {
            root_0 = (Object)adaptor.nil();


            DELEGATE393=(Token)match(input,DELEGATE,FOLLOW_DELEGATE_in_anonymous_method_expression2962); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            DELEGATE393_tree = 
            (Object)adaptor.create(DELEGATE393)
            ;
            adaptor.addChild(root_0, DELEGATE393_tree);
            }

            // CSharp4.g:688:13: ( explicit_anonymous_function_signature )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==OPEN_PARENS) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // CSharp4.g:688:13: explicit_anonymous_function_signature
                    {
                    pushFollow(FOLLOW_explicit_anonymous_function_signature_in_anonymous_method_expression2964);
                    explicit_anonymous_function_signature394=explicit_anonymous_function_signature();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_signature394.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_block_in_anonymous_method_expression2967);
            block395=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block395.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "anonymous_method_expression"


    public static class anonymous_function_signature_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "anonymous_function_signature"
    // CSharp4.g:697:1: anonymous_function_signature : ( OPEN_PARENS CLOSE_PARENS | OPEN_PARENS explicit_anonymous_function_parameter_list CLOSE_PARENS | OPEN_PARENS implicit_anonymous_function_parameter_list CLOSE_PARENS | implicit_anonymous_function_parameter );
    public final CSharp4.anonymous_function_signature_return anonymous_function_signature() throws RecognitionException {
        CSharp4.anonymous_function_signature_return retval = new CSharp4.anonymous_function_signature_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_PARENS396=null;
        Token CLOSE_PARENS397=null;
        Token OPEN_PARENS398=null;
        Token CLOSE_PARENS400=null;
        Token OPEN_PARENS401=null;
        Token CLOSE_PARENS403=null;
        CSharp4.explicit_anonymous_function_parameter_list_return explicit_anonymous_function_parameter_list399 =null;

        CSharp4.implicit_anonymous_function_parameter_list_return implicit_anonymous_function_parameter_list402 =null;

        CSharp4.implicit_anonymous_function_parameter_return implicit_anonymous_function_parameter404 =null;


        Object OPEN_PARENS396_tree=null;
        Object CLOSE_PARENS397_tree=null;
        Object OPEN_PARENS398_tree=null;
        Object CLOSE_PARENS400_tree=null;
        Object OPEN_PARENS401_tree=null;
        Object CLOSE_PARENS403_tree=null;

        try {
            // CSharp4.g:698:3: ( OPEN_PARENS CLOSE_PARENS | OPEN_PARENS explicit_anonymous_function_parameter_list CLOSE_PARENS | OPEN_PARENS implicit_anonymous_function_parameter_list CLOSE_PARENS | implicit_anonymous_function_parameter )
            int alt72=4;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==OPEN_PARENS) ) {
                switch ( input.LA(2) ) {
                case CLOSE_PARENS:
                    {
                    alt72=1;
                    }
                    break;
                case BOOL:
                case BYTE:
                case CHAR:
                case DECIMAL:
                case DOUBLE:
                case FLOAT:
                case INT:
                case LONG:
                case OBJECT:
                case OUT:
                case REF:
                case SBYTE:
                case SHORT:
                case STRING:
                case UINT:
                case ULONG:
                case USHORT:
                case VOID:
                    {
                    alt72=2;
                    }
                    break;
                case IDENTIFIER:
                    {
                    int LA72_5 = input.LA(3);

                    if ( (LA72_5==DOT||LA72_5==DOUBLE_COLON||LA72_5==IDENTIFIER||LA72_5==INTERR||LA72_5==LT||LA72_5==OPEN_BRACKET||LA72_5==STAR) ) {
                        alt72=2;
                    }
                    else if ( (LA72_5==CLOSE_PARENS||LA72_5==COMMA) ) {
                        alt72=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 72, 5, input);

                        throw nvae;

                    }
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 1, input);

                    throw nvae;

                }

            }
            else if ( (LA72_0==IDENTIFIER) ) {
                alt72=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;

            }
            switch (alt72) {
                case 1 :
                    // CSharp4.g:698:5: OPEN_PARENS CLOSE_PARENS
                    {
                    root_0 = (Object)adaptor.nil();


                    OPEN_PARENS396=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_anonymous_function_signature2983); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS396_tree = 
                    (Object)adaptor.create(OPEN_PARENS396)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS396_tree);
                    }

                    CLOSE_PARENS397=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_anonymous_function_signature2985); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS397_tree = 
                    (Object)adaptor.create(CLOSE_PARENS397)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS397_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:699:5: OPEN_PARENS explicit_anonymous_function_parameter_list CLOSE_PARENS
                    {
                    root_0 = (Object)adaptor.nil();


                    OPEN_PARENS398=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_anonymous_function_signature2991); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS398_tree = 
                    (Object)adaptor.create(OPEN_PARENS398)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS398_tree);
                    }

                    pushFollow(FOLLOW_explicit_anonymous_function_parameter_list_in_anonymous_function_signature2993);
                    explicit_anonymous_function_parameter_list399=explicit_anonymous_function_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter_list399.getTree());

                    CLOSE_PARENS400=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_anonymous_function_signature2995); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS400_tree = 
                    (Object)adaptor.create(CLOSE_PARENS400)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS400_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:700:5: OPEN_PARENS implicit_anonymous_function_parameter_list CLOSE_PARENS
                    {
                    root_0 = (Object)adaptor.nil();


                    OPEN_PARENS401=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_anonymous_function_signature3001); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS401_tree = 
                    (Object)adaptor.create(OPEN_PARENS401)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS401_tree);
                    }

                    pushFollow(FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3003);
                    implicit_anonymous_function_parameter_list402=implicit_anonymous_function_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter_list402.getTree());

                    CLOSE_PARENS403=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_anonymous_function_signature3005); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS403_tree = 
                    (Object)adaptor.create(CLOSE_PARENS403)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS403_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:701:5: implicit_anonymous_function_parameter
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_implicit_anonymous_function_parameter_in_anonymous_function_signature3011);
                    implicit_anonymous_function_parameter404=implicit_anonymous_function_parameter();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter404.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "anonymous_function_signature"


    public static class explicit_anonymous_function_signature_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "explicit_anonymous_function_signature"
    // CSharp4.g:703:1: explicit_anonymous_function_signature : OPEN_PARENS ( explicit_anonymous_function_parameter_list )? CLOSE_PARENS ;
    public final CSharp4.explicit_anonymous_function_signature_return explicit_anonymous_function_signature() throws RecognitionException {
        CSharp4.explicit_anonymous_function_signature_return retval = new CSharp4.explicit_anonymous_function_signature_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_PARENS405=null;
        Token CLOSE_PARENS407=null;
        CSharp4.explicit_anonymous_function_parameter_list_return explicit_anonymous_function_parameter_list406 =null;


        Object OPEN_PARENS405_tree=null;
        Object CLOSE_PARENS407_tree=null;

        try {
            // CSharp4.g:704:2: ( OPEN_PARENS ( explicit_anonymous_function_parameter_list )? CLOSE_PARENS )
            // CSharp4.g:704:4: OPEN_PARENS ( explicit_anonymous_function_parameter_list )? CLOSE_PARENS
            {
            root_0 = (Object)adaptor.nil();


            OPEN_PARENS405=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_explicit_anonymous_function_signature3023); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS405_tree = 
            (Object)adaptor.create(OPEN_PARENS405)
            ;
            adaptor.addChild(root_0, OPEN_PARENS405_tree);
            }

            // CSharp4.g:704:16: ( explicit_anonymous_function_parameter_list )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==BOOL||LA73_0==BYTE||LA73_0==CHAR||LA73_0==DECIMAL||LA73_0==DOUBLE||LA73_0==FLOAT||LA73_0==IDENTIFIER||LA73_0==INT||LA73_0==LONG||LA73_0==OBJECT||LA73_0==OUT||LA73_0==REF||LA73_0==SBYTE||LA73_0==SHORT||LA73_0==STRING||(LA73_0 >= UINT && LA73_0 <= ULONG)||LA73_0==USHORT||LA73_0==VOID) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // CSharp4.g:704:16: explicit_anonymous_function_parameter_list
                    {
                    pushFollow(FOLLOW_explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature3025);
                    explicit_anonymous_function_parameter_list406=explicit_anonymous_function_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter_list406.getTree());

                    }
                    break;

            }


            CLOSE_PARENS407=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_explicit_anonymous_function_signature3028); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS407_tree = 
            (Object)adaptor.create(CLOSE_PARENS407)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS407_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "explicit_anonymous_function_signature"


    public static class explicit_anonymous_function_parameter_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "explicit_anonymous_function_parameter_list"
    // CSharp4.g:706:1: explicit_anonymous_function_parameter_list : explicit_anonymous_function_parameter ( COMMA explicit_anonymous_function_parameter )* ;
    public final CSharp4.explicit_anonymous_function_parameter_list_return explicit_anonymous_function_parameter_list() throws RecognitionException {
        CSharp4.explicit_anonymous_function_parameter_list_return retval = new CSharp4.explicit_anonymous_function_parameter_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA409=null;
        CSharp4.explicit_anonymous_function_parameter_return explicit_anonymous_function_parameter408 =null;

        CSharp4.explicit_anonymous_function_parameter_return explicit_anonymous_function_parameter410 =null;


        Object COMMA409_tree=null;

        try {
            // CSharp4.g:707:2: ( explicit_anonymous_function_parameter ( COMMA explicit_anonymous_function_parameter )* )
            // CSharp4.g:707:4: explicit_anonymous_function_parameter ( COMMA explicit_anonymous_function_parameter )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list3039);
            explicit_anonymous_function_parameter408=explicit_anonymous_function_parameter();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter408.getTree());

            // CSharp4.g:707:42: ( COMMA explicit_anonymous_function_parameter )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==COMMA) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // CSharp4.g:707:44: COMMA explicit_anonymous_function_parameter
            	    {
            	    COMMA409=(Token)match(input,COMMA,FOLLOW_COMMA_in_explicit_anonymous_function_parameter_list3043); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA409_tree = 
            	    (Object)adaptor.create(COMMA409)
            	    ;
            	    adaptor.addChild(root_0, COMMA409_tree);
            	    }

            	    pushFollow(FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list3045);
            	    explicit_anonymous_function_parameter410=explicit_anonymous_function_parameter();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter410.getTree());

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "explicit_anonymous_function_parameter_list"


    public static class explicit_anonymous_function_parameter_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "explicit_anonymous_function_parameter"
    // CSharp4.g:709:1: explicit_anonymous_function_parameter : ( anonymous_function_parameter_modifier )? type IDENTIFIER ;
    public final CSharp4.explicit_anonymous_function_parameter_return explicit_anonymous_function_parameter() throws RecognitionException {
        CSharp4.explicit_anonymous_function_parameter_return retval = new CSharp4.explicit_anonymous_function_parameter_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER413=null;
        CSharp4.anonymous_function_parameter_modifier_return anonymous_function_parameter_modifier411 =null;

        CSharp4.type_return type412 =null;


        Object IDENTIFIER413_tree=null;

        try {
            // CSharp4.g:710:2: ( ( anonymous_function_parameter_modifier )? type IDENTIFIER )
            // CSharp4.g:710:4: ( anonymous_function_parameter_modifier )? type IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:710:4: ( anonymous_function_parameter_modifier )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==OUT||LA75_0==REF) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // CSharp4.g:710:4: anonymous_function_parameter_modifier
                    {
                    pushFollow(FOLLOW_anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter3058);
                    anonymous_function_parameter_modifier411=anonymous_function_parameter_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_function_parameter_modifier411.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_type_in_explicit_anonymous_function_parameter3061);
            type412=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type412.getTree());

            IDENTIFIER413=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_explicit_anonymous_function_parameter3063); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER413_tree = 
            (Object)adaptor.create(IDENTIFIER413)
            ;
            adaptor.addChild(root_0, IDENTIFIER413_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "explicit_anonymous_function_parameter"


    public static class anonymous_function_parameter_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "anonymous_function_parameter_modifier"
    // CSharp4.g:712:1: anonymous_function_parameter_modifier : ( REF | OUT );
    public final CSharp4.anonymous_function_parameter_modifier_return anonymous_function_parameter_modifier() throws RecognitionException {
        CSharp4.anonymous_function_parameter_modifier_return retval = new CSharp4.anonymous_function_parameter_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set414=null;

        Object set414_tree=null;

        try {
            // CSharp4.g:713:2: ( REF | OUT )
            // CSharp4.g:
            {
            root_0 = (Object)adaptor.nil();


            set414=(Token)input.LT(1);

            if ( input.LA(1)==OUT||input.LA(1)==REF ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set414)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "anonymous_function_parameter_modifier"


    public static class implicit_anonymous_function_signature_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "implicit_anonymous_function_signature"
    // CSharp4.g:716:1: implicit_anonymous_function_signature : ( OPEN_PARENS ( implicit_anonymous_function_parameter_list )? CLOSE_PARENS | implicit_anonymous_function_parameter );
    public final CSharp4.implicit_anonymous_function_signature_return implicit_anonymous_function_signature() throws RecognitionException {
        CSharp4.implicit_anonymous_function_signature_return retval = new CSharp4.implicit_anonymous_function_signature_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_PARENS415=null;
        Token CLOSE_PARENS417=null;
        CSharp4.implicit_anonymous_function_parameter_list_return implicit_anonymous_function_parameter_list416 =null;

        CSharp4.implicit_anonymous_function_parameter_return implicit_anonymous_function_parameter418 =null;


        Object OPEN_PARENS415_tree=null;
        Object CLOSE_PARENS417_tree=null;

        try {
            // CSharp4.g:717:2: ( OPEN_PARENS ( implicit_anonymous_function_parameter_list )? CLOSE_PARENS | implicit_anonymous_function_parameter )
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==OPEN_PARENS) ) {
                alt77=1;
            }
            else if ( (LA77_0==IDENTIFIER) ) {
                alt77=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;

            }
            switch (alt77) {
                case 1 :
                    // CSharp4.g:717:4: OPEN_PARENS ( implicit_anonymous_function_parameter_list )? CLOSE_PARENS
                    {
                    root_0 = (Object)adaptor.nil();


                    OPEN_PARENS415=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_implicit_anonymous_function_signature3090); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS415_tree = 
                    (Object)adaptor.create(OPEN_PARENS415)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS415_tree);
                    }

                    // CSharp4.g:717:16: ( implicit_anonymous_function_parameter_list )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( (LA76_0==IDENTIFIER) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            // CSharp4.g:717:16: implicit_anonymous_function_parameter_list
                            {
                            pushFollow(FOLLOW_implicit_anonymous_function_parameter_list_in_implicit_anonymous_function_signature3092);
                            implicit_anonymous_function_parameter_list416=implicit_anonymous_function_parameter_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter_list416.getTree());

                            }
                            break;

                    }


                    CLOSE_PARENS417=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_implicit_anonymous_function_signature3095); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS417_tree = 
                    (Object)adaptor.create(CLOSE_PARENS417)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS417_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:718:4: implicit_anonymous_function_parameter
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_signature3100);
                    implicit_anonymous_function_parameter418=implicit_anonymous_function_parameter();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter418.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "implicit_anonymous_function_signature"


    public static class implicit_anonymous_function_parameter_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "implicit_anonymous_function_parameter_list"
    // CSharp4.g:720:1: implicit_anonymous_function_parameter_list : implicit_anonymous_function_parameter ( COMMA implicit_anonymous_function_parameter )* ;
    public final CSharp4.implicit_anonymous_function_parameter_list_return implicit_anonymous_function_parameter_list() throws RecognitionException {
        CSharp4.implicit_anonymous_function_parameter_list_return retval = new CSharp4.implicit_anonymous_function_parameter_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA420=null;
        CSharp4.implicit_anonymous_function_parameter_return implicit_anonymous_function_parameter419 =null;

        CSharp4.implicit_anonymous_function_parameter_return implicit_anonymous_function_parameter421 =null;


        Object COMMA420_tree=null;

        try {
            // CSharp4.g:721:2: ( implicit_anonymous_function_parameter ( COMMA implicit_anonymous_function_parameter )* )
            // CSharp4.g:721:4: implicit_anonymous_function_parameter ( COMMA implicit_anonymous_function_parameter )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3111);
            implicit_anonymous_function_parameter419=implicit_anonymous_function_parameter();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter419.getTree());

            // CSharp4.g:721:42: ( COMMA implicit_anonymous_function_parameter )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==COMMA) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // CSharp4.g:721:44: COMMA implicit_anonymous_function_parameter
            	    {
            	    COMMA420=(Token)match(input,COMMA,FOLLOW_COMMA_in_implicit_anonymous_function_parameter_list3115); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA420_tree = 
            	    (Object)adaptor.create(COMMA420)
            	    ;
            	    adaptor.addChild(root_0, COMMA420_tree);
            	    }

            	    pushFollow(FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3117);
            	    implicit_anonymous_function_parameter421=implicit_anonymous_function_parameter();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter421.getTree());

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "implicit_anonymous_function_parameter_list"


    public static class implicit_anonymous_function_parameter_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "implicit_anonymous_function_parameter"
    // CSharp4.g:724:1: implicit_anonymous_function_parameter : IDENTIFIER ;
    public final CSharp4.implicit_anonymous_function_parameter_return implicit_anonymous_function_parameter() throws RecognitionException {
        CSharp4.implicit_anonymous_function_parameter_return retval = new CSharp4.implicit_anonymous_function_parameter_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER422=null;

        Object IDENTIFIER422_tree=null;

        try {
            // CSharp4.g:725:2: ( IDENTIFIER )
            // CSharp4.g:725:4: IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER422=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_implicit_anonymous_function_parameter3132); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER422_tree = 
            (Object)adaptor.create(IDENTIFIER422)
            ;
            adaptor.addChild(root_0, IDENTIFIER422_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "implicit_anonymous_function_parameter"


    public static class anonymous_function_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "anonymous_function_body"
    // CSharp4.g:727:1: anonymous_function_body : ( expression | block );
    public final CSharp4.anonymous_function_body_return anonymous_function_body() throws RecognitionException {
        CSharp4.anonymous_function_body_return retval = new CSharp4.anonymous_function_body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.expression_return expression423 =null;

        CSharp4.block_return block424 =null;



        try {
            // CSharp4.g:728:2: ( expression | block )
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==AMP||(LA79_0 >= BANG && LA79_0 <= BASE)||LA79_0==BOOL||LA79_0==BYTE||(LA79_0 >= CHAR && LA79_0 <= CHECKED)||LA79_0==DECIMAL||(LA79_0 >= DEFAULT && LA79_0 <= DELEGATE)||LA79_0==DOUBLE||LA79_0==FALSE||LA79_0==FLOAT||LA79_0==IDENTIFIER||(LA79_0 >= INT && LA79_0 <= INTEGER_LITERAL)||LA79_0==LONG||LA79_0==MINUS||LA79_0==NEW||LA79_0==NULL||LA79_0==OBJECT||LA79_0==OPEN_PARENS||LA79_0==OP_DEC||LA79_0==OP_INC||LA79_0==PLUS||LA79_0==REAL_LITERAL||LA79_0==SBYTE||LA79_0==SHORT||LA79_0==SIZEOF||LA79_0==STAR||(LA79_0 >= STRING && LA79_0 <= STRING_LITERAL)||LA79_0==THIS||(LA79_0 >= TILDE && LA79_0 <= TRUE)||(LA79_0 >= TYPEOF && LA79_0 <= UNCHECKED)||LA79_0==USHORT) ) {
                alt79=1;
            }
            else if ( (LA79_0==OPEN_BRACE) ) {
                alt79=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;

            }
            switch (alt79) {
                case 1 :
                    // CSharp4.g:728:4: expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_expression_in_anonymous_function_body3143);
                    expression423=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression423.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:729:4: block
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_block_in_anonymous_function_body3148);
                    block424=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block424.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "anonymous_function_body"


    public static class query_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "query_expression"
    // CSharp4.g:732:1: query_expression : from_clause query_body ;
    public final CSharp4.query_expression_return query_expression() throws RecognitionException {
        CSharp4.query_expression_return retval = new CSharp4.query_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.from_clause_return from_clause425 =null;

        CSharp4.query_body_return query_body426 =null;



        try {
            // CSharp4.g:733:2: ( from_clause query_body )
            // CSharp4.g:733:4: from_clause query_body
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_from_clause_in_query_expression3161);
            from_clause425=from_clause();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, from_clause425.getTree());

            pushFollow(FOLLOW_query_body_in_query_expression3163);
            query_body426=query_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body426.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "query_expression"


    public static class from_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "from_clause"
    // CSharp4.g:735:1: from_clause : from_contextual_keyword ( ( type IDENTIFIER IN )=> type )? IDENTIFIER IN expression ;
    public final CSharp4.from_clause_return from_clause() throws RecognitionException {
        CSharp4.from_clause_return retval = new CSharp4.from_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER429=null;
        Token IN430=null;
        CSharp4.from_contextual_keyword_return from_contextual_keyword427 =null;

        CSharp4.type_return type428 =null;

        CSharp4.expression_return expression431 =null;


        Object IDENTIFIER429_tree=null;
        Object IN430_tree=null;

        try {
            // CSharp4.g:736:2: ( from_contextual_keyword ( ( type IDENTIFIER IN )=> type )? IDENTIFIER IN expression )
            // CSharp4.g:736:4: from_contextual_keyword ( ( type IDENTIFIER IN )=> type )? IDENTIFIER IN expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_from_contextual_keyword_in_from_clause3174);
            from_contextual_keyword427=from_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, from_contextual_keyword427.getTree());

            // CSharp4.g:736:28: ( ( type IDENTIFIER IN )=> type )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==BYTE||LA80_0==CHAR||LA80_0==INT||LA80_0==LONG||LA80_0==SBYTE||LA80_0==SHORT||(LA80_0 >= UINT && LA80_0 <= ULONG)||LA80_0==USHORT) && (synpred9_CSharp4())) {
                alt80=1;
            }
            else if ( (LA80_0==DOUBLE||LA80_0==FLOAT) && (synpred9_CSharp4())) {
                alt80=1;
            }
            else if ( (LA80_0==DECIMAL) && (synpred9_CSharp4())) {
                alt80=1;
            }
            else if ( (LA80_0==BOOL) && (synpred9_CSharp4())) {
                alt80=1;
            }
            else if ( (LA80_0==IDENTIFIER) ) {
                int LA80_5 = input.LA(2);

                if ( (LA80_5==DOUBLE_COLON) && (synpred9_CSharp4())) {
                    alt80=1;
                }
                else if ( (LA80_5==LT) && (synpred9_CSharp4())) {
                    alt80=1;
                }
                else if ( (LA80_5==DOT) && (synpred9_CSharp4())) {
                    alt80=1;
                }
                else if ( (LA80_5==INTERR) && (synpred9_CSharp4())) {
                    alt80=1;
                }
                else if ( (LA80_5==OPEN_BRACKET) && (synpred9_CSharp4())) {
                    alt80=1;
                }
                else if ( (LA80_5==STAR) && (synpred9_CSharp4())) {
                    alt80=1;
                }
                else if ( (LA80_5==IDENTIFIER) && (synpred9_CSharp4())) {
                    alt80=1;
                }
            }
            else if ( (LA80_0==OBJECT) && (synpred9_CSharp4())) {
                alt80=1;
            }
            else if ( (LA80_0==STRING) && (synpred9_CSharp4())) {
                alt80=1;
            }
            else if ( (LA80_0==VOID) && (synpred9_CSharp4())) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // CSharp4.g:736:29: ( type IDENTIFIER IN )=> type
                    {
                    pushFollow(FOLLOW_type_in_from_clause3187);
                    type428=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type428.getTree());

                    }
                    break;

            }


            IDENTIFIER429=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_from_clause3191); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER429_tree = 
            (Object)adaptor.create(IDENTIFIER429)
            ;
            adaptor.addChild(root_0, IDENTIFIER429_tree);
            }

            IN430=(Token)match(input,IN,FOLLOW_IN_in_from_clause3193); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IN430_tree = 
            (Object)adaptor.create(IN430)
            ;
            adaptor.addChild(root_0, IN430_tree);
            }

            pushFollow(FOLLOW_expression_in_from_clause3195);
            expression431=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression431.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "from_clause"


    public static class query_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "query_body"
    // CSharp4.g:743:1: query_body : ( query_body_clauses )? select_or_group_clause ( ( into_contextual_keyword )=> query_continuation )? ;
    public final CSharp4.query_body_return query_body() throws RecognitionException {
        CSharp4.query_body_return retval = new CSharp4.query_body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.query_body_clauses_return query_body_clauses432 =null;

        CSharp4.select_or_group_clause_return select_or_group_clause433 =null;

        CSharp4.query_continuation_return query_continuation434 =null;



        try {
            // CSharp4.g:744:3: ( ( query_body_clauses )? select_or_group_clause ( ( into_contextual_keyword )=> query_continuation )? )
            // CSharp4.g:744:5: ( query_body_clauses )? select_or_group_clause ( ( into_contextual_keyword )=> query_continuation )?
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:744:5: ( query_body_clauses )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==IDENTIFIER) ) {
                int LA81_1 = input.LA(2);

                if ( (((input.LT(1).getText().equals("where"))||(input.LT(1).getText().equals("orderby"))||(input.LT(1).getText().equals("let"))||(input.LT(1).getText().equals("join"))||(input.LT(1).getText().equals("from")))) ) {
                    alt81=1;
                }
            }
            switch (alt81) {
                case 1 :
                    // CSharp4.g:744:5: query_body_clauses
                    {
                    pushFollow(FOLLOW_query_body_clauses_in_query_body3209);
                    query_body_clauses432=query_body_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body_clauses432.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_select_or_group_clause_in_query_body3212);
            select_or_group_clause433=select_or_group_clause();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, select_or_group_clause433.getTree());

            // CSharp4.g:744:48: ( ( into_contextual_keyword )=> query_continuation )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==IDENTIFIER) ) {
                int LA82_1 = input.LA(2);

                if ( (((synpred10_CSharp4()&&synpred10_CSharp4())&&(input.LT(1).getText().equals("into")))) ) {
                    alt82=1;
                }
            }
            switch (alt82) {
                case 1 :
                    // CSharp4.g:744:49: ( into_contextual_keyword )=> query_continuation
                    {
                    pushFollow(FOLLOW_query_continuation_in_query_body3221);
                    query_continuation434=query_continuation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, query_continuation434.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "query_body"


    public static class query_body_clauses_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "query_body_clauses"
    // CSharp4.g:746:1: query_body_clauses : query_body_clause ( query_body_clause )* ;
    public final CSharp4.query_body_clauses_return query_body_clauses() throws RecognitionException {
        CSharp4.query_body_clauses_return retval = new CSharp4.query_body_clauses_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.query_body_clause_return query_body_clause435 =null;

        CSharp4.query_body_clause_return query_body_clause436 =null;



        try {
            // CSharp4.g:747:2: ( query_body_clause ( query_body_clause )* )
            // CSharp4.g:747:4: query_body_clause ( query_body_clause )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_query_body_clause_in_query_body_clauses3235);
            query_body_clause435=query_body_clause();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body_clause435.getTree());

            // CSharp4.g:747:22: ( query_body_clause )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==IDENTIFIER) ) {
                    int LA83_1 = input.LA(2);

                    if ( (((input.LT(1).getText().equals("where"))||(input.LT(1).getText().equals("orderby"))||(input.LT(1).getText().equals("let"))||(input.LT(1).getText().equals("join"))||(input.LT(1).getText().equals("from")))) ) {
                        alt83=1;
                    }


                }


                switch (alt83) {
            	case 1 :
            	    // CSharp4.g:747:24: query_body_clause
            	    {
            	    pushFollow(FOLLOW_query_body_clause_in_query_body_clauses3239);
            	    query_body_clause436=query_body_clause();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body_clause436.getTree());

            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "query_body_clauses"


    public static class query_body_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "query_body_clause"
    // CSharp4.g:759:1: query_body_clause : ( from_clause | let_clause | where_clause | combined_join_clause | orderby_clause );
    public final CSharp4.query_body_clause_return query_body_clause() throws RecognitionException {
        CSharp4.query_body_clause_return retval = new CSharp4.query_body_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.from_clause_return from_clause437 =null;

        CSharp4.let_clause_return let_clause438 =null;

        CSharp4.where_clause_return where_clause439 =null;

        CSharp4.combined_join_clause_return combined_join_clause440 =null;

        CSharp4.orderby_clause_return orderby_clause441 =null;



        try {
            // CSharp4.g:760:3: ( from_clause | let_clause | where_clause | combined_join_clause | orderby_clause )
            int alt84=5;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==IDENTIFIER) ) {
                int LA84_1 = input.LA(2);

                if ( ((input.LT(1).getText().equals("from"))) ) {
                    alt84=1;
                }
                else if ( ((input.LT(1).getText().equals("let"))) ) {
                    alt84=2;
                }
                else if ( ((input.LT(1).getText().equals("where"))) ) {
                    alt84=3;
                }
                else if ( ((input.LT(1).getText().equals("join"))) ) {
                    alt84=4;
                }
                else if ( ((input.LT(1).getText().equals("orderby"))) ) {
                    alt84=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;

            }
            switch (alt84) {
                case 1 :
                    // CSharp4.g:760:5: from_clause
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_from_clause_in_query_body_clause3256);
                    from_clause437=from_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, from_clause437.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:761:5: let_clause
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_let_clause_in_query_body_clause3262);
                    let_clause438=let_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, let_clause438.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:762:5: where_clause
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_where_clause_in_query_body_clause3268);
                    where_clause439=where_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, where_clause439.getTree());

                    }
                    break;
                case 4 :
                    // CSharp4.g:763:5: combined_join_clause
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_combined_join_clause_in_query_body_clause3274);
                    combined_join_clause440=combined_join_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, combined_join_clause440.getTree());

                    }
                    break;
                case 5 :
                    // CSharp4.g:764:5: orderby_clause
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_orderby_clause_in_query_body_clause3280);
                    orderby_clause441=orderby_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, orderby_clause441.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "query_body_clause"


    public static class let_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "let_clause"
    // CSharp4.g:766:1: let_clause : let_contextual_keyword IDENTIFIER ASSIGNMENT expression ;
    public final CSharp4.let_clause_return let_clause() throws RecognitionException {
        CSharp4.let_clause_return retval = new CSharp4.let_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER443=null;
        Token ASSIGNMENT444=null;
        CSharp4.let_contextual_keyword_return let_contextual_keyword442 =null;

        CSharp4.expression_return expression445 =null;


        Object IDENTIFIER443_tree=null;
        Object ASSIGNMENT444_tree=null;

        try {
            // CSharp4.g:767:2: ( let_contextual_keyword IDENTIFIER ASSIGNMENT expression )
            // CSharp4.g:767:4: let_contextual_keyword IDENTIFIER ASSIGNMENT expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_let_contextual_keyword_in_let_clause3292);
            let_contextual_keyword442=let_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, let_contextual_keyword442.getTree());

            IDENTIFIER443=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_let_clause3294); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER443_tree = 
            (Object)adaptor.create(IDENTIFIER443)
            ;
            adaptor.addChild(root_0, IDENTIFIER443_tree);
            }

            ASSIGNMENT444=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_let_clause3296); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGNMENT444_tree = 
            (Object)adaptor.create(ASSIGNMENT444)
            ;
            adaptor.addChild(root_0, ASSIGNMENT444_tree);
            }

            pushFollow(FOLLOW_expression_in_let_clause3298);
            expression445=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression445.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "let_clause"


    public static class where_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "where_clause"
    // CSharp4.g:769:1: where_clause : where_contextual_keyword boolean_expression ;
    public final CSharp4.where_clause_return where_clause() throws RecognitionException {
        CSharp4.where_clause_return retval = new CSharp4.where_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.where_contextual_keyword_return where_contextual_keyword446 =null;

        CSharp4.boolean_expression_return boolean_expression447 =null;



        try {
            // CSharp4.g:770:2: ( where_contextual_keyword boolean_expression )
            // CSharp4.g:770:4: where_contextual_keyword boolean_expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_where_contextual_keyword_in_where_clause3309);
            where_contextual_keyword446=where_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, where_contextual_keyword446.getTree());

            pushFollow(FOLLOW_boolean_expression_in_where_clause3311);
            boolean_expression447=boolean_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression447.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "where_clause"


    public static class join_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "join_clause"
    // CSharp4.g:772:1: join_clause : join_contextual_keyword ( type )? IDENTIFIER IN expression on_contextual_keyword expression equals_contextual_keyword expression ;
    public final CSharp4.join_clause_return join_clause() throws RecognitionException {
        CSharp4.join_clause_return retval = new CSharp4.join_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER450=null;
        Token IN451=null;
        CSharp4.join_contextual_keyword_return join_contextual_keyword448 =null;

        CSharp4.type_return type449 =null;

        CSharp4.expression_return expression452 =null;

        CSharp4.on_contextual_keyword_return on_contextual_keyword453 =null;

        CSharp4.expression_return expression454 =null;

        CSharp4.equals_contextual_keyword_return equals_contextual_keyword455 =null;

        CSharp4.expression_return expression456 =null;


        Object IDENTIFIER450_tree=null;
        Object IN451_tree=null;

        try {
            // CSharp4.g:773:2: ( join_contextual_keyword ( type )? IDENTIFIER IN expression on_contextual_keyword expression equals_contextual_keyword expression )
            // CSharp4.g:773:4: join_contextual_keyword ( type )? IDENTIFIER IN expression on_contextual_keyword expression equals_contextual_keyword expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_join_contextual_keyword_in_join_clause3322);
            join_contextual_keyword448=join_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, join_contextual_keyword448.getTree());

            // CSharp4.g:773:28: ( type )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==BOOL||LA85_0==BYTE||LA85_0==CHAR||LA85_0==DECIMAL||LA85_0==DOUBLE||LA85_0==FLOAT||LA85_0==INT||LA85_0==LONG||LA85_0==OBJECT||LA85_0==SBYTE||LA85_0==SHORT||LA85_0==STRING||(LA85_0 >= UINT && LA85_0 <= ULONG)||LA85_0==USHORT||LA85_0==VOID) ) {
                alt85=1;
            }
            else if ( (LA85_0==IDENTIFIER) ) {
                int LA85_2 = input.LA(2);

                if ( (LA85_2==DOT||LA85_2==DOUBLE_COLON||LA85_2==IDENTIFIER||LA85_2==INTERR||LA85_2==LT||LA85_2==OPEN_BRACKET||LA85_2==STAR) ) {
                    alt85=1;
                }
            }
            switch (alt85) {
                case 1 :
                    // CSharp4.g:773:28: type
                    {
                    pushFollow(FOLLOW_type_in_join_clause3324);
                    type449=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type449.getTree());

                    }
                    break;

            }


            IDENTIFIER450=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_join_clause3327); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER450_tree = 
            (Object)adaptor.create(IDENTIFIER450)
            ;
            adaptor.addChild(root_0, IDENTIFIER450_tree);
            }

            IN451=(Token)match(input,IN,FOLLOW_IN_in_join_clause3329); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IN451_tree = 
            (Object)adaptor.create(IN451)
            ;
            adaptor.addChild(root_0, IN451_tree);
            }

            pushFollow(FOLLOW_expression_in_join_clause3331);
            expression452=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression452.getTree());

            pushFollow(FOLLOW_on_contextual_keyword_in_join_clause3333);
            on_contextual_keyword453=on_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, on_contextual_keyword453.getTree());

            pushFollow(FOLLOW_expression_in_join_clause3335);
            expression454=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression454.getTree());

            pushFollow(FOLLOW_equals_contextual_keyword_in_join_clause3337);
            equals_contextual_keyword455=equals_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, equals_contextual_keyword455.getTree());

            pushFollow(FOLLOW_expression_in_join_clause3339);
            expression456=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression456.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "join_clause"


    public static class join_into_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "join_into_clause"
    // CSharp4.g:775:1: join_into_clause : join_contextual_keyword ( type )? IDENTIFIER IN expression on_contextual_keyword expression equals_contextual_keyword expression into_contextual_keyword IDENTIFIER ;
    public final CSharp4.join_into_clause_return join_into_clause() throws RecognitionException {
        CSharp4.join_into_clause_return retval = new CSharp4.join_into_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER459=null;
        Token IN460=null;
        Token IDENTIFIER467=null;
        CSharp4.join_contextual_keyword_return join_contextual_keyword457 =null;

        CSharp4.type_return type458 =null;

        CSharp4.expression_return expression461 =null;

        CSharp4.on_contextual_keyword_return on_contextual_keyword462 =null;

        CSharp4.expression_return expression463 =null;

        CSharp4.equals_contextual_keyword_return equals_contextual_keyword464 =null;

        CSharp4.expression_return expression465 =null;

        CSharp4.into_contextual_keyword_return into_contextual_keyword466 =null;


        Object IDENTIFIER459_tree=null;
        Object IN460_tree=null;
        Object IDENTIFIER467_tree=null;

        try {
            // CSharp4.g:776:2: ( join_contextual_keyword ( type )? IDENTIFIER IN expression on_contextual_keyword expression equals_contextual_keyword expression into_contextual_keyword IDENTIFIER )
            // CSharp4.g:776:4: join_contextual_keyword ( type )? IDENTIFIER IN expression on_contextual_keyword expression equals_contextual_keyword expression into_contextual_keyword IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_join_contextual_keyword_in_join_into_clause3350);
            join_contextual_keyword457=join_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, join_contextual_keyword457.getTree());

            // CSharp4.g:776:28: ( type )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==BOOL||LA86_0==BYTE||LA86_0==CHAR||LA86_0==DECIMAL||LA86_0==DOUBLE||LA86_0==FLOAT||LA86_0==INT||LA86_0==LONG||LA86_0==OBJECT||LA86_0==SBYTE||LA86_0==SHORT||LA86_0==STRING||(LA86_0 >= UINT && LA86_0 <= ULONG)||LA86_0==USHORT||LA86_0==VOID) ) {
                alt86=1;
            }
            else if ( (LA86_0==IDENTIFIER) ) {
                int LA86_2 = input.LA(2);

                if ( (LA86_2==DOT||LA86_2==DOUBLE_COLON||LA86_2==IDENTIFIER||LA86_2==INTERR||LA86_2==LT||LA86_2==OPEN_BRACKET||LA86_2==STAR) ) {
                    alt86=1;
                }
            }
            switch (alt86) {
                case 1 :
                    // CSharp4.g:776:28: type
                    {
                    pushFollow(FOLLOW_type_in_join_into_clause3352);
                    type458=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type458.getTree());

                    }
                    break;

            }


            IDENTIFIER459=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_join_into_clause3355); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER459_tree = 
            (Object)adaptor.create(IDENTIFIER459)
            ;
            adaptor.addChild(root_0, IDENTIFIER459_tree);
            }

            IN460=(Token)match(input,IN,FOLLOW_IN_in_join_into_clause3357); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IN460_tree = 
            (Object)adaptor.create(IN460)
            ;
            adaptor.addChild(root_0, IN460_tree);
            }

            pushFollow(FOLLOW_expression_in_join_into_clause3359);
            expression461=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression461.getTree());

            pushFollow(FOLLOW_on_contextual_keyword_in_join_into_clause3361);
            on_contextual_keyword462=on_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, on_contextual_keyword462.getTree());

            pushFollow(FOLLOW_expression_in_join_into_clause3363);
            expression463=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression463.getTree());

            pushFollow(FOLLOW_equals_contextual_keyword_in_join_into_clause3365);
            equals_contextual_keyword464=equals_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, equals_contextual_keyword464.getTree());

            pushFollow(FOLLOW_expression_in_join_into_clause3367);
            expression465=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression465.getTree());

            pushFollow(FOLLOW_into_contextual_keyword_in_join_into_clause3369);
            into_contextual_keyword466=into_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, into_contextual_keyword466.getTree());

            IDENTIFIER467=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_join_into_clause3371); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER467_tree = 
            (Object)adaptor.create(IDENTIFIER467)
            ;
            adaptor.addChild(root_0, IDENTIFIER467_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "join_into_clause"


    public static class combined_join_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "combined_join_clause"
    // CSharp4.g:779:1: combined_join_clause : join_contextual_keyword ( type )? IDENTIFIER IN expression on_contextual_keyword expression equals_contextual_keyword expression ( into_contextual_keyword IDENTIFIER )? ;
    public final CSharp4.combined_join_clause_return combined_join_clause() throws RecognitionException {
        CSharp4.combined_join_clause_return retval = new CSharp4.combined_join_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER470=null;
        Token IN471=null;
        Token IDENTIFIER478=null;
        CSharp4.join_contextual_keyword_return join_contextual_keyword468 =null;

        CSharp4.type_return type469 =null;

        CSharp4.expression_return expression472 =null;

        CSharp4.on_contextual_keyword_return on_contextual_keyword473 =null;

        CSharp4.expression_return expression474 =null;

        CSharp4.equals_contextual_keyword_return equals_contextual_keyword475 =null;

        CSharp4.expression_return expression476 =null;

        CSharp4.into_contextual_keyword_return into_contextual_keyword477 =null;


        Object IDENTIFIER470_tree=null;
        Object IN471_tree=null;
        Object IDENTIFIER478_tree=null;

        try {
            // CSharp4.g:780:3: ( join_contextual_keyword ( type )? IDENTIFIER IN expression on_contextual_keyword expression equals_contextual_keyword expression ( into_contextual_keyword IDENTIFIER )? )
            // CSharp4.g:780:5: join_contextual_keyword ( type )? IDENTIFIER IN expression on_contextual_keyword expression equals_contextual_keyword expression ( into_contextual_keyword IDENTIFIER )?
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_join_contextual_keyword_in_combined_join_clause3383);
            join_contextual_keyword468=join_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, join_contextual_keyword468.getTree());

            // CSharp4.g:780:29: ( type )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==BOOL||LA87_0==BYTE||LA87_0==CHAR||LA87_0==DECIMAL||LA87_0==DOUBLE||LA87_0==FLOAT||LA87_0==INT||LA87_0==LONG||LA87_0==OBJECT||LA87_0==SBYTE||LA87_0==SHORT||LA87_0==STRING||(LA87_0 >= UINT && LA87_0 <= ULONG)||LA87_0==USHORT||LA87_0==VOID) ) {
                alt87=1;
            }
            else if ( (LA87_0==IDENTIFIER) ) {
                int LA87_2 = input.LA(2);

                if ( (LA87_2==DOT||LA87_2==DOUBLE_COLON||LA87_2==IDENTIFIER||LA87_2==INTERR||LA87_2==LT||LA87_2==OPEN_BRACKET||LA87_2==STAR) ) {
                    alt87=1;
                }
            }
            switch (alt87) {
                case 1 :
                    // CSharp4.g:780:29: type
                    {
                    pushFollow(FOLLOW_type_in_combined_join_clause3385);
                    type469=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type469.getTree());

                    }
                    break;

            }


            IDENTIFIER470=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_combined_join_clause3388); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER470_tree = 
            (Object)adaptor.create(IDENTIFIER470)
            ;
            adaptor.addChild(root_0, IDENTIFIER470_tree);
            }

            IN471=(Token)match(input,IN,FOLLOW_IN_in_combined_join_clause3390); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IN471_tree = 
            (Object)adaptor.create(IN471)
            ;
            adaptor.addChild(root_0, IN471_tree);
            }

            pushFollow(FOLLOW_expression_in_combined_join_clause3392);
            expression472=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression472.getTree());

            pushFollow(FOLLOW_on_contextual_keyword_in_combined_join_clause3394);
            on_contextual_keyword473=on_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, on_contextual_keyword473.getTree());

            pushFollow(FOLLOW_expression_in_combined_join_clause3396);
            expression474=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression474.getTree());

            pushFollow(FOLLOW_equals_contextual_keyword_in_combined_join_clause3398);
            equals_contextual_keyword475=equals_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, equals_contextual_keyword475.getTree());

            pushFollow(FOLLOW_expression_in_combined_join_clause3400);
            expression476=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression476.getTree());

            // CSharp4.g:780:130: ( into_contextual_keyword IDENTIFIER )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==IDENTIFIER) ) {
                int LA88_1 = input.LA(2);

                if ( (LA88_1==IDENTIFIER) ) {
                    int LA88_2 = input.LA(3);

                    if ( ((input.LT(1).getText().equals("into"))) ) {
                        alt88=1;
                    }
                }
            }
            switch (alt88) {
                case 1 :
                    // CSharp4.g:780:131: into_contextual_keyword IDENTIFIER
                    {
                    pushFollow(FOLLOW_into_contextual_keyword_in_combined_join_clause3403);
                    into_contextual_keyword477=into_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, into_contextual_keyword477.getTree());

                    IDENTIFIER478=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_combined_join_clause3405); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER478_tree = 
                    (Object)adaptor.create(IDENTIFIER478)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER478_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "combined_join_clause"


    public static class orderby_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "orderby_clause"
    // CSharp4.g:782:1: orderby_clause : orderby_contextual_keyword orderings ;
    public final CSharp4.orderby_clause_return orderby_clause() throws RecognitionException {
        CSharp4.orderby_clause_return retval = new CSharp4.orderby_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.orderby_contextual_keyword_return orderby_contextual_keyword479 =null;

        CSharp4.orderings_return orderings480 =null;



        try {
            // CSharp4.g:783:2: ( orderby_contextual_keyword orderings )
            // CSharp4.g:783:4: orderby_contextual_keyword orderings
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_orderby_contextual_keyword_in_orderby_clause3419);
            orderby_contextual_keyword479=orderby_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, orderby_contextual_keyword479.getTree());

            pushFollow(FOLLOW_orderings_in_orderby_clause3421);
            orderings480=orderings();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, orderings480.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "orderby_clause"


    public static class orderings_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "orderings"
    // CSharp4.g:785:1: orderings : ordering ( COMMA ordering )* ;
    public final CSharp4.orderings_return orderings() throws RecognitionException {
        CSharp4.orderings_return retval = new CSharp4.orderings_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA482=null;
        CSharp4.ordering_return ordering481 =null;

        CSharp4.ordering_return ordering483 =null;


        Object COMMA482_tree=null;

        try {
            // CSharp4.g:786:2: ( ordering ( COMMA ordering )* )
            // CSharp4.g:786:4: ordering ( COMMA ordering )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_ordering_in_orderings3432);
            ordering481=ordering();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering481.getTree());

            // CSharp4.g:786:13: ( COMMA ordering )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==COMMA) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // CSharp4.g:786:15: COMMA ordering
            	    {
            	    COMMA482=(Token)match(input,COMMA,FOLLOW_COMMA_in_orderings3436); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA482_tree = 
            	    (Object)adaptor.create(COMMA482)
            	    ;
            	    adaptor.addChild(root_0, COMMA482_tree);
            	    }

            	    pushFollow(FOLLOW_ordering_in_orderings3439);
            	    ordering483=ordering();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering483.getTree());

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "orderings"


    public static class ordering_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "ordering"
    // CSharp4.g:788:1: ordering : expression ( ordering_direction )? ;
    public final CSharp4.ordering_return ordering() throws RecognitionException {
        CSharp4.ordering_return retval = new CSharp4.ordering_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.expression_return expression484 =null;

        CSharp4.ordering_direction_return ordering_direction485 =null;



        try {
            // CSharp4.g:789:2: ( expression ( ordering_direction )? )
            // CSharp4.g:789:4: expression ( ordering_direction )?
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_expression_in_ordering3453);
            expression484=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression484.getTree());

            // CSharp4.g:789:15: ( ordering_direction )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==IDENTIFIER) ) {
                int LA90_1 = input.LA(2);

                if ( (LA90_1==COMMA) ) {
                    alt90=1;
                }
                else if ( (LA90_1==IDENTIFIER) ) {
                    int LA90_4 = input.LA(3);

                    if ( (((input.LT(1).getText().equals("ascending"))||(input.LT(1).getText().equals("descending")))) ) {
                        alt90=1;
                    }
                }
            }
            switch (alt90) {
                case 1 :
                    // CSharp4.g:789:15: ordering_direction
                    {
                    pushFollow(FOLLOW_ordering_direction_in_ordering3455);
                    ordering_direction485=ordering_direction();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering_direction485.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ordering"


    public static class ordering_direction_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "ordering_direction"
    // CSharp4.g:791:1: ordering_direction : ( ascending_contextual_keyword | descending_contextual_keyword );
    public final CSharp4.ordering_direction_return ordering_direction() throws RecognitionException {
        CSharp4.ordering_direction_return retval = new CSharp4.ordering_direction_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.ascending_contextual_keyword_return ascending_contextual_keyword486 =null;

        CSharp4.descending_contextual_keyword_return descending_contextual_keyword487 =null;



        try {
            // CSharp4.g:792:2: ( ascending_contextual_keyword | descending_contextual_keyword )
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==IDENTIFIER) ) {
                int LA91_1 = input.LA(2);

                if ( ((input.LT(1).getText().equals("ascending"))) ) {
                    alt91=1;
                }
                else if ( ((input.LT(1).getText().equals("descending"))) ) {
                    alt91=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 91, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 91, 0, input);

                throw nvae;

            }
            switch (alt91) {
                case 1 :
                    // CSharp4.g:792:4: ascending_contextual_keyword
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_ascending_contextual_keyword_in_ordering_direction3467);
                    ascending_contextual_keyword486=ascending_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ascending_contextual_keyword486.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:793:4: descending_contextual_keyword
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_descending_contextual_keyword_in_ordering_direction3472);
                    descending_contextual_keyword487=descending_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, descending_contextual_keyword487.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ordering_direction"


    public static class select_or_group_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "select_or_group_clause"
    // CSharp4.g:795:1: select_or_group_clause : ( select_clause | group_clause );
    public final CSharp4.select_or_group_clause_return select_or_group_clause() throws RecognitionException {
        CSharp4.select_or_group_clause_return retval = new CSharp4.select_or_group_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.select_clause_return select_clause488 =null;

        CSharp4.group_clause_return group_clause489 =null;



        try {
            // CSharp4.g:796:2: ( select_clause | group_clause )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==IDENTIFIER) ) {
                int LA92_1 = input.LA(2);

                if ( ((input.LT(1).getText().equals("select"))) ) {
                    alt92=1;
                }
                else if ( ((input.LT(1).getText().equals("group"))) ) {
                    alt92=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 92, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;

            }
            switch (alt92) {
                case 1 :
                    // CSharp4.g:796:4: select_clause
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_select_clause_in_select_or_group_clause3483);
                    select_clause488=select_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, select_clause488.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:797:4: group_clause
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_group_clause_in_select_or_group_clause3488);
                    group_clause489=group_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, group_clause489.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "select_or_group_clause"


    public static class select_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "select_clause"
    // CSharp4.g:799:1: select_clause : select_contextual_keyword expression ;
    public final CSharp4.select_clause_return select_clause() throws RecognitionException {
        CSharp4.select_clause_return retval = new CSharp4.select_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.select_contextual_keyword_return select_contextual_keyword490 =null;

        CSharp4.expression_return expression491 =null;



        try {
            // CSharp4.g:800:2: ( select_contextual_keyword expression )
            // CSharp4.g:800:4: select_contextual_keyword expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_select_contextual_keyword_in_select_clause3499);
            select_contextual_keyword490=select_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, select_contextual_keyword490.getTree());

            pushFollow(FOLLOW_expression_in_select_clause3501);
            expression491=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression491.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "select_clause"


    public static class group_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "group_clause"
    // CSharp4.g:802:1: group_clause : group_contextual_keyword expression by_contextual_keyword expression ;
    public final CSharp4.group_clause_return group_clause() throws RecognitionException {
        CSharp4.group_clause_return retval = new CSharp4.group_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.group_contextual_keyword_return group_contextual_keyword492 =null;

        CSharp4.expression_return expression493 =null;

        CSharp4.by_contextual_keyword_return by_contextual_keyword494 =null;

        CSharp4.expression_return expression495 =null;



        try {
            // CSharp4.g:803:2: ( group_contextual_keyword expression by_contextual_keyword expression )
            // CSharp4.g:803:4: group_contextual_keyword expression by_contextual_keyword expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_group_contextual_keyword_in_group_clause3512);
            group_contextual_keyword492=group_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, group_contextual_keyword492.getTree());

            pushFollow(FOLLOW_expression_in_group_clause3514);
            expression493=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression493.getTree());

            pushFollow(FOLLOW_by_contextual_keyword_in_group_clause3516);
            by_contextual_keyword494=by_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, by_contextual_keyword494.getTree());

            pushFollow(FOLLOW_expression_in_group_clause3518);
            expression495=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression495.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "group_clause"


    public static class query_continuation_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "query_continuation"
    // CSharp4.g:806:1: query_continuation : into_contextual_keyword IDENTIFIER query_body ;
    public final CSharp4.query_continuation_return query_continuation() throws RecognitionException {
        CSharp4.query_continuation_return retval = new CSharp4.query_continuation_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER497=null;
        CSharp4.into_contextual_keyword_return into_contextual_keyword496 =null;

        CSharp4.query_body_return query_body498 =null;


        Object IDENTIFIER497_tree=null;

        try {
            // CSharp4.g:807:2: ( into_contextual_keyword IDENTIFIER query_body )
            // CSharp4.g:807:4: into_contextual_keyword IDENTIFIER query_body
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_into_contextual_keyword_in_query_continuation3531);
            into_contextual_keyword496=into_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, into_contextual_keyword496.getTree());

            IDENTIFIER497=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_query_continuation3533); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER497_tree = 
            (Object)adaptor.create(IDENTIFIER497)
            ;
            adaptor.addChild(root_0, IDENTIFIER497_tree);
            }

            pushFollow(FOLLOW_query_body_in_query_continuation3535);
            query_body498=query_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body498.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "query_continuation"


    public static class assignment_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "assignment"
    // CSharp4.g:810:1: assignment : unary_expression assignment_operator expression ;
    public final CSharp4.assignment_return assignment() throws RecognitionException {
        CSharp4.assignment_return retval = new CSharp4.assignment_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.unary_expression_return unary_expression499 =null;

        CSharp4.assignment_operator_return assignment_operator500 =null;

        CSharp4.expression_return expression501 =null;



        try {
            // CSharp4.g:811:2: ( unary_expression assignment_operator expression )
            // CSharp4.g:811:4: unary_expression assignment_operator expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_unary_expression_in_assignment3548);
            unary_expression499=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression499.getTree());

            pushFollow(FOLLOW_assignment_operator_in_assignment3550);
            assignment_operator500=assignment_operator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment_operator500.getTree());

            pushFollow(FOLLOW_expression_in_assignment3552);
            expression501=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression501.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "assignment"


    public static class assignment_operator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "assignment_operator"
    // CSharp4.g:813:1: assignment_operator : ( ASSIGNMENT | OP_ADD_ASSIGNMENT | OP_SUB_ASSIGNMENT | OP_MULT_ASSIGNMENT | OP_DIV_ASSIGNMENT | OP_MOD_ASSIGNMENT | OP_AND_ASSIGNMENT | OP_OR_ASSIGNMENT | OP_XOR_ASSIGNMENT | OP_LEFT_SHIFT_ASSIGNMENT | right_shift_assignment );
    public final CSharp4.assignment_operator_return assignment_operator() throws RecognitionException {
        CSharp4.assignment_operator_return retval = new CSharp4.assignment_operator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token ASSIGNMENT502=null;
        Token OP_ADD_ASSIGNMENT503=null;
        Token OP_SUB_ASSIGNMENT504=null;
        Token OP_MULT_ASSIGNMENT505=null;
        Token OP_DIV_ASSIGNMENT506=null;
        Token OP_MOD_ASSIGNMENT507=null;
        Token OP_AND_ASSIGNMENT508=null;
        Token OP_OR_ASSIGNMENT509=null;
        Token OP_XOR_ASSIGNMENT510=null;
        Token OP_LEFT_SHIFT_ASSIGNMENT511=null;
        CSharp4.right_shift_assignment_return right_shift_assignment512 =null;


        Object ASSIGNMENT502_tree=null;
        Object OP_ADD_ASSIGNMENT503_tree=null;
        Object OP_SUB_ASSIGNMENT504_tree=null;
        Object OP_MULT_ASSIGNMENT505_tree=null;
        Object OP_DIV_ASSIGNMENT506_tree=null;
        Object OP_MOD_ASSIGNMENT507_tree=null;
        Object OP_AND_ASSIGNMENT508_tree=null;
        Object OP_OR_ASSIGNMENT509_tree=null;
        Object OP_XOR_ASSIGNMENT510_tree=null;
        Object OP_LEFT_SHIFT_ASSIGNMENT511_tree=null;

        try {
            // CSharp4.g:814:2: ( ASSIGNMENT | OP_ADD_ASSIGNMENT | OP_SUB_ASSIGNMENT | OP_MULT_ASSIGNMENT | OP_DIV_ASSIGNMENT | OP_MOD_ASSIGNMENT | OP_AND_ASSIGNMENT | OP_OR_ASSIGNMENT | OP_XOR_ASSIGNMENT | OP_LEFT_SHIFT_ASSIGNMENT | right_shift_assignment )
            int alt93=11;
            switch ( input.LA(1) ) {
            case ASSIGNMENT:
                {
                alt93=1;
                }
                break;
            case OP_ADD_ASSIGNMENT:
                {
                alt93=2;
                }
                break;
            case OP_SUB_ASSIGNMENT:
                {
                alt93=3;
                }
                break;
            case OP_MULT_ASSIGNMENT:
                {
                alt93=4;
                }
                break;
            case OP_DIV_ASSIGNMENT:
                {
                alt93=5;
                }
                break;
            case OP_MOD_ASSIGNMENT:
                {
                alt93=6;
                }
                break;
            case OP_AND_ASSIGNMENT:
                {
                alt93=7;
                }
                break;
            case OP_OR_ASSIGNMENT:
                {
                alt93=8;
                }
                break;
            case OP_XOR_ASSIGNMENT:
                {
                alt93=9;
                }
                break;
            case OP_LEFT_SHIFT_ASSIGNMENT:
                {
                alt93=10;
                }
                break;
            case GT:
                {
                alt93=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;

            }

            switch (alt93) {
                case 1 :
                    // CSharp4.g:814:4: ASSIGNMENT
                    {
                    root_0 = (Object)adaptor.nil();


                    ASSIGNMENT502=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_assignment_operator3563); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGNMENT502_tree = 
                    (Object)adaptor.create(ASSIGNMENT502)
                    ;
                    adaptor.addChild(root_0, ASSIGNMENT502_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:815:4: OP_ADD_ASSIGNMENT
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_ADD_ASSIGNMENT503=(Token)match(input,OP_ADD_ASSIGNMENT,FOLLOW_OP_ADD_ASSIGNMENT_in_assignment_operator3568); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_ADD_ASSIGNMENT503_tree = 
                    (Object)adaptor.create(OP_ADD_ASSIGNMENT503)
                    ;
                    adaptor.addChild(root_0, OP_ADD_ASSIGNMENT503_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:816:4: OP_SUB_ASSIGNMENT
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_SUB_ASSIGNMENT504=(Token)match(input,OP_SUB_ASSIGNMENT,FOLLOW_OP_SUB_ASSIGNMENT_in_assignment_operator3573); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_SUB_ASSIGNMENT504_tree = 
                    (Object)adaptor.create(OP_SUB_ASSIGNMENT504)
                    ;
                    adaptor.addChild(root_0, OP_SUB_ASSIGNMENT504_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:817:4: OP_MULT_ASSIGNMENT
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_MULT_ASSIGNMENT505=(Token)match(input,OP_MULT_ASSIGNMENT,FOLLOW_OP_MULT_ASSIGNMENT_in_assignment_operator3578); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_MULT_ASSIGNMENT505_tree = 
                    (Object)adaptor.create(OP_MULT_ASSIGNMENT505)
                    ;
                    adaptor.addChild(root_0, OP_MULT_ASSIGNMENT505_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:818:4: OP_DIV_ASSIGNMENT
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_DIV_ASSIGNMENT506=(Token)match(input,OP_DIV_ASSIGNMENT,FOLLOW_OP_DIV_ASSIGNMENT_in_assignment_operator3583); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_DIV_ASSIGNMENT506_tree = 
                    (Object)adaptor.create(OP_DIV_ASSIGNMENT506)
                    ;
                    adaptor.addChild(root_0, OP_DIV_ASSIGNMENT506_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:819:4: OP_MOD_ASSIGNMENT
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_MOD_ASSIGNMENT507=(Token)match(input,OP_MOD_ASSIGNMENT,FOLLOW_OP_MOD_ASSIGNMENT_in_assignment_operator3588); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_MOD_ASSIGNMENT507_tree = 
                    (Object)adaptor.create(OP_MOD_ASSIGNMENT507)
                    ;
                    adaptor.addChild(root_0, OP_MOD_ASSIGNMENT507_tree);
                    }

                    }
                    break;
                case 7 :
                    // CSharp4.g:820:4: OP_AND_ASSIGNMENT
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_AND_ASSIGNMENT508=(Token)match(input,OP_AND_ASSIGNMENT,FOLLOW_OP_AND_ASSIGNMENT_in_assignment_operator3593); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_AND_ASSIGNMENT508_tree = 
                    (Object)adaptor.create(OP_AND_ASSIGNMENT508)
                    ;
                    adaptor.addChild(root_0, OP_AND_ASSIGNMENT508_tree);
                    }

                    }
                    break;
                case 8 :
                    // CSharp4.g:821:4: OP_OR_ASSIGNMENT
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_OR_ASSIGNMENT509=(Token)match(input,OP_OR_ASSIGNMENT,FOLLOW_OP_OR_ASSIGNMENT_in_assignment_operator3598); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_OR_ASSIGNMENT509_tree = 
                    (Object)adaptor.create(OP_OR_ASSIGNMENT509)
                    ;
                    adaptor.addChild(root_0, OP_OR_ASSIGNMENT509_tree);
                    }

                    }
                    break;
                case 9 :
                    // CSharp4.g:822:4: OP_XOR_ASSIGNMENT
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_XOR_ASSIGNMENT510=(Token)match(input,OP_XOR_ASSIGNMENT,FOLLOW_OP_XOR_ASSIGNMENT_in_assignment_operator3603); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_XOR_ASSIGNMENT510_tree = 
                    (Object)adaptor.create(OP_XOR_ASSIGNMENT510)
                    ;
                    adaptor.addChild(root_0, OP_XOR_ASSIGNMENT510_tree);
                    }

                    }
                    break;
                case 10 :
                    // CSharp4.g:823:4: OP_LEFT_SHIFT_ASSIGNMENT
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_LEFT_SHIFT_ASSIGNMENT511=(Token)match(input,OP_LEFT_SHIFT_ASSIGNMENT,FOLLOW_OP_LEFT_SHIFT_ASSIGNMENT_in_assignment_operator3608); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_LEFT_SHIFT_ASSIGNMENT511_tree = 
                    (Object)adaptor.create(OP_LEFT_SHIFT_ASSIGNMENT511)
                    ;
                    adaptor.addChild(root_0, OP_LEFT_SHIFT_ASSIGNMENT511_tree);
                    }

                    }
                    break;
                case 11 :
                    // CSharp4.g:824:4: right_shift_assignment
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_right_shift_assignment_in_assignment_operator3613);
                    right_shift_assignment512=right_shift_assignment();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, right_shift_assignment512.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "assignment_operator"


    public static class expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "expression"
    // CSharp4.g:826:1: expression : ( ( assignment )=> assignment | non_assignment_expression );
    public final CSharp4.expression_return expression() throws RecognitionException {
        CSharp4.expression_return retval = new CSharp4.expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.assignment_return assignment513 =null;

        CSharp4.non_assignment_expression_return non_assignment_expression514 =null;



        try {
            // CSharp4.g:827:2: ( ( assignment )=> assignment | non_assignment_expression )
            int alt94=2;
            switch ( input.LA(1) ) {
            case OPEN_PARENS:
                {
                int LA94_1 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 1, input);

                    throw nvae;

                }
                }
                break;
            case FALSE:
            case TRUE:
                {
                int LA94_2 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 2, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA94_3 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 3, input);

                    throw nvae;

                }
                }
                break;
            case REAL_LITERAL:
                {
                int LA94_4 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 4, input);

                    throw nvae;

                }
                }
                break;
            case CHARACTER_LITERAL:
                {
                int LA94_5 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 5, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA94_6 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 6, input);

                    throw nvae;

                }
                }
                break;
            case NULL:
                {
                int LA94_7 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 7, input);

                    throw nvae;

                }
                }
                break;
            case IDENTIFIER:
                {
                int LA94_8 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 8, input);

                    throw nvae;

                }
                }
                break;
            case BOOL:
            case BYTE:
            case CHAR:
            case DECIMAL:
            case DOUBLE:
            case FLOAT:
            case INT:
            case LONG:
            case OBJECT:
            case SBYTE:
            case SHORT:
            case STRING:
            case UINT:
            case ULONG:
            case USHORT:
                {
                int LA94_9 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 9, input);

                    throw nvae;

                }
                }
                break;
            case THIS:
                {
                int LA94_10 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 10, input);

                    throw nvae;

                }
                }
                break;
            case BASE:
                {
                int LA94_11 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 11, input);

                    throw nvae;

                }
                }
                break;
            case NEW:
                {
                int LA94_12 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 12, input);

                    throw nvae;

                }
                }
                break;
            case TYPEOF:
                {
                int LA94_13 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 13, input);

                    throw nvae;

                }
                }
                break;
            case CHECKED:
                {
                int LA94_14 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 14, input);

                    throw nvae;

                }
                }
                break;
            case UNCHECKED:
                {
                int LA94_15 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 15, input);

                    throw nvae;

                }
                }
                break;
            case DEFAULT:
                {
                int LA94_16 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 16, input);

                    throw nvae;

                }
                }
                break;
            case DELEGATE:
                {
                int LA94_17 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 17, input);

                    throw nvae;

                }
                }
                break;
            case SIZEOF:
                {
                int LA94_18 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 18, input);

                    throw nvae;

                }
                }
                break;
            case PLUS:
                {
                int LA94_19 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 19, input);

                    throw nvae;

                }
                }
                break;
            case MINUS:
                {
                int LA94_20 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 20, input);

                    throw nvae;

                }
                }
                break;
            case BANG:
                {
                int LA94_21 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 21, input);

                    throw nvae;

                }
                }
                break;
            case TILDE:
                {
                int LA94_22 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 22, input);

                    throw nvae;

                }
                }
                break;
            case OP_INC:
                {
                int LA94_23 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 23, input);

                    throw nvae;

                }
                }
                break;
            case OP_DEC:
                {
                int LA94_24 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 24, input);

                    throw nvae;

                }
                }
                break;
            case STAR:
                {
                int LA94_25 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 25, input);

                    throw nvae;

                }
                }
                break;
            case AMP:
                {
                int LA94_26 = input.LA(2);

                if ( (synpred11_CSharp4()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 26, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;

            }

            switch (alt94) {
                case 1 :
                    // CSharp4.g:827:4: ( assignment )=> assignment
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_assignment_in_expression3630);
                    assignment513=assignment();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment513.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:828:4: non_assignment_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_non_assignment_expression_in_expression3635);
                    non_assignment_expression514=non_assignment_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, non_assignment_expression514.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "expression"


    public static class non_assignment_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "non_assignment_expression"
    // CSharp4.g:830:1: non_assignment_expression : ( ( lambda_expression )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression );
    public final CSharp4.non_assignment_expression_return non_assignment_expression() throws RecognitionException {
        CSharp4.non_assignment_expression_return retval = new CSharp4.non_assignment_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.lambda_expression_return lambda_expression515 =null;

        CSharp4.query_expression_return query_expression516 =null;

        CSharp4.conditional_expression_return conditional_expression517 =null;



        try {
            // CSharp4.g:831:2: ( ( lambda_expression )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression )
            int alt95=3;
            switch ( input.LA(1) ) {
            case OPEN_PARENS:
                {
                int LA95_1 = input.LA(2);

                if ( (synpred12_CSharp4()) ) {
                    alt95=1;
                }
                else if ( (true) ) {
                    alt95=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 95, 1, input);

                    throw nvae;

                }
                }
                break;
            case IDENTIFIER:
                {
                int LA95_2 = input.LA(2);

                if ( (synpred12_CSharp4()) ) {
                    alt95=1;
                }
                else if ( ((((input.LT(1).getText().equals("from"))&&(input.LT(1).getText().equals("from")))&&synpred13_CSharp4())) ) {
                    alt95=2;
                }
                else if ( (true) ) {
                    alt95=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 95, 2, input);

                    throw nvae;

                }
                }
                break;
            case AMP:
            case BANG:
            case BASE:
            case BOOL:
            case BYTE:
            case CHAR:
            case CHARACTER_LITERAL:
            case CHECKED:
            case DECIMAL:
            case DEFAULT:
            case DELEGATE:
            case DOUBLE:
            case FALSE:
            case FLOAT:
            case INT:
            case INTEGER_LITERAL:
            case LONG:
            case MINUS:
            case NEW:
            case NULL:
            case OBJECT:
            case OP_DEC:
            case OP_INC:
            case PLUS:
            case REAL_LITERAL:
            case SBYTE:
            case SHORT:
            case SIZEOF:
            case STAR:
            case STRING:
            case STRING_LITERAL:
            case THIS:
            case TILDE:
            case TRUE:
            case TYPEOF:
            case UINT:
            case ULONG:
            case UNCHECKED:
            case USHORT:
                {
                alt95=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;

            }

            switch (alt95) {
                case 1 :
                    // CSharp4.g:831:4: ( lambda_expression )=> lambda_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_lambda_expression_in_non_assignment_expression3651);
                    lambda_expression515=lambda_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, lambda_expression515.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:832:4: ( query_expression )=> query_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_query_expression_in_non_assignment_expression3662);
                    query_expression516=query_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, query_expression516.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:833:4: conditional_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_conditional_expression_in_non_assignment_expression3667);
                    conditional_expression517=conditional_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_expression517.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "non_assignment_expression"


    public static class constant_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constant_expression"
    // CSharp4.g:835:1: constant_expression : expression ;
    public final CSharp4.constant_expression_return constant_expression() throws RecognitionException {
        CSharp4.constant_expression_return retval = new CSharp4.constant_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.expression_return expression518 =null;



        try {
            // CSharp4.g:836:2: ( expression )
            // CSharp4.g:836:4: expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_expression_in_constant_expression3678);
            expression518=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression518.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constant_expression"


    public static class boolean_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "boolean_expression"
    // CSharp4.g:838:1: boolean_expression : expression ;
    public final CSharp4.boolean_expression_return boolean_expression() throws RecognitionException {
        CSharp4.boolean_expression_return retval = new CSharp4.boolean_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.expression_return expression519 =null;



        try {
            // CSharp4.g:839:2: ( expression )
            // CSharp4.g:839:4: expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_expression_in_boolean_expression3689);
            expression519=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression519.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "boolean_expression"


    public static class statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "statement"
    // CSharp4.g:843:1: statement : ( ( labeled_statement )=> labeled_statement | ( declaration_statement )=> declaration_statement | embedded_statement );
    public final CSharp4.statement_return statement() throws RecognitionException {
        CSharp4.statement_return retval = new CSharp4.statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.labeled_statement_return labeled_statement520 =null;

        CSharp4.declaration_statement_return declaration_statement521 =null;

        CSharp4.embedded_statement_return embedded_statement522 =null;



        try {
            // CSharp4.g:844:2: ( ( labeled_statement )=> labeled_statement | ( declaration_statement )=> declaration_statement | embedded_statement )
            int alt96=3;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==IDENTIFIER) ) {
                int LA96_1 = input.LA(2);

                if ( (synpred14_CSharp4()) ) {
                    alt96=1;
                }
                else if ( (synpred15_CSharp4()) ) {
                    alt96=2;
                }
                else if ( (true) ) {
                    alt96=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA96_0==BYTE||LA96_0==CHAR||LA96_0==INT||LA96_0==LONG||LA96_0==SBYTE||LA96_0==SHORT||(LA96_0 >= UINT && LA96_0 <= ULONG)||LA96_0==USHORT) ) {
                int LA96_2 = input.LA(2);

                if ( (synpred15_CSharp4()) ) {
                    alt96=2;
                }
                else if ( (true) ) {
                    alt96=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA96_0==DOUBLE||LA96_0==FLOAT) ) {
                int LA96_3 = input.LA(2);

                if ( (synpred15_CSharp4()) ) {
                    alt96=2;
                }
                else if ( (true) ) {
                    alt96=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA96_0==DECIMAL) ) {
                int LA96_4 = input.LA(2);

                if ( (synpred15_CSharp4()) ) {
                    alt96=2;
                }
                else if ( (true) ) {
                    alt96=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA96_0==BOOL) ) {
                int LA96_5 = input.LA(2);

                if ( (synpred15_CSharp4()) ) {
                    alt96=2;
                }
                else if ( (true) ) {
                    alt96=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA96_0==OBJECT) ) {
                int LA96_6 = input.LA(2);

                if ( (synpred15_CSharp4()) ) {
                    alt96=2;
                }
                else if ( (true) ) {
                    alt96=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA96_0==STRING) ) {
                int LA96_7 = input.LA(2);

                if ( (synpred15_CSharp4()) ) {
                    alt96=2;
                }
                else if ( (true) ) {
                    alt96=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 7, input);

                    throw nvae;

                }
            }
            else if ( (LA96_0==VOID) && (synpred15_CSharp4())) {
                alt96=2;
            }
            else if ( (LA96_0==CONST) && (synpred15_CSharp4())) {
                alt96=2;
            }
            else if ( (LA96_0==AMP||(LA96_0 >= BANG && LA96_0 <= BASE)||LA96_0==BREAK||(LA96_0 >= CHARACTER_LITERAL && LA96_0 <= CHECKED)||LA96_0==CONTINUE||(LA96_0 >= DEFAULT && LA96_0 <= DELEGATE)||LA96_0==DO||LA96_0==FALSE||LA96_0==FIXED||(LA96_0 >= FOR && LA96_0 <= FOREACH)||LA96_0==GOTO||LA96_0==IF||LA96_0==INTEGER_LITERAL||LA96_0==LOCK||LA96_0==MINUS||LA96_0==NEW||LA96_0==NULL||LA96_0==OPEN_BRACE||LA96_0==OPEN_PARENS||LA96_0==OP_DEC||LA96_0==OP_INC||LA96_0==PLUS||LA96_0==REAL_LITERAL||LA96_0==RETURN||LA96_0==SEMICOLON||LA96_0==SIZEOF||LA96_0==STAR||LA96_0==STRING_LITERAL||LA96_0==SWITCH||(LA96_0 >= THIS && LA96_0 <= TYPEOF)||LA96_0==UNCHECKED||LA96_0==UNSAFE||LA96_0==USING||LA96_0==WHILE) ) {
                alt96=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;

            }
            switch (alt96) {
                case 1 :
                    // CSharp4.g:844:4: ( labeled_statement )=> labeled_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_labeled_statement_in_statement3708);
                    labeled_statement520=labeled_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, labeled_statement520.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:845:4: ( declaration_statement )=> declaration_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_declaration_statement_in_statement3719);
                    declaration_statement521=declaration_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration_statement521.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:846:4: embedded_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_embedded_statement_in_statement3724);
                    embedded_statement522=embedded_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement522.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "statement"


    public static class embedded_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "embedded_statement"
    // CSharp4.g:848:1: embedded_statement : ( block | empty_statement | expression_statement | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | embedded_statement_unsafe );
    public final CSharp4.embedded_statement_return embedded_statement() throws RecognitionException {
        CSharp4.embedded_statement_return retval = new CSharp4.embedded_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.block_return block523 =null;

        CSharp4.empty_statement_return empty_statement524 =null;

        CSharp4.expression_statement_return expression_statement525 =null;

        CSharp4.selection_statement_return selection_statement526 =null;

        CSharp4.iteration_statement_return iteration_statement527 =null;

        CSharp4.jump_statement_return jump_statement528 =null;

        CSharp4.try_statement_return try_statement529 =null;

        CSharp4.checked_statement_return checked_statement530 =null;

        CSharp4.unchecked_statement_return unchecked_statement531 =null;

        CSharp4.lock_statement_return lock_statement532 =null;

        CSharp4.using_statement_return using_statement533 =null;

        CSharp4.yield_statement_return yield_statement534 =null;

        CSharp4.embedded_statement_unsafe_return embedded_statement_unsafe535 =null;



        try {
            // CSharp4.g:849:2: ( block | empty_statement | expression_statement | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | embedded_statement_unsafe )
            int alt97=13;
            switch ( input.LA(1) ) {
            case OPEN_BRACE:
                {
                alt97=1;
                }
                break;
            case SEMICOLON:
                {
                alt97=2;
                }
                break;
            case AMP:
            case BANG:
            case BASE:
            case BOOL:
            case BYTE:
            case CHAR:
            case CHARACTER_LITERAL:
            case DECIMAL:
            case DEFAULT:
            case DELEGATE:
            case DOUBLE:
            case FALSE:
            case FLOAT:
            case INT:
            case INTEGER_LITERAL:
            case LONG:
            case MINUS:
            case NEW:
            case NULL:
            case OBJECT:
            case OPEN_PARENS:
            case OP_DEC:
            case OP_INC:
            case PLUS:
            case REAL_LITERAL:
            case SBYTE:
            case SHORT:
            case SIZEOF:
            case STAR:
            case STRING:
            case STRING_LITERAL:
            case THIS:
            case TILDE:
            case TRUE:
            case TYPEOF:
            case UINT:
            case ULONG:
            case USHORT:
                {
                alt97=3;
                }
                break;
            case IDENTIFIER:
                {
                int LA97_4 = input.LA(2);

                if ( ((LA97_4 >= AMP && LA97_4 <= ASSIGNMENT)||(LA97_4 >= BITWISE_OR && LA97_4 <= BOOL)||(LA97_4 >= BYTE && LA97_4 <= CARET)||LA97_4==CHAR||LA97_4==DECIMAL||LA97_4==DIV||(LA97_4 >= DOT && LA97_4 <= DOUBLE)||LA97_4==DOUBLE_COLON||LA97_4==FLOAT||LA97_4==GT||LA97_4==IDENTIFIER||LA97_4==INT||(LA97_4 >= INTERR && LA97_4 <= IS)||(LA97_4 >= LONG && LA97_4 <= LT)||LA97_4==MINUS||LA97_4==OBJECT||(LA97_4 >= OPEN_BRACKET && LA97_4 <= OPEN_PARENS)||(LA97_4 >= OP_ADD_ASSIGNMENT && LA97_4 <= OP_XOR_ASSIGNMENT)||(LA97_4 >= PERCENT && LA97_4 <= PLUS)||LA97_4==SBYTE||LA97_4==SEMICOLON||LA97_4==SHORT||LA97_4==STAR||LA97_4==STRING||(LA97_4 >= UINT && LA97_4 <= ULONG)||LA97_4==USHORT||LA97_4==VOID) ) {
                    alt97=3;
                }
                else if ( (LA97_4==BREAK||LA97_4==RETURN) ) {
                    alt97=12;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 97, 4, input);

                    throw nvae;

                }
                }
                break;
            case CHECKED:
                {
                int LA97_5 = input.LA(2);

                if ( (LA97_5==OPEN_PARENS) ) {
                    alt97=3;
                }
                else if ( (LA97_5==OPEN_BRACE) ) {
                    alt97=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 97, 5, input);

                    throw nvae;

                }
                }
                break;
            case UNCHECKED:
                {
                int LA97_6 = input.LA(2);

                if ( (LA97_6==OPEN_PARENS) ) {
                    alt97=3;
                }
                else if ( (LA97_6==OPEN_BRACE) ) {
                    alt97=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 97, 6, input);

                    throw nvae;

                }
                }
                break;
            case IF:
            case SWITCH:
                {
                alt97=4;
                }
                break;
            case DO:
            case FOR:
            case FOREACH:
            case WHILE:
                {
                alt97=5;
                }
                break;
            case BREAK:
            case CONTINUE:
            case GOTO:
            case RETURN:
            case THROW:
                {
                alt97=6;
                }
                break;
            case TRY:
                {
                alt97=7;
                }
                break;
            case LOCK:
                {
                alt97=10;
                }
                break;
            case USING:
                {
                alt97=11;
                }
                break;
            case FIXED:
            case UNSAFE:
                {
                alt97=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;

            }

            switch (alt97) {
                case 1 :
                    // CSharp4.g:849:4: block
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_block_in_embedded_statement3735);
                    block523=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block523.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:850:4: empty_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_empty_statement_in_embedded_statement3740);
                    empty_statement524=empty_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, empty_statement524.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:851:4: expression_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_expression_statement_in_embedded_statement3745);
                    expression_statement525=expression_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_statement525.getTree());

                    }
                    break;
                case 4 :
                    // CSharp4.g:852:4: selection_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_selection_statement_in_embedded_statement3750);
                    selection_statement526=selection_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, selection_statement526.getTree());

                    }
                    break;
                case 5 :
                    // CSharp4.g:853:4: iteration_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_iteration_statement_in_embedded_statement3755);
                    iteration_statement527=iteration_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, iteration_statement527.getTree());

                    }
                    break;
                case 6 :
                    // CSharp4.g:854:4: jump_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_jump_statement_in_embedded_statement3760);
                    jump_statement528=jump_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, jump_statement528.getTree());

                    }
                    break;
                case 7 :
                    // CSharp4.g:855:4: try_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_try_statement_in_embedded_statement3765);
                    try_statement529=try_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, try_statement529.getTree());

                    }
                    break;
                case 8 :
                    // CSharp4.g:856:4: checked_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_checked_statement_in_embedded_statement3770);
                    checked_statement530=checked_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, checked_statement530.getTree());

                    }
                    break;
                case 9 :
                    // CSharp4.g:857:4: unchecked_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_unchecked_statement_in_embedded_statement3775);
                    unchecked_statement531=unchecked_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unchecked_statement531.getTree());

                    }
                    break;
                case 10 :
                    // CSharp4.g:858:4: lock_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_lock_statement_in_embedded_statement3780);
                    lock_statement532=lock_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, lock_statement532.getTree());

                    }
                    break;
                case 11 :
                    // CSharp4.g:859:4: using_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_using_statement_in_embedded_statement3785);
                    using_statement533=using_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, using_statement533.getTree());

                    }
                    break;
                case 12 :
                    // CSharp4.g:860:4: yield_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_yield_statement_in_embedded_statement3790);
                    yield_statement534=yield_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, yield_statement534.getTree());

                    }
                    break;
                case 13 :
                    // CSharp4.g:861:4: embedded_statement_unsafe
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_embedded_statement_unsafe_in_embedded_statement3795);
                    embedded_statement_unsafe535=embedded_statement_unsafe();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement_unsafe535.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "embedded_statement"


    public static class block_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "block"
    // CSharp4.g:864:1: block : OPEN_BRACE ( statement_list )? CLOSE_BRACE ;
    public final CSharp4.block_return block() throws RecognitionException {
        CSharp4.block_return retval = new CSharp4.block_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE536=null;
        Token CLOSE_BRACE538=null;
        CSharp4.statement_list_return statement_list537 =null;


        Object OPEN_BRACE536_tree=null;
        Object CLOSE_BRACE538_tree=null;

        try {
            // CSharp4.g:865:2: ( OPEN_BRACE ( statement_list )? CLOSE_BRACE )
            // CSharp4.g:865:4: OPEN_BRACE ( statement_list )? CLOSE_BRACE
            {
            root_0 = (Object)adaptor.nil();


            OPEN_BRACE536=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_block3808); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACE536_tree = 
            (Object)adaptor.create(OPEN_BRACE536)
            ;
            adaptor.addChild(root_0, OPEN_BRACE536_tree);
            }

            // CSharp4.g:865:15: ( statement_list )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==AMP||(LA98_0 >= BANG && LA98_0 <= BASE)||(LA98_0 >= BOOL && LA98_0 <= BYTE)||(LA98_0 >= CHAR && LA98_0 <= CHECKED)||(LA98_0 >= CONST && LA98_0 <= CONTINUE)||LA98_0==DECIMAL||(LA98_0 >= DEFAULT && LA98_0 <= DELEGATE)||LA98_0==DO||LA98_0==DOUBLE||LA98_0==FALSE||(LA98_0 >= FIXED && LA98_0 <= FOREACH)||LA98_0==GOTO||(LA98_0 >= IDENTIFIER && LA98_0 <= IF)||(LA98_0 >= INT && LA98_0 <= INTEGER_LITERAL)||(LA98_0 >= LOCK && LA98_0 <= LONG)||LA98_0==MINUS||LA98_0==NEW||LA98_0==NULL||(LA98_0 >= OBJECT && LA98_0 <= OPEN_BRACE)||LA98_0==OPEN_PARENS||LA98_0==OP_DEC||LA98_0==OP_INC||LA98_0==PLUS||LA98_0==REAL_LITERAL||LA98_0==RETURN||LA98_0==SBYTE||LA98_0==SEMICOLON||LA98_0==SHORT||LA98_0==SIZEOF||LA98_0==STAR||(LA98_0 >= STRING && LA98_0 <= STRING_LITERAL)||LA98_0==SWITCH||(LA98_0 >= THIS && LA98_0 <= UNCHECKED)||(LA98_0 >= UNSAFE && LA98_0 <= USING)||LA98_0==VOID||LA98_0==WHILE) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // CSharp4.g:865:15: statement_list
                    {
                    pushFollow(FOLLOW_statement_list_in_block3810);
                    statement_list537=statement_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_list537.getTree());

                    }
                    break;

            }


            CLOSE_BRACE538=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_block3813); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACE538_tree = 
            (Object)adaptor.create(CLOSE_BRACE538)
            ;
            adaptor.addChild(root_0, CLOSE_BRACE538_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "block"


    public static class statement_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "statement_list"
    // CSharp4.g:867:1: statement_list : ( statement )+ ;
    public final CSharp4.statement_list_return statement_list() throws RecognitionException {
        CSharp4.statement_list_return retval = new CSharp4.statement_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.statement_return statement539 =null;



        try {
            // CSharp4.g:868:2: ( ( statement )+ )
            // CSharp4.g:868:4: ( statement )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:868:4: ( statement )+
            int cnt99=0;
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==DEFAULT) ) {
                    int LA99_2 = input.LA(2);

                    if ( (LA99_2==OPEN_PARENS) ) {
                        alt99=1;
                    }


                }
                else if ( (LA99_0==AMP||(LA99_0 >= BANG && LA99_0 <= BASE)||(LA99_0 >= BOOL && LA99_0 <= BYTE)||(LA99_0 >= CHAR && LA99_0 <= CHECKED)||(LA99_0 >= CONST && LA99_0 <= CONTINUE)||LA99_0==DECIMAL||LA99_0==DELEGATE||LA99_0==DO||LA99_0==DOUBLE||LA99_0==FALSE||(LA99_0 >= FIXED && LA99_0 <= FOREACH)||LA99_0==GOTO||(LA99_0 >= IDENTIFIER && LA99_0 <= IF)||(LA99_0 >= INT && LA99_0 <= INTEGER_LITERAL)||(LA99_0 >= LOCK && LA99_0 <= LONG)||LA99_0==MINUS||LA99_0==NEW||LA99_0==NULL||(LA99_0 >= OBJECT && LA99_0 <= OPEN_BRACE)||LA99_0==OPEN_PARENS||LA99_0==OP_DEC||LA99_0==OP_INC||LA99_0==PLUS||LA99_0==REAL_LITERAL||LA99_0==RETURN||LA99_0==SBYTE||LA99_0==SEMICOLON||LA99_0==SHORT||LA99_0==SIZEOF||LA99_0==STAR||(LA99_0 >= STRING && LA99_0 <= STRING_LITERAL)||LA99_0==SWITCH||(LA99_0 >= THIS && LA99_0 <= UNCHECKED)||(LA99_0 >= UNSAFE && LA99_0 <= USING)||LA99_0==VOID||LA99_0==WHILE) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // CSharp4.g:868:4: statement
            	    {
            	    pushFollow(FOLLOW_statement_in_statement_list3824);
            	    statement539=statement();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement539.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt99 >= 1 ) break loop99;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(99, input);
                        throw eee;
                }
                cnt99++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "statement_list"


    public static class empty_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "empty_statement"
    // CSharp4.g:870:1: empty_statement : SEMICOLON ;
    public final CSharp4.empty_statement_return empty_statement() throws RecognitionException {
        CSharp4.empty_statement_return retval = new CSharp4.empty_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SEMICOLON540=null;

        Object SEMICOLON540_tree=null;

        try {
            // CSharp4.g:871:2: ( SEMICOLON )
            // CSharp4.g:871:4: SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            SEMICOLON540=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_empty_statement3836); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON540_tree = 
            (Object)adaptor.create(SEMICOLON540)
            ;
            adaptor.addChild(root_0, SEMICOLON540_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "empty_statement"


    public static class labeled_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "labeled_statement"
    // CSharp4.g:874:1: labeled_statement : IDENTIFIER COLON statement ;
    public final CSharp4.labeled_statement_return labeled_statement() throws RecognitionException {
        CSharp4.labeled_statement_return retval = new CSharp4.labeled_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER541=null;
        Token COLON542=null;
        CSharp4.statement_return statement543 =null;


        Object IDENTIFIER541_tree=null;
        Object COLON542_tree=null;

        try {
            // CSharp4.g:875:2: ( IDENTIFIER COLON statement )
            // CSharp4.g:875:4: IDENTIFIER COLON statement
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER541=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_labeled_statement3849); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER541_tree = 
            (Object)adaptor.create(IDENTIFIER541)
            ;
            adaptor.addChild(root_0, IDENTIFIER541_tree);
            }

            COLON542=(Token)match(input,COLON,FOLLOW_COLON_in_labeled_statement3851); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COLON542_tree = 
            (Object)adaptor.create(COLON542)
            ;
            adaptor.addChild(root_0, COLON542_tree);
            }

            pushFollow(FOLLOW_statement_in_labeled_statement3853);
            statement543=statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement543.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "labeled_statement"


    public static class declaration_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "declaration_statement"
    // CSharp4.g:878:1: declaration_statement : ( local_variable_declaration SEMICOLON | local_constant_declaration SEMICOLON );
    public final CSharp4.declaration_statement_return declaration_statement() throws RecognitionException {
        CSharp4.declaration_statement_return retval = new CSharp4.declaration_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SEMICOLON545=null;
        Token SEMICOLON547=null;
        CSharp4.local_variable_declaration_return local_variable_declaration544 =null;

        CSharp4.local_constant_declaration_return local_constant_declaration546 =null;


        Object SEMICOLON545_tree=null;
        Object SEMICOLON547_tree=null;

        try {
            // CSharp4.g:879:2: ( local_variable_declaration SEMICOLON | local_constant_declaration SEMICOLON )
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==BOOL||LA100_0==BYTE||LA100_0==CHAR||LA100_0==DECIMAL||LA100_0==DOUBLE||LA100_0==FLOAT||LA100_0==IDENTIFIER||LA100_0==INT||LA100_0==LONG||LA100_0==OBJECT||LA100_0==SBYTE||LA100_0==SHORT||LA100_0==STRING||(LA100_0 >= UINT && LA100_0 <= ULONG)||LA100_0==USHORT||LA100_0==VOID) ) {
                alt100=1;
            }
            else if ( (LA100_0==CONST) ) {
                alt100=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;

            }
            switch (alt100) {
                case 1 :
                    // CSharp4.g:879:4: local_variable_declaration SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_local_variable_declaration_in_declaration_statement3866);
                    local_variable_declaration544=local_variable_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration544.getTree());

                    SEMICOLON545=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_declaration_statement3868); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON545_tree = 
                    (Object)adaptor.create(SEMICOLON545)
                    ;
                    adaptor.addChild(root_0, SEMICOLON545_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:880:4: local_constant_declaration SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_local_constant_declaration_in_declaration_statement3873);
                    local_constant_declaration546=local_constant_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_constant_declaration546.getTree());

                    SEMICOLON547=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_declaration_statement3875); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON547_tree = 
                    (Object)adaptor.create(SEMICOLON547)
                    ;
                    adaptor.addChild(root_0, SEMICOLON547_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "declaration_statement"


    public static class local_variable_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "local_variable_declaration"
    // CSharp4.g:882:1: local_variable_declaration : t= local_variable_type local_variable_declarators ;
    public final CSharp4.local_variable_declaration_return local_variable_declaration() throws RecognitionException {
        CSharp4.local_variable_declaration_return retval = new CSharp4.local_variable_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.local_variable_type_return t =null;

        CSharp4.local_variable_declarators_return local_variable_declarators548 =null;



        try {
            // CSharp4.g:883:2: (t= local_variable_type local_variable_declarators )
            // CSharp4.g:883:4: t= local_variable_type local_variable_declarators
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_local_variable_type_in_local_variable_declaration3888);
            t=local_variable_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, t.getTree());

            pushFollow(FOLLOW_local_variable_declarators_in_local_variable_declaration3891);
            local_variable_declarators548=local_variable_declarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarators548.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "local_variable_declaration"


    public static class local_variable_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "local_variable_type"
    // CSharp4.g:891:1: local_variable_type : type ;
    public final CSharp4.local_variable_type_return local_variable_type() throws RecognitionException {
        CSharp4.local_variable_type_return retval = new CSharp4.local_variable_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.type_return type549 =null;



        try {
            // CSharp4.g:892:2: ( type )
            // CSharp4.g:892:4: type
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_in_local_variable_type3904);
            type549=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type549.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "local_variable_type"


    public static class local_variable_declarators_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "local_variable_declarators"
    // CSharp4.g:895:1: local_variable_declarators : local_variable_declarator ( COMMA local_variable_declarator )* ;
    public final CSharp4.local_variable_declarators_return local_variable_declarators() throws RecognitionException {
        CSharp4.local_variable_declarators_return retval = new CSharp4.local_variable_declarators_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA551=null;
        CSharp4.local_variable_declarator_return local_variable_declarator550 =null;

        CSharp4.local_variable_declarator_return local_variable_declarator552 =null;


        Object COMMA551_tree=null;

        try {
            // CSharp4.g:896:2: ( local_variable_declarator ( COMMA local_variable_declarator )* )
            // CSharp4.g:896:4: local_variable_declarator ( COMMA local_variable_declarator )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators3918);
            local_variable_declarator550=local_variable_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarator550.getTree());

            // CSharp4.g:896:30: ( COMMA local_variable_declarator )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==COMMA) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // CSharp4.g:896:32: COMMA local_variable_declarator
            	    {
            	    COMMA551=(Token)match(input,COMMA,FOLLOW_COMMA_in_local_variable_declarators3922); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA551_tree = 
            	    (Object)adaptor.create(COMMA551)
            	    ;
            	    adaptor.addChild(root_0, COMMA551_tree);
            	    }

            	    pushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators3925);
            	    local_variable_declarator552=local_variable_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarator552.getTree());

            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "local_variable_declarators"


    public static class local_variable_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "local_variable_declarator"
    // CSharp4.g:904:1: local_variable_declarator : IDENTIFIER ( ASSIGNMENT local_variable_initializer )? ;
    public final CSharp4.local_variable_declarator_return local_variable_declarator() throws RecognitionException {
        CSharp4.local_variable_declarator_return retval = new CSharp4.local_variable_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER553=null;
        Token ASSIGNMENT554=null;
        CSharp4.local_variable_initializer_return local_variable_initializer555 =null;


        Object IDENTIFIER553_tree=null;
        Object ASSIGNMENT554_tree=null;

        try {
            // CSharp4.g:905:3: ( IDENTIFIER ( ASSIGNMENT local_variable_initializer )? )
            // CSharp4.g:905:5: IDENTIFIER ( ASSIGNMENT local_variable_initializer )?
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER553=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_local_variable_declarator3942); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER553_tree = 
            (Object)adaptor.create(IDENTIFIER553)
            ;
            adaptor.addChild(root_0, IDENTIFIER553_tree);
            }

            // CSharp4.g:905:17: ( ASSIGNMENT local_variable_initializer )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==ASSIGNMENT) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // CSharp4.g:905:18: ASSIGNMENT local_variable_initializer
                    {
                    ASSIGNMENT554=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_local_variable_declarator3946); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGNMENT554_tree = 
                    (Object)adaptor.create(ASSIGNMENT554)
                    ;
                    adaptor.addChild(root_0, ASSIGNMENT554_tree);
                    }

                    pushFollow(FOLLOW_local_variable_initializer_in_local_variable_declarator3948);
                    local_variable_initializer555=local_variable_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_initializer555.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "local_variable_declarator"


    public static class local_variable_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "local_variable_initializer"
    // CSharp4.g:907:1: local_variable_initializer : ( expression | array_initializer | local_variable_initializer_unsafe );
    public final CSharp4.local_variable_initializer_return local_variable_initializer() throws RecognitionException {
        CSharp4.local_variable_initializer_return retval = new CSharp4.local_variable_initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.expression_return expression556 =null;

        CSharp4.array_initializer_return array_initializer557 =null;

        CSharp4.local_variable_initializer_unsafe_return local_variable_initializer_unsafe558 =null;



        try {
            // CSharp4.g:908:2: ( expression | array_initializer | local_variable_initializer_unsafe )
            int alt103=3;
            switch ( input.LA(1) ) {
            case AMP:
            case BANG:
            case BASE:
            case BOOL:
            case BYTE:
            case CHAR:
            case CHARACTER_LITERAL:
            case CHECKED:
            case DECIMAL:
            case DEFAULT:
            case DELEGATE:
            case DOUBLE:
            case FALSE:
            case FLOAT:
            case IDENTIFIER:
            case INT:
            case INTEGER_LITERAL:
            case LONG:
            case MINUS:
            case NEW:
            case NULL:
            case OBJECT:
            case OPEN_PARENS:
            case OP_DEC:
            case OP_INC:
            case PLUS:
            case REAL_LITERAL:
            case SBYTE:
            case SHORT:
            case SIZEOF:
            case STAR:
            case STRING:
            case STRING_LITERAL:
            case THIS:
            case TILDE:
            case TRUE:
            case TYPEOF:
            case UINT:
            case ULONG:
            case UNCHECKED:
            case USHORT:
                {
                alt103=1;
                }
                break;
            case OPEN_BRACE:
                {
                alt103=2;
                }
                break;
            case STACKALLOC:
                {
                alt103=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;

            }

            switch (alt103) {
                case 1 :
                    // CSharp4.g:908:4: expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_expression_in_local_variable_initializer3961);
                    expression556=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression556.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:909:4: array_initializer
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_array_initializer_in_local_variable_initializer3966);
                    array_initializer557=array_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer557.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:910:4: local_variable_initializer_unsafe
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_local_variable_initializer_unsafe_in_local_variable_initializer3971);
                    local_variable_initializer_unsafe558=local_variable_initializer_unsafe();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_initializer_unsafe558.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "local_variable_initializer"


    public static class local_constant_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "local_constant_declaration"
    // CSharp4.g:912:1: local_constant_declaration : CONST type constant_declarators ;
    public final CSharp4.local_constant_declaration_return local_constant_declaration() throws RecognitionException {
        CSharp4.local_constant_declaration_return retval = new CSharp4.local_constant_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token CONST559=null;
        CSharp4.type_return type560 =null;

        CSharp4.constant_declarators_return constant_declarators561 =null;


        Object CONST559_tree=null;

        try {
            // CSharp4.g:913:2: ( CONST type constant_declarators )
            // CSharp4.g:913:4: CONST type constant_declarators
            {
            root_0 = (Object)adaptor.nil();


            CONST559=(Token)match(input,CONST,FOLLOW_CONST_in_local_constant_declaration3982); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CONST559_tree = 
            (Object)adaptor.create(CONST559)
            ;
            adaptor.addChild(root_0, CONST559_tree);
            }

            pushFollow(FOLLOW_type_in_local_constant_declaration3984);
            type560=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type560.getTree());

            pushFollow(FOLLOW_constant_declarators_in_local_constant_declaration3986);
            constant_declarators561=constant_declarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators561.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "local_constant_declaration"


    public static class expression_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "expression_statement"
    // CSharp4.g:915:1: expression_statement : statement_expression SEMICOLON ;
    public final CSharp4.expression_statement_return expression_statement() throws RecognitionException {
        CSharp4.expression_statement_return retval = new CSharp4.expression_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SEMICOLON563=null;
        CSharp4.statement_expression_return statement_expression562 =null;


        Object SEMICOLON563_tree=null;

        try {
            // CSharp4.g:916:2: ( statement_expression SEMICOLON )
            // CSharp4.g:916:4: statement_expression SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_statement_expression_in_expression_statement3996);
            statement_expression562=statement_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression562.getTree());

            SEMICOLON563=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_expression_statement3998); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON563_tree = 
            (Object)adaptor.create(SEMICOLON563)
            ;
            adaptor.addChild(root_0, SEMICOLON563_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "expression_statement"


    public static class statement_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "statement_expression"
    // CSharp4.g:931:1: statement_expression : expression ;
    public final CSharp4.statement_expression_return statement_expression() throws RecognitionException {
        CSharp4.statement_expression_return retval = new CSharp4.statement_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.expression_return expression564 =null;



        try {
            // CSharp4.g:932:2: ( expression )
            // CSharp4.g:932:4: expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_expression_in_statement_expression4013);
            expression564=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression564.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "statement_expression"


    public static class selection_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "selection_statement"
    // CSharp4.g:933:1: selection_statement : ( if_statement | switch_statement );
    public final CSharp4.selection_statement_return selection_statement() throws RecognitionException {
        CSharp4.selection_statement_return retval = new CSharp4.selection_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.if_statement_return if_statement565 =null;

        CSharp4.switch_statement_return switch_statement566 =null;



        try {
            // CSharp4.g:934:2: ( if_statement | switch_statement )
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==IF) ) {
                alt104=1;
            }
            else if ( (LA104_0==SWITCH) ) {
                alt104=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;

            }
            switch (alt104) {
                case 1 :
                    // CSharp4.g:934:4: if_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_if_statement_in_selection_statement4022);
                    if_statement565=if_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, if_statement565.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:935:4: switch_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_switch_statement_in_selection_statement4027);
                    switch_statement566=switch_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_statement566.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "selection_statement"


    public static class if_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "if_statement"
    // CSharp4.g:943:1: if_statement : IF OPEN_PARENS boolean_expression CLOSE_PARENS embedded_statement ( ( ELSE )=> ELSE embedded_statement )? ;
    public final CSharp4.if_statement_return if_statement() throws RecognitionException {
        CSharp4.if_statement_return retval = new CSharp4.if_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IF567=null;
        Token OPEN_PARENS568=null;
        Token CLOSE_PARENS570=null;
        Token ELSE572=null;
        CSharp4.boolean_expression_return boolean_expression569 =null;

        CSharp4.embedded_statement_return embedded_statement571 =null;

        CSharp4.embedded_statement_return embedded_statement573 =null;


        Object IF567_tree=null;
        Object OPEN_PARENS568_tree=null;
        Object CLOSE_PARENS570_tree=null;
        Object ELSE572_tree=null;

        try {
            // CSharp4.g:944:3: ( IF OPEN_PARENS boolean_expression CLOSE_PARENS embedded_statement ( ( ELSE )=> ELSE embedded_statement )? )
            // CSharp4.g:944:5: IF OPEN_PARENS boolean_expression CLOSE_PARENS embedded_statement ( ( ELSE )=> ELSE embedded_statement )?
            {
            root_0 = (Object)adaptor.nil();


            IF567=(Token)match(input,IF,FOLLOW_IF_in_if_statement4041); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IF567_tree = 
            (Object)adaptor.create(IF567)
            ;
            adaptor.addChild(root_0, IF567_tree);
            }

            OPEN_PARENS568=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_if_statement4043); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS568_tree = 
            (Object)adaptor.create(OPEN_PARENS568)
            ;
            adaptor.addChild(root_0, OPEN_PARENS568_tree);
            }

            pushFollow(FOLLOW_boolean_expression_in_if_statement4045);
            boolean_expression569=boolean_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression569.getTree());

            CLOSE_PARENS570=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_if_statement4047); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS570_tree = 
            (Object)adaptor.create(CLOSE_PARENS570)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS570_tree);
            }

            pushFollow(FOLLOW_embedded_statement_in_if_statement4049);
            embedded_statement571=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement571.getTree());

            // CSharp4.g:944:71: ( ( ELSE )=> ELSE embedded_statement )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==ELSE) ) {
                int LA105_1 = input.LA(2);

                if ( (synpred16_CSharp4()) ) {
                    alt105=1;
                }
            }
            switch (alt105) {
                case 1 :
                    // CSharp4.g:944:73: ( ELSE )=> ELSE embedded_statement
                    {
                    ELSE572=(Token)match(input,ELSE,FOLLOW_ELSE_in_if_statement4059); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ELSE572_tree = 
                    (Object)adaptor.create(ELSE572)
                    ;
                    adaptor.addChild(root_0, ELSE572_tree);
                    }

                    pushFollow(FOLLOW_embedded_statement_in_if_statement4061);
                    embedded_statement573=embedded_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement573.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "if_statement"


    public static class switch_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "switch_statement"
    // CSharp4.g:946:1: switch_statement : SWITCH OPEN_PARENS expression CLOSE_PARENS switch_block ;
    public final CSharp4.switch_statement_return switch_statement() throws RecognitionException {
        CSharp4.switch_statement_return retval = new CSharp4.switch_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SWITCH574=null;
        Token OPEN_PARENS575=null;
        Token CLOSE_PARENS577=null;
        CSharp4.expression_return expression576 =null;

        CSharp4.switch_block_return switch_block578 =null;


        Object SWITCH574_tree=null;
        Object OPEN_PARENS575_tree=null;
        Object CLOSE_PARENS577_tree=null;

        try {
            // CSharp4.g:947:2: ( SWITCH OPEN_PARENS expression CLOSE_PARENS switch_block )
            // CSharp4.g:947:4: SWITCH OPEN_PARENS expression CLOSE_PARENS switch_block
            {
            root_0 = (Object)adaptor.nil();


            SWITCH574=(Token)match(input,SWITCH,FOLLOW_SWITCH_in_switch_statement4076); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SWITCH574_tree = 
            (Object)adaptor.create(SWITCH574)
            ;
            adaptor.addChild(root_0, SWITCH574_tree);
            }

            OPEN_PARENS575=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_switch_statement4078); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS575_tree = 
            (Object)adaptor.create(OPEN_PARENS575)
            ;
            adaptor.addChild(root_0, OPEN_PARENS575_tree);
            }

            pushFollow(FOLLOW_expression_in_switch_statement4080);
            expression576=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression576.getTree());

            CLOSE_PARENS577=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_switch_statement4082); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS577_tree = 
            (Object)adaptor.create(CLOSE_PARENS577)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS577_tree);
            }

            pushFollow(FOLLOW_switch_block_in_switch_statement4084);
            switch_block578=switch_block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_block578.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "switch_statement"


    public static class switch_block_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "switch_block"
    // CSharp4.g:949:1: switch_block : OPEN_BRACE ( switch_sections )? CLOSE_BRACE ;
    public final CSharp4.switch_block_return switch_block() throws RecognitionException {
        CSharp4.switch_block_return retval = new CSharp4.switch_block_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE579=null;
        Token CLOSE_BRACE581=null;
        CSharp4.switch_sections_return switch_sections580 =null;


        Object OPEN_BRACE579_tree=null;
        Object CLOSE_BRACE581_tree=null;

        try {
            // CSharp4.g:950:2: ( OPEN_BRACE ( switch_sections )? CLOSE_BRACE )
            // CSharp4.g:950:4: OPEN_BRACE ( switch_sections )? CLOSE_BRACE
            {
            root_0 = (Object)adaptor.nil();


            OPEN_BRACE579=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_switch_block4095); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACE579_tree = 
            (Object)adaptor.create(OPEN_BRACE579)
            ;
            adaptor.addChild(root_0, OPEN_BRACE579_tree);
            }

            // CSharp4.g:950:15: ( switch_sections )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==CASE||LA106_0==DEFAULT) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // CSharp4.g:950:15: switch_sections
                    {
                    pushFollow(FOLLOW_switch_sections_in_switch_block4097);
                    switch_sections580=switch_sections();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_sections580.getTree());

                    }
                    break;

            }


            CLOSE_BRACE581=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_switch_block4100); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACE581_tree = 
            (Object)adaptor.create(CLOSE_BRACE581)
            ;
            adaptor.addChild(root_0, CLOSE_BRACE581_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "switch_block"


    public static class switch_sections_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "switch_sections"
    // CSharp4.g:952:1: switch_sections : switch_section ( switch_section )* ;
    public final CSharp4.switch_sections_return switch_sections() throws RecognitionException {
        CSharp4.switch_sections_return retval = new CSharp4.switch_sections_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.switch_section_return switch_section582 =null;

        CSharp4.switch_section_return switch_section583 =null;



        try {
            // CSharp4.g:953:2: ( switch_section ( switch_section )* )
            // CSharp4.g:953:4: switch_section ( switch_section )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_switch_section_in_switch_sections4111);
            switch_section582=switch_section();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_section582.getTree());

            // CSharp4.g:953:19: ( switch_section )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==CASE||LA107_0==DEFAULT) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // CSharp4.g:953:21: switch_section
            	    {
            	    pushFollow(FOLLOW_switch_section_in_switch_sections4115);
            	    switch_section583=switch_section();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_section583.getTree());

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "switch_sections"


    public static class switch_section_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "switch_section"
    // CSharp4.g:955:1: switch_section : switch_labels statement_list ;
    public final CSharp4.switch_section_return switch_section() throws RecognitionException {
        CSharp4.switch_section_return retval = new CSharp4.switch_section_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.switch_labels_return switch_labels584 =null;

        CSharp4.statement_list_return statement_list585 =null;



        try {
            // CSharp4.g:956:2: ( switch_labels statement_list )
            // CSharp4.g:956:4: switch_labels statement_list
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_switch_labels_in_switch_section4129);
            switch_labels584=switch_labels();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_labels584.getTree());

            pushFollow(FOLLOW_statement_list_in_switch_section4131);
            statement_list585=statement_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_list585.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "switch_section"


    public static class switch_labels_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "switch_labels"
    // CSharp4.g:958:1: switch_labels : switch_label ( switch_label )* ;
    public final CSharp4.switch_labels_return switch_labels() throws RecognitionException {
        CSharp4.switch_labels_return retval = new CSharp4.switch_labels_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.switch_label_return switch_label586 =null;

        CSharp4.switch_label_return switch_label587 =null;



        try {
            // CSharp4.g:959:2: ( switch_label ( switch_label )* )
            // CSharp4.g:959:4: switch_label ( switch_label )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_switch_label_in_switch_labels4142);
            switch_label586=switch_label();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_label586.getTree());

            // CSharp4.g:959:17: ( switch_label )*
            loop108:
            do {
                int alt108=2;
                int LA108_0 = input.LA(1);

                if ( (LA108_0==DEFAULT) ) {
                    int LA108_2 = input.LA(2);

                    if ( (LA108_2==COLON) ) {
                        alt108=1;
                    }


                }
                else if ( (LA108_0==CASE) ) {
                    alt108=1;
                }


                switch (alt108) {
            	case 1 :
            	    // CSharp4.g:959:19: switch_label
            	    {
            	    pushFollow(FOLLOW_switch_label_in_switch_labels4146);
            	    switch_label587=switch_label();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_label587.getTree());

            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "switch_labels"


    public static class switch_label_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "switch_label"
    // CSharp4.g:961:1: switch_label : ( CASE constant_expression COLON | DEFAULT COLON );
    public final CSharp4.switch_label_return switch_label() throws RecognitionException {
        CSharp4.switch_label_return retval = new CSharp4.switch_label_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token CASE588=null;
        Token COLON590=null;
        Token DEFAULT591=null;
        Token COLON592=null;
        CSharp4.constant_expression_return constant_expression589 =null;


        Object CASE588_tree=null;
        Object COLON590_tree=null;
        Object DEFAULT591_tree=null;
        Object COLON592_tree=null;

        try {
            // CSharp4.g:962:2: ( CASE constant_expression COLON | DEFAULT COLON )
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==CASE) ) {
                alt109=1;
            }
            else if ( (LA109_0==DEFAULT) ) {
                alt109=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;

            }
            switch (alt109) {
                case 1 :
                    // CSharp4.g:962:4: CASE constant_expression COLON
                    {
                    root_0 = (Object)adaptor.nil();


                    CASE588=(Token)match(input,CASE,FOLLOW_CASE_in_switch_label4160); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CASE588_tree = 
                    (Object)adaptor.create(CASE588)
                    ;
                    adaptor.addChild(root_0, CASE588_tree);
                    }

                    pushFollow(FOLLOW_constant_expression_in_switch_label4162);
                    constant_expression589=constant_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression589.getTree());

                    COLON590=(Token)match(input,COLON,FOLLOW_COLON_in_switch_label4164); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON590_tree = 
                    (Object)adaptor.create(COLON590)
                    ;
                    adaptor.addChild(root_0, COLON590_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:963:4: DEFAULT COLON
                    {
                    root_0 = (Object)adaptor.nil();


                    DEFAULT591=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_switch_label4169); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DEFAULT591_tree = 
                    (Object)adaptor.create(DEFAULT591)
                    ;
                    adaptor.addChild(root_0, DEFAULT591_tree);
                    }

                    COLON592=(Token)match(input,COLON,FOLLOW_COLON_in_switch_label4171); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON592_tree = 
                    (Object)adaptor.create(COLON592)
                    ;
                    adaptor.addChild(root_0, COLON592_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "switch_label"


    public static class iteration_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "iteration_statement"
    // CSharp4.g:965:1: iteration_statement : ( while_statement | do_statement | for_statement | foreach_statement );
    public final CSharp4.iteration_statement_return iteration_statement() throws RecognitionException {
        CSharp4.iteration_statement_return retval = new CSharp4.iteration_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.while_statement_return while_statement593 =null;

        CSharp4.do_statement_return do_statement594 =null;

        CSharp4.for_statement_return for_statement595 =null;

        CSharp4.foreach_statement_return foreach_statement596 =null;



        try {
            // CSharp4.g:966:2: ( while_statement | do_statement | for_statement | foreach_statement )
            int alt110=4;
            switch ( input.LA(1) ) {
            case WHILE:
                {
                alt110=1;
                }
                break;
            case DO:
                {
                alt110=2;
                }
                break;
            case FOR:
                {
                alt110=3;
                }
                break;
            case FOREACH:
                {
                alt110=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;

            }

            switch (alt110) {
                case 1 :
                    // CSharp4.g:966:4: while_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_while_statement_in_iteration_statement4182);
                    while_statement593=while_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, while_statement593.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:967:4: do_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_do_statement_in_iteration_statement4187);
                    do_statement594=do_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, do_statement594.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:968:4: for_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_for_statement_in_iteration_statement4192);
                    for_statement595=for_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, for_statement595.getTree());

                    }
                    break;
                case 4 :
                    // CSharp4.g:969:4: foreach_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_foreach_statement_in_iteration_statement4197);
                    foreach_statement596=foreach_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, foreach_statement596.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "iteration_statement"


    public static class while_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "while_statement"
    // CSharp4.g:971:1: while_statement : WHILE OPEN_PARENS boolean_expression CLOSE_PARENS embedded_statement ;
    public final CSharp4.while_statement_return while_statement() throws RecognitionException {
        CSharp4.while_statement_return retval = new CSharp4.while_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token WHILE597=null;
        Token OPEN_PARENS598=null;
        Token CLOSE_PARENS600=null;
        CSharp4.boolean_expression_return boolean_expression599 =null;

        CSharp4.embedded_statement_return embedded_statement601 =null;


        Object WHILE597_tree=null;
        Object OPEN_PARENS598_tree=null;
        Object CLOSE_PARENS600_tree=null;

        try {
            // CSharp4.g:972:2: ( WHILE OPEN_PARENS boolean_expression CLOSE_PARENS embedded_statement )
            // CSharp4.g:972:4: WHILE OPEN_PARENS boolean_expression CLOSE_PARENS embedded_statement
            {
            root_0 = (Object)adaptor.nil();


            WHILE597=(Token)match(input,WHILE,FOLLOW_WHILE_in_while_statement4208); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            WHILE597_tree = 
            (Object)adaptor.create(WHILE597)
            ;
            adaptor.addChild(root_0, WHILE597_tree);
            }

            OPEN_PARENS598=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_while_statement4210); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS598_tree = 
            (Object)adaptor.create(OPEN_PARENS598)
            ;
            adaptor.addChild(root_0, OPEN_PARENS598_tree);
            }

            pushFollow(FOLLOW_boolean_expression_in_while_statement4212);
            boolean_expression599=boolean_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression599.getTree());

            CLOSE_PARENS600=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_while_statement4214); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS600_tree = 
            (Object)adaptor.create(CLOSE_PARENS600)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS600_tree);
            }

            pushFollow(FOLLOW_embedded_statement_in_while_statement4216);
            embedded_statement601=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement601.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "while_statement"


    public static class do_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "do_statement"
    // CSharp4.g:974:1: do_statement : DO embedded_statement WHILE OPEN_PARENS boolean_expression CLOSE_PARENS SEMICOLON ;
    public final CSharp4.do_statement_return do_statement() throws RecognitionException {
        CSharp4.do_statement_return retval = new CSharp4.do_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token DO602=null;
        Token WHILE604=null;
        Token OPEN_PARENS605=null;
        Token CLOSE_PARENS607=null;
        Token SEMICOLON608=null;
        CSharp4.embedded_statement_return embedded_statement603 =null;

        CSharp4.boolean_expression_return boolean_expression606 =null;


        Object DO602_tree=null;
        Object WHILE604_tree=null;
        Object OPEN_PARENS605_tree=null;
        Object CLOSE_PARENS607_tree=null;
        Object SEMICOLON608_tree=null;

        try {
            // CSharp4.g:975:2: ( DO embedded_statement WHILE OPEN_PARENS boolean_expression CLOSE_PARENS SEMICOLON )
            // CSharp4.g:975:4: DO embedded_statement WHILE OPEN_PARENS boolean_expression CLOSE_PARENS SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            DO602=(Token)match(input,DO,FOLLOW_DO_in_do_statement4227); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            DO602_tree = 
            (Object)adaptor.create(DO602)
            ;
            adaptor.addChild(root_0, DO602_tree);
            }

            pushFollow(FOLLOW_embedded_statement_in_do_statement4229);
            embedded_statement603=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement603.getTree());

            WHILE604=(Token)match(input,WHILE,FOLLOW_WHILE_in_do_statement4231); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            WHILE604_tree = 
            (Object)adaptor.create(WHILE604)
            ;
            adaptor.addChild(root_0, WHILE604_tree);
            }

            OPEN_PARENS605=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_do_statement4233); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS605_tree = 
            (Object)adaptor.create(OPEN_PARENS605)
            ;
            adaptor.addChild(root_0, OPEN_PARENS605_tree);
            }

            pushFollow(FOLLOW_boolean_expression_in_do_statement4235);
            boolean_expression606=boolean_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression606.getTree());

            CLOSE_PARENS607=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_do_statement4237); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS607_tree = 
            (Object)adaptor.create(CLOSE_PARENS607)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS607_tree);
            }

            SEMICOLON608=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_do_statement4239); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON608_tree = 
            (Object)adaptor.create(SEMICOLON608)
            ;
            adaptor.addChild(root_0, SEMICOLON608_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "do_statement"


    public static class for_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "for_statement"
    // CSharp4.g:977:1: for_statement : FOR OPEN_PARENS ( for_initializer )? SEMICOLON ( for_condition )? SEMICOLON ( for_iterator )? CLOSE_PARENS embedded_statement ;
    public final CSharp4.for_statement_return for_statement() throws RecognitionException {
        CSharp4.for_statement_return retval = new CSharp4.for_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token FOR609=null;
        Token OPEN_PARENS610=null;
        Token SEMICOLON612=null;
        Token SEMICOLON614=null;
        Token CLOSE_PARENS616=null;
        CSharp4.for_initializer_return for_initializer611 =null;

        CSharp4.for_condition_return for_condition613 =null;

        CSharp4.for_iterator_return for_iterator615 =null;

        CSharp4.embedded_statement_return embedded_statement617 =null;


        Object FOR609_tree=null;
        Object OPEN_PARENS610_tree=null;
        Object SEMICOLON612_tree=null;
        Object SEMICOLON614_tree=null;
        Object CLOSE_PARENS616_tree=null;

        try {
            // CSharp4.g:978:2: ( FOR OPEN_PARENS ( for_initializer )? SEMICOLON ( for_condition )? SEMICOLON ( for_iterator )? CLOSE_PARENS embedded_statement )
            // CSharp4.g:978:4: FOR OPEN_PARENS ( for_initializer )? SEMICOLON ( for_condition )? SEMICOLON ( for_iterator )? CLOSE_PARENS embedded_statement
            {
            root_0 = (Object)adaptor.nil();


            FOR609=(Token)match(input,FOR,FOLLOW_FOR_in_for_statement4250); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            FOR609_tree = 
            (Object)adaptor.create(FOR609)
            ;
            adaptor.addChild(root_0, FOR609_tree);
            }

            OPEN_PARENS610=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_for_statement4252); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS610_tree = 
            (Object)adaptor.create(OPEN_PARENS610)
            ;
            adaptor.addChild(root_0, OPEN_PARENS610_tree);
            }

            // CSharp4.g:978:20: ( for_initializer )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==AMP||(LA111_0 >= BANG && LA111_0 <= BASE)||LA111_0==BOOL||LA111_0==BYTE||(LA111_0 >= CHAR && LA111_0 <= CHECKED)||LA111_0==DECIMAL||(LA111_0 >= DEFAULT && LA111_0 <= DELEGATE)||LA111_0==DOUBLE||LA111_0==FALSE||LA111_0==FLOAT||LA111_0==IDENTIFIER||(LA111_0 >= INT && LA111_0 <= INTEGER_LITERAL)||LA111_0==LONG||LA111_0==MINUS||LA111_0==NEW||LA111_0==NULL||LA111_0==OBJECT||LA111_0==OPEN_PARENS||LA111_0==OP_DEC||LA111_0==OP_INC||LA111_0==PLUS||LA111_0==REAL_LITERAL||LA111_0==SBYTE||LA111_0==SHORT||LA111_0==SIZEOF||LA111_0==STAR||(LA111_0 >= STRING && LA111_0 <= STRING_LITERAL)||LA111_0==THIS||(LA111_0 >= TILDE && LA111_0 <= TRUE)||(LA111_0 >= TYPEOF && LA111_0 <= UNCHECKED)||LA111_0==USHORT||LA111_0==VOID) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // CSharp4.g:978:20: for_initializer
                    {
                    pushFollow(FOLLOW_for_initializer_in_for_statement4254);
                    for_initializer611=for_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, for_initializer611.getTree());

                    }
                    break;

            }


            SEMICOLON612=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_for_statement4257); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON612_tree = 
            (Object)adaptor.create(SEMICOLON612)
            ;
            adaptor.addChild(root_0, SEMICOLON612_tree);
            }

            // CSharp4.g:978:47: ( for_condition )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==AMP||(LA112_0 >= BANG && LA112_0 <= BASE)||LA112_0==BOOL||LA112_0==BYTE||(LA112_0 >= CHAR && LA112_0 <= CHECKED)||LA112_0==DECIMAL||(LA112_0 >= DEFAULT && LA112_0 <= DELEGATE)||LA112_0==DOUBLE||LA112_0==FALSE||LA112_0==FLOAT||LA112_0==IDENTIFIER||(LA112_0 >= INT && LA112_0 <= INTEGER_LITERAL)||LA112_0==LONG||LA112_0==MINUS||LA112_0==NEW||LA112_0==NULL||LA112_0==OBJECT||LA112_0==OPEN_PARENS||LA112_0==OP_DEC||LA112_0==OP_INC||LA112_0==PLUS||LA112_0==REAL_LITERAL||LA112_0==SBYTE||LA112_0==SHORT||LA112_0==SIZEOF||LA112_0==STAR||(LA112_0 >= STRING && LA112_0 <= STRING_LITERAL)||LA112_0==THIS||(LA112_0 >= TILDE && LA112_0 <= TRUE)||(LA112_0 >= TYPEOF && LA112_0 <= UNCHECKED)||LA112_0==USHORT) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // CSharp4.g:978:47: for_condition
                    {
                    pushFollow(FOLLOW_for_condition_in_for_statement4259);
                    for_condition613=for_condition();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, for_condition613.getTree());

                    }
                    break;

            }


            SEMICOLON614=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_for_statement4262); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON614_tree = 
            (Object)adaptor.create(SEMICOLON614)
            ;
            adaptor.addChild(root_0, SEMICOLON614_tree);
            }

            // CSharp4.g:978:72: ( for_iterator )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==AMP||(LA113_0 >= BANG && LA113_0 <= BASE)||LA113_0==BOOL||LA113_0==BYTE||(LA113_0 >= CHAR && LA113_0 <= CHECKED)||LA113_0==DECIMAL||(LA113_0 >= DEFAULT && LA113_0 <= DELEGATE)||LA113_0==DOUBLE||LA113_0==FALSE||LA113_0==FLOAT||LA113_0==IDENTIFIER||(LA113_0 >= INT && LA113_0 <= INTEGER_LITERAL)||LA113_0==LONG||LA113_0==MINUS||LA113_0==NEW||LA113_0==NULL||LA113_0==OBJECT||LA113_0==OPEN_PARENS||LA113_0==OP_DEC||LA113_0==OP_INC||LA113_0==PLUS||LA113_0==REAL_LITERAL||LA113_0==SBYTE||LA113_0==SHORT||LA113_0==SIZEOF||LA113_0==STAR||(LA113_0 >= STRING && LA113_0 <= STRING_LITERAL)||LA113_0==THIS||(LA113_0 >= TILDE && LA113_0 <= TRUE)||(LA113_0 >= TYPEOF && LA113_0 <= UNCHECKED)||LA113_0==USHORT) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // CSharp4.g:978:72: for_iterator
                    {
                    pushFollow(FOLLOW_for_iterator_in_for_statement4264);
                    for_iterator615=for_iterator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, for_iterator615.getTree());

                    }
                    break;

            }


            CLOSE_PARENS616=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_for_statement4267); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS616_tree = 
            (Object)adaptor.create(CLOSE_PARENS616)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS616_tree);
            }

            pushFollow(FOLLOW_embedded_statement_in_for_statement4269);
            embedded_statement617=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement617.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "for_statement"


    public static class for_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "for_initializer"
    // CSharp4.g:980:1: for_initializer : ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list );
    public final CSharp4.for_initializer_return for_initializer() throws RecognitionException {
        CSharp4.for_initializer_return retval = new CSharp4.for_initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.local_variable_declaration_return local_variable_declaration618 =null;

        CSharp4.statement_expression_list_return statement_expression_list619 =null;



        try {
            // CSharp4.g:981:2: ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list )
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==BYTE||LA114_0==CHAR||LA114_0==INT||LA114_0==LONG||LA114_0==SBYTE||LA114_0==SHORT||(LA114_0 >= UINT && LA114_0 <= ULONG)||LA114_0==USHORT) ) {
                int LA114_1 = input.LA(2);

                if ( (synpred17_CSharp4()) ) {
                    alt114=1;
                }
                else if ( (true) ) {
                    alt114=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 114, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA114_0==DOUBLE||LA114_0==FLOAT) ) {
                int LA114_2 = input.LA(2);

                if ( (synpred17_CSharp4()) ) {
                    alt114=1;
                }
                else if ( (true) ) {
                    alt114=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 114, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA114_0==DECIMAL) ) {
                int LA114_3 = input.LA(2);

                if ( (synpred17_CSharp4()) ) {
                    alt114=1;
                }
                else if ( (true) ) {
                    alt114=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 114, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA114_0==BOOL) ) {
                int LA114_4 = input.LA(2);

                if ( (synpred17_CSharp4()) ) {
                    alt114=1;
                }
                else if ( (true) ) {
                    alt114=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 114, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA114_0==IDENTIFIER) ) {
                int LA114_5 = input.LA(2);

                if ( (synpred17_CSharp4()) ) {
                    alt114=1;
                }
                else if ( (true) ) {
                    alt114=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 114, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA114_0==OBJECT) ) {
                int LA114_6 = input.LA(2);

                if ( (synpred17_CSharp4()) ) {
                    alt114=1;
                }
                else if ( (true) ) {
                    alt114=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 114, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA114_0==STRING) ) {
                int LA114_7 = input.LA(2);

                if ( (synpred17_CSharp4()) ) {
                    alt114=1;
                }
                else if ( (true) ) {
                    alt114=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 114, 7, input);

                    throw nvae;

                }
            }
            else if ( (LA114_0==VOID) && (synpred17_CSharp4())) {
                alt114=1;
            }
            else if ( (LA114_0==AMP||(LA114_0 >= BANG && LA114_0 <= BASE)||(LA114_0 >= CHARACTER_LITERAL && LA114_0 <= CHECKED)||(LA114_0 >= DEFAULT && LA114_0 <= DELEGATE)||LA114_0==FALSE||LA114_0==INTEGER_LITERAL||LA114_0==MINUS||LA114_0==NEW||LA114_0==NULL||LA114_0==OPEN_PARENS||LA114_0==OP_DEC||LA114_0==OP_INC||LA114_0==PLUS||LA114_0==REAL_LITERAL||LA114_0==SIZEOF||LA114_0==STAR||LA114_0==STRING_LITERAL||LA114_0==THIS||(LA114_0 >= TILDE && LA114_0 <= TRUE)||LA114_0==TYPEOF||LA114_0==UNCHECKED) ) {
                alt114=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;

            }
            switch (alt114) {
                case 1 :
                    // CSharp4.g:981:4: ( local_variable_declaration )=> local_variable_declaration
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_local_variable_declaration_in_for_initializer4286);
                    local_variable_declaration618=local_variable_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration618.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:982:4: statement_expression_list
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_statement_expression_list_in_for_initializer4291);
                    statement_expression_list619=statement_expression_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression_list619.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "for_initializer"


    public static class for_condition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "for_condition"
    // CSharp4.g:984:1: for_condition : boolean_expression ;
    public final CSharp4.for_condition_return for_condition() throws RecognitionException {
        CSharp4.for_condition_return retval = new CSharp4.for_condition_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.boolean_expression_return boolean_expression620 =null;



        try {
            // CSharp4.g:985:2: ( boolean_expression )
            // CSharp4.g:985:4: boolean_expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_boolean_expression_in_for_condition4302);
            boolean_expression620=boolean_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression620.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "for_condition"


    public static class for_iterator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "for_iterator"
    // CSharp4.g:987:1: for_iterator : statement_expression_list ;
    public final CSharp4.for_iterator_return for_iterator() throws RecognitionException {
        CSharp4.for_iterator_return retval = new CSharp4.for_iterator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.statement_expression_list_return statement_expression_list621 =null;



        try {
            // CSharp4.g:988:2: ( statement_expression_list )
            // CSharp4.g:988:4: statement_expression_list
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_statement_expression_list_in_for_iterator4313);
            statement_expression_list621=statement_expression_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression_list621.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "for_iterator"


    public static class statement_expression_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "statement_expression_list"
    // CSharp4.g:990:1: statement_expression_list : statement_expression ( COMMA statement_expression )* ;
    public final CSharp4.statement_expression_list_return statement_expression_list() throws RecognitionException {
        CSharp4.statement_expression_list_return retval = new CSharp4.statement_expression_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA623=null;
        CSharp4.statement_expression_return statement_expression622 =null;

        CSharp4.statement_expression_return statement_expression624 =null;


        Object COMMA623_tree=null;

        try {
            // CSharp4.g:991:2: ( statement_expression ( COMMA statement_expression )* )
            // CSharp4.g:991:4: statement_expression ( COMMA statement_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_statement_expression_in_statement_expression_list4324);
            statement_expression622=statement_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression622.getTree());

            // CSharp4.g:991:25: ( COMMA statement_expression )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==COMMA) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // CSharp4.g:991:27: COMMA statement_expression
            	    {
            	    COMMA623=(Token)match(input,COMMA,FOLLOW_COMMA_in_statement_expression_list4328); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA623_tree = 
            	    (Object)adaptor.create(COMMA623)
            	    ;
            	    adaptor.addChild(root_0, COMMA623_tree);
            	    }

            	    pushFollow(FOLLOW_statement_expression_in_statement_expression_list4331);
            	    statement_expression624=statement_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression624.getTree());

            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "statement_expression_list"


    public static class foreach_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "foreach_statement"
    // CSharp4.g:993:1: foreach_statement : FOREACH OPEN_PARENS local_variable_type IDENTIFIER IN expression CLOSE_PARENS embedded_statement ;
    public final CSharp4.foreach_statement_return foreach_statement() throws RecognitionException {
        CSharp4.foreach_statement_return retval = new CSharp4.foreach_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token FOREACH625=null;
        Token OPEN_PARENS626=null;
        Token IDENTIFIER628=null;
        Token IN629=null;
        Token CLOSE_PARENS631=null;
        CSharp4.local_variable_type_return local_variable_type627 =null;

        CSharp4.expression_return expression630 =null;

        CSharp4.embedded_statement_return embedded_statement632 =null;


        Object FOREACH625_tree=null;
        Object OPEN_PARENS626_tree=null;
        Object IDENTIFIER628_tree=null;
        Object IN629_tree=null;
        Object CLOSE_PARENS631_tree=null;

        try {
            // CSharp4.g:994:2: ( FOREACH OPEN_PARENS local_variable_type IDENTIFIER IN expression CLOSE_PARENS embedded_statement )
            // CSharp4.g:994:4: FOREACH OPEN_PARENS local_variable_type IDENTIFIER IN expression CLOSE_PARENS embedded_statement
            {
            root_0 = (Object)adaptor.nil();


            FOREACH625=(Token)match(input,FOREACH,FOLLOW_FOREACH_in_foreach_statement4345); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            FOREACH625_tree = 
            (Object)adaptor.create(FOREACH625)
            ;
            adaptor.addChild(root_0, FOREACH625_tree);
            }

            OPEN_PARENS626=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_foreach_statement4347); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS626_tree = 
            (Object)adaptor.create(OPEN_PARENS626)
            ;
            adaptor.addChild(root_0, OPEN_PARENS626_tree);
            }

            pushFollow(FOLLOW_local_variable_type_in_foreach_statement4349);
            local_variable_type627=local_variable_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_type627.getTree());

            IDENTIFIER628=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_foreach_statement4351); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER628_tree = 
            (Object)adaptor.create(IDENTIFIER628)
            ;
            adaptor.addChild(root_0, IDENTIFIER628_tree);
            }

            IN629=(Token)match(input,IN,FOLLOW_IN_in_foreach_statement4353); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IN629_tree = 
            (Object)adaptor.create(IN629)
            ;
            adaptor.addChild(root_0, IN629_tree);
            }

            pushFollow(FOLLOW_expression_in_foreach_statement4355);
            expression630=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression630.getTree());

            CLOSE_PARENS631=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_foreach_statement4357); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS631_tree = 
            (Object)adaptor.create(CLOSE_PARENS631)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS631_tree);
            }

            pushFollow(FOLLOW_embedded_statement_in_foreach_statement4359);
            embedded_statement632=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement632.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "foreach_statement"


    public static class jump_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "jump_statement"
    // CSharp4.g:996:1: jump_statement : ( break_statement | continue_statement | goto_statement | return_statement | throw_statement );
    public final CSharp4.jump_statement_return jump_statement() throws RecognitionException {
        CSharp4.jump_statement_return retval = new CSharp4.jump_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.break_statement_return break_statement633 =null;

        CSharp4.continue_statement_return continue_statement634 =null;

        CSharp4.goto_statement_return goto_statement635 =null;

        CSharp4.return_statement_return return_statement636 =null;

        CSharp4.throw_statement_return throw_statement637 =null;



        try {
            // CSharp4.g:997:2: ( break_statement | continue_statement | goto_statement | return_statement | throw_statement )
            int alt116=5;
            switch ( input.LA(1) ) {
            case BREAK:
                {
                alt116=1;
                }
                break;
            case CONTINUE:
                {
                alt116=2;
                }
                break;
            case GOTO:
                {
                alt116=3;
                }
                break;
            case RETURN:
                {
                alt116=4;
                }
                break;
            case THROW:
                {
                alt116=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 116, 0, input);

                throw nvae;

            }

            switch (alt116) {
                case 1 :
                    // CSharp4.g:997:4: break_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_break_statement_in_jump_statement4370);
                    break_statement633=break_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, break_statement633.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:998:4: continue_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_continue_statement_in_jump_statement4375);
                    continue_statement634=continue_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, continue_statement634.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:999:4: goto_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_goto_statement_in_jump_statement4380);
                    goto_statement635=goto_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, goto_statement635.getTree());

                    }
                    break;
                case 4 :
                    // CSharp4.g:1000:4: return_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_return_statement_in_jump_statement4385);
                    return_statement636=return_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, return_statement636.getTree());

                    }
                    break;
                case 5 :
                    // CSharp4.g:1001:4: throw_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_throw_statement_in_jump_statement4390);
                    throw_statement637=throw_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, throw_statement637.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "jump_statement"


    public static class break_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "break_statement"
    // CSharp4.g:1003:1: break_statement : BREAK SEMICOLON ;
    public final CSharp4.break_statement_return break_statement() throws RecognitionException {
        CSharp4.break_statement_return retval = new CSharp4.break_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token BREAK638=null;
        Token SEMICOLON639=null;

        Object BREAK638_tree=null;
        Object SEMICOLON639_tree=null;

        try {
            // CSharp4.g:1004:2: ( BREAK SEMICOLON )
            // CSharp4.g:1004:4: BREAK SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            BREAK638=(Token)match(input,BREAK,FOLLOW_BREAK_in_break_statement4401); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            BREAK638_tree = 
            (Object)adaptor.create(BREAK638)
            ;
            adaptor.addChild(root_0, BREAK638_tree);
            }

            SEMICOLON639=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_break_statement4403); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON639_tree = 
            (Object)adaptor.create(SEMICOLON639)
            ;
            adaptor.addChild(root_0, SEMICOLON639_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "break_statement"


    public static class continue_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "continue_statement"
    // CSharp4.g:1006:1: continue_statement : CONTINUE SEMICOLON ;
    public final CSharp4.continue_statement_return continue_statement() throws RecognitionException {
        CSharp4.continue_statement_return retval = new CSharp4.continue_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token CONTINUE640=null;
        Token SEMICOLON641=null;

        Object CONTINUE640_tree=null;
        Object SEMICOLON641_tree=null;

        try {
            // CSharp4.g:1007:2: ( CONTINUE SEMICOLON )
            // CSharp4.g:1007:4: CONTINUE SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            CONTINUE640=(Token)match(input,CONTINUE,FOLLOW_CONTINUE_in_continue_statement4414); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CONTINUE640_tree = 
            (Object)adaptor.create(CONTINUE640)
            ;
            adaptor.addChild(root_0, CONTINUE640_tree);
            }

            SEMICOLON641=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_continue_statement4416); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON641_tree = 
            (Object)adaptor.create(SEMICOLON641)
            ;
            adaptor.addChild(root_0, SEMICOLON641_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "continue_statement"


    public static class goto_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "goto_statement"
    // CSharp4.g:1009:1: goto_statement : ( GOTO IDENTIFIER SEMICOLON | GOTO CASE constant_expression SEMICOLON | GOTO DEFAULT SEMICOLON );
    public final CSharp4.goto_statement_return goto_statement() throws RecognitionException {
        CSharp4.goto_statement_return retval = new CSharp4.goto_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token GOTO642=null;
        Token IDENTIFIER643=null;
        Token SEMICOLON644=null;
        Token GOTO645=null;
        Token CASE646=null;
        Token SEMICOLON648=null;
        Token GOTO649=null;
        Token DEFAULT650=null;
        Token SEMICOLON651=null;
        CSharp4.constant_expression_return constant_expression647 =null;


        Object GOTO642_tree=null;
        Object IDENTIFIER643_tree=null;
        Object SEMICOLON644_tree=null;
        Object GOTO645_tree=null;
        Object CASE646_tree=null;
        Object SEMICOLON648_tree=null;
        Object GOTO649_tree=null;
        Object DEFAULT650_tree=null;
        Object SEMICOLON651_tree=null;

        try {
            // CSharp4.g:1010:2: ( GOTO IDENTIFIER SEMICOLON | GOTO CASE constant_expression SEMICOLON | GOTO DEFAULT SEMICOLON )
            int alt117=3;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==GOTO) ) {
                switch ( input.LA(2) ) {
                case IDENTIFIER:
                    {
                    alt117=1;
                    }
                    break;
                case CASE:
                    {
                    alt117=2;
                    }
                    break;
                case DEFAULT:
                    {
                    alt117=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 117, 1, input);

                    throw nvae;

                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;

            }
            switch (alt117) {
                case 1 :
                    // CSharp4.g:1010:4: GOTO IDENTIFIER SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    GOTO642=(Token)match(input,GOTO,FOLLOW_GOTO_in_goto_statement4427); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    GOTO642_tree = 
                    (Object)adaptor.create(GOTO642)
                    ;
                    adaptor.addChild(root_0, GOTO642_tree);
                    }

                    IDENTIFIER643=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_goto_statement4429); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER643_tree = 
                    (Object)adaptor.create(IDENTIFIER643)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER643_tree);
                    }

                    SEMICOLON644=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_goto_statement4431); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON644_tree = 
                    (Object)adaptor.create(SEMICOLON644)
                    ;
                    adaptor.addChild(root_0, SEMICOLON644_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1011:4: GOTO CASE constant_expression SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    GOTO645=(Token)match(input,GOTO,FOLLOW_GOTO_in_goto_statement4436); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    GOTO645_tree = 
                    (Object)adaptor.create(GOTO645)
                    ;
                    adaptor.addChild(root_0, GOTO645_tree);
                    }

                    CASE646=(Token)match(input,CASE,FOLLOW_CASE_in_goto_statement4438); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CASE646_tree = 
                    (Object)adaptor.create(CASE646)
                    ;
                    adaptor.addChild(root_0, CASE646_tree);
                    }

                    pushFollow(FOLLOW_constant_expression_in_goto_statement4440);
                    constant_expression647=constant_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression647.getTree());

                    SEMICOLON648=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_goto_statement4442); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON648_tree = 
                    (Object)adaptor.create(SEMICOLON648)
                    ;
                    adaptor.addChild(root_0, SEMICOLON648_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1012:4: GOTO DEFAULT SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    GOTO649=(Token)match(input,GOTO,FOLLOW_GOTO_in_goto_statement4447); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    GOTO649_tree = 
                    (Object)adaptor.create(GOTO649)
                    ;
                    adaptor.addChild(root_0, GOTO649_tree);
                    }

                    DEFAULT650=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_goto_statement4449); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DEFAULT650_tree = 
                    (Object)adaptor.create(DEFAULT650)
                    ;
                    adaptor.addChild(root_0, DEFAULT650_tree);
                    }

                    SEMICOLON651=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_goto_statement4451); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON651_tree = 
                    (Object)adaptor.create(SEMICOLON651)
                    ;
                    adaptor.addChild(root_0, SEMICOLON651_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "goto_statement"


    public static class return_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "return_statement"
    // CSharp4.g:1014:1: return_statement : RETURN ( expression )? SEMICOLON ;
    public final CSharp4.return_statement_return return_statement() throws RecognitionException {
        CSharp4.return_statement_return retval = new CSharp4.return_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token RETURN652=null;
        Token SEMICOLON654=null;
        CSharp4.expression_return expression653 =null;


        Object RETURN652_tree=null;
        Object SEMICOLON654_tree=null;

        try {
            // CSharp4.g:1015:2: ( RETURN ( expression )? SEMICOLON )
            // CSharp4.g:1015:4: RETURN ( expression )? SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            RETURN652=(Token)match(input,RETURN,FOLLOW_RETURN_in_return_statement4462); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RETURN652_tree = 
            (Object)adaptor.create(RETURN652)
            ;
            adaptor.addChild(root_0, RETURN652_tree);
            }

            // CSharp4.g:1015:11: ( expression )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==AMP||(LA118_0 >= BANG && LA118_0 <= BASE)||LA118_0==BOOL||LA118_0==BYTE||(LA118_0 >= CHAR && LA118_0 <= CHECKED)||LA118_0==DECIMAL||(LA118_0 >= DEFAULT && LA118_0 <= DELEGATE)||LA118_0==DOUBLE||LA118_0==FALSE||LA118_0==FLOAT||LA118_0==IDENTIFIER||(LA118_0 >= INT && LA118_0 <= INTEGER_LITERAL)||LA118_0==LONG||LA118_0==MINUS||LA118_0==NEW||LA118_0==NULL||LA118_0==OBJECT||LA118_0==OPEN_PARENS||LA118_0==OP_DEC||LA118_0==OP_INC||LA118_0==PLUS||LA118_0==REAL_LITERAL||LA118_0==SBYTE||LA118_0==SHORT||LA118_0==SIZEOF||LA118_0==STAR||(LA118_0 >= STRING && LA118_0 <= STRING_LITERAL)||LA118_0==THIS||(LA118_0 >= TILDE && LA118_0 <= TRUE)||(LA118_0 >= TYPEOF && LA118_0 <= UNCHECKED)||LA118_0==USHORT) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // CSharp4.g:1015:11: expression
                    {
                    pushFollow(FOLLOW_expression_in_return_statement4464);
                    expression653=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression653.getTree());

                    }
                    break;

            }


            SEMICOLON654=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_return_statement4467); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON654_tree = 
            (Object)adaptor.create(SEMICOLON654)
            ;
            adaptor.addChild(root_0, SEMICOLON654_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "return_statement"


    public static class throw_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "throw_statement"
    // CSharp4.g:1017:1: throw_statement : THROW ( expression )? SEMICOLON ;
    public final CSharp4.throw_statement_return throw_statement() throws RecognitionException {
        CSharp4.throw_statement_return retval = new CSharp4.throw_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token THROW655=null;
        Token SEMICOLON657=null;
        CSharp4.expression_return expression656 =null;


        Object THROW655_tree=null;
        Object SEMICOLON657_tree=null;

        try {
            // CSharp4.g:1018:2: ( THROW ( expression )? SEMICOLON )
            // CSharp4.g:1018:4: THROW ( expression )? SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            THROW655=(Token)match(input,THROW,FOLLOW_THROW_in_throw_statement4478); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            THROW655_tree = 
            (Object)adaptor.create(THROW655)
            ;
            adaptor.addChild(root_0, THROW655_tree);
            }

            // CSharp4.g:1018:10: ( expression )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==AMP||(LA119_0 >= BANG && LA119_0 <= BASE)||LA119_0==BOOL||LA119_0==BYTE||(LA119_0 >= CHAR && LA119_0 <= CHECKED)||LA119_0==DECIMAL||(LA119_0 >= DEFAULT && LA119_0 <= DELEGATE)||LA119_0==DOUBLE||LA119_0==FALSE||LA119_0==FLOAT||LA119_0==IDENTIFIER||(LA119_0 >= INT && LA119_0 <= INTEGER_LITERAL)||LA119_0==LONG||LA119_0==MINUS||LA119_0==NEW||LA119_0==NULL||LA119_0==OBJECT||LA119_0==OPEN_PARENS||LA119_0==OP_DEC||LA119_0==OP_INC||LA119_0==PLUS||LA119_0==REAL_LITERAL||LA119_0==SBYTE||LA119_0==SHORT||LA119_0==SIZEOF||LA119_0==STAR||(LA119_0 >= STRING && LA119_0 <= STRING_LITERAL)||LA119_0==THIS||(LA119_0 >= TILDE && LA119_0 <= TRUE)||(LA119_0 >= TYPEOF && LA119_0 <= UNCHECKED)||LA119_0==USHORT) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // CSharp4.g:1018:10: expression
                    {
                    pushFollow(FOLLOW_expression_in_throw_statement4480);
                    expression656=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression656.getTree());

                    }
                    break;

            }


            SEMICOLON657=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_throw_statement4483); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON657_tree = 
            (Object)adaptor.create(SEMICOLON657)
            ;
            adaptor.addChild(root_0, SEMICOLON657_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "throw_statement"


    public static class try_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "try_statement"
    // CSharp4.g:1027:1: try_statement : TRY block ( catch_clauses )? ( finally_clause )? ;
    public final CSharp4.try_statement_return try_statement() throws RecognitionException {
        CSharp4.try_statement_return retval = new CSharp4.try_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token TRY658=null;
        CSharp4.block_return block659 =null;

        CSharp4.catch_clauses_return catch_clauses660 =null;

        CSharp4.finally_clause_return finally_clause661 =null;


        Object TRY658_tree=null;

        try {
            // CSharp4.g:1028:3: ( TRY block ( catch_clauses )? ( finally_clause )? )
            // CSharp4.g:1028:5: TRY block ( catch_clauses )? ( finally_clause )?
            {
            root_0 = (Object)adaptor.nil();


            TRY658=(Token)match(input,TRY,FOLLOW_TRY_in_try_statement4497); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            TRY658_tree = 
            (Object)adaptor.create(TRY658)
            ;
            adaptor.addChild(root_0, TRY658_tree);
            }

            pushFollow(FOLLOW_block_in_try_statement4499);
            block659=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block659.getTree());

            // CSharp4.g:1028:15: ( catch_clauses )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==CATCH) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // CSharp4.g:1028:15: catch_clauses
                    {
                    pushFollow(FOLLOW_catch_clauses_in_try_statement4501);
                    catch_clauses660=catch_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, catch_clauses660.getTree());

                    }
                    break;

            }


            // CSharp4.g:1028:30: ( finally_clause )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==FINALLY) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // CSharp4.g:1028:30: finally_clause
                    {
                    pushFollow(FOLLOW_finally_clause_in_try_statement4504);
                    finally_clause661=finally_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, finally_clause661.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "try_statement"


    public static class catch_clauses_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "catch_clauses"
    // CSharp4.g:1036:1: catch_clauses : ( specific_catch_clauses ( general_catch_clause )? | general_catch_clause );
    public final CSharp4.catch_clauses_return catch_clauses() throws RecognitionException {
        CSharp4.catch_clauses_return retval = new CSharp4.catch_clauses_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.specific_catch_clauses_return specific_catch_clauses662 =null;

        CSharp4.general_catch_clause_return general_catch_clause663 =null;

        CSharp4.general_catch_clause_return general_catch_clause664 =null;



        try {
            // CSharp4.g:1037:3: ( specific_catch_clauses ( general_catch_clause )? | general_catch_clause )
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==CATCH) ) {
                int LA123_1 = input.LA(2);

                if ( (LA123_1==OPEN_PARENS) ) {
                    alt123=1;
                }
                else if ( (LA123_1==OPEN_BRACE) ) {
                    alt123=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 123, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 123, 0, input);

                throw nvae;

            }
            switch (alt123) {
                case 1 :
                    // CSharp4.g:1037:5: specific_catch_clauses ( general_catch_clause )?
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_specific_catch_clauses_in_catch_clauses4520);
                    specific_catch_clauses662=specific_catch_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, specific_catch_clauses662.getTree());

                    // CSharp4.g:1037:28: ( general_catch_clause )?
                    int alt122=2;
                    int LA122_0 = input.LA(1);

                    if ( (LA122_0==CATCH) ) {
                        alt122=1;
                    }
                    switch (alt122) {
                        case 1 :
                            // CSharp4.g:1037:28: general_catch_clause
                            {
                            pushFollow(FOLLOW_general_catch_clause_in_catch_clauses4522);
                            general_catch_clause663=general_catch_clause();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, general_catch_clause663.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // CSharp4.g:1038:5: general_catch_clause
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_general_catch_clause_in_catch_clauses4529);
                    general_catch_clause664=general_catch_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, general_catch_clause664.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "catch_clauses"


    public static class specific_catch_clauses_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "specific_catch_clauses"
    // CSharp4.g:1040:1: specific_catch_clauses : specific_catch_clause ( specific_catch_clause )* ;
    public final CSharp4.specific_catch_clauses_return specific_catch_clauses() throws RecognitionException {
        CSharp4.specific_catch_clauses_return retval = new CSharp4.specific_catch_clauses_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.specific_catch_clause_return specific_catch_clause665 =null;

        CSharp4.specific_catch_clause_return specific_catch_clause666 =null;



        try {
            // CSharp4.g:1041:2: ( specific_catch_clause ( specific_catch_clause )* )
            // CSharp4.g:1041:4: specific_catch_clause ( specific_catch_clause )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_specific_catch_clause_in_specific_catch_clauses4541);
            specific_catch_clause665=specific_catch_clause();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, specific_catch_clause665.getTree());

            // CSharp4.g:1041:26: ( specific_catch_clause )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==CATCH) ) {
                    int LA124_1 = input.LA(2);

                    if ( (LA124_1==OPEN_PARENS) ) {
                        alt124=1;
                    }


                }


                switch (alt124) {
            	case 1 :
            	    // CSharp4.g:1041:28: specific_catch_clause
            	    {
            	    pushFollow(FOLLOW_specific_catch_clause_in_specific_catch_clauses4545);
            	    specific_catch_clause666=specific_catch_clause();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, specific_catch_clause666.getTree());

            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "specific_catch_clauses"


    public static class specific_catch_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "specific_catch_clause"
    // CSharp4.g:1043:1: specific_catch_clause : CATCH OPEN_PARENS class_type ( IDENTIFIER )? CLOSE_PARENS block ;
    public final CSharp4.specific_catch_clause_return specific_catch_clause() throws RecognitionException {
        CSharp4.specific_catch_clause_return retval = new CSharp4.specific_catch_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token CATCH667=null;
        Token OPEN_PARENS668=null;
        Token IDENTIFIER670=null;
        Token CLOSE_PARENS671=null;
        CSharp4.class_type_return class_type669 =null;

        CSharp4.block_return block672 =null;


        Object CATCH667_tree=null;
        Object OPEN_PARENS668_tree=null;
        Object IDENTIFIER670_tree=null;
        Object CLOSE_PARENS671_tree=null;

        try {
            // CSharp4.g:1044:2: ( CATCH OPEN_PARENS class_type ( IDENTIFIER )? CLOSE_PARENS block )
            // CSharp4.g:1044:4: CATCH OPEN_PARENS class_type ( IDENTIFIER )? CLOSE_PARENS block
            {
            root_0 = (Object)adaptor.nil();


            CATCH667=(Token)match(input,CATCH,FOLLOW_CATCH_in_specific_catch_clause4559); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CATCH667_tree = 
            (Object)adaptor.create(CATCH667)
            ;
            adaptor.addChild(root_0, CATCH667_tree);
            }

            OPEN_PARENS668=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_specific_catch_clause4561); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS668_tree = 
            (Object)adaptor.create(OPEN_PARENS668)
            ;
            adaptor.addChild(root_0, OPEN_PARENS668_tree);
            }

            pushFollow(FOLLOW_class_type_in_specific_catch_clause4563);
            class_type669=class_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, class_type669.getTree());

            // CSharp4.g:1044:33: ( IDENTIFIER )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==IDENTIFIER) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // CSharp4.g:1044:33: IDENTIFIER
                    {
                    IDENTIFIER670=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_specific_catch_clause4565); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER670_tree = 
                    (Object)adaptor.create(IDENTIFIER670)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER670_tree);
                    }

                    }
                    break;

            }


            CLOSE_PARENS671=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_specific_catch_clause4568); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS671_tree = 
            (Object)adaptor.create(CLOSE_PARENS671)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS671_tree);
            }

            pushFollow(FOLLOW_block_in_specific_catch_clause4570);
            block672=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block672.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "specific_catch_clause"


    public static class general_catch_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "general_catch_clause"
    // CSharp4.g:1046:1: general_catch_clause : CATCH block ;
    public final CSharp4.general_catch_clause_return general_catch_clause() throws RecognitionException {
        CSharp4.general_catch_clause_return retval = new CSharp4.general_catch_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token CATCH673=null;
        CSharp4.block_return block674 =null;


        Object CATCH673_tree=null;

        try {
            // CSharp4.g:1047:2: ( CATCH block )
            // CSharp4.g:1047:4: CATCH block
            {
            root_0 = (Object)adaptor.nil();


            CATCH673=(Token)match(input,CATCH,FOLLOW_CATCH_in_general_catch_clause4581); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CATCH673_tree = 
            (Object)adaptor.create(CATCH673)
            ;
            adaptor.addChild(root_0, CATCH673_tree);
            }

            pushFollow(FOLLOW_block_in_general_catch_clause4583);
            block674=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block674.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "general_catch_clause"


    public static class finally_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "finally_clause"
    // CSharp4.g:1049:1: finally_clause : FINALLY block ;
    public final CSharp4.finally_clause_return finally_clause() throws RecognitionException {
        CSharp4.finally_clause_return retval = new CSharp4.finally_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token FINALLY675=null;
        CSharp4.block_return block676 =null;


        Object FINALLY675_tree=null;

        try {
            // CSharp4.g:1050:2: ( FINALLY block )
            // CSharp4.g:1050:4: FINALLY block
            {
            root_0 = (Object)adaptor.nil();


            FINALLY675=(Token)match(input,FINALLY,FOLLOW_FINALLY_in_finally_clause4594); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            FINALLY675_tree = 
            (Object)adaptor.create(FINALLY675)
            ;
            adaptor.addChild(root_0, FINALLY675_tree);
            }

            pushFollow(FOLLOW_block_in_finally_clause4596);
            block676=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block676.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "finally_clause"


    public static class checked_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "checked_statement"
    // CSharp4.g:1052:1: checked_statement : CHECKED block ;
    public final CSharp4.checked_statement_return checked_statement() throws RecognitionException {
        CSharp4.checked_statement_return retval = new CSharp4.checked_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token CHECKED677=null;
        CSharp4.block_return block678 =null;


        Object CHECKED677_tree=null;

        try {
            // CSharp4.g:1053:2: ( CHECKED block )
            // CSharp4.g:1053:4: CHECKED block
            {
            root_0 = (Object)adaptor.nil();


            CHECKED677=(Token)match(input,CHECKED,FOLLOW_CHECKED_in_checked_statement4607); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CHECKED677_tree = 
            (Object)adaptor.create(CHECKED677)
            ;
            adaptor.addChild(root_0, CHECKED677_tree);
            }

            pushFollow(FOLLOW_block_in_checked_statement4609);
            block678=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block678.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "checked_statement"


    public static class unchecked_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "unchecked_statement"
    // CSharp4.g:1055:1: unchecked_statement : UNCHECKED block ;
    public final CSharp4.unchecked_statement_return unchecked_statement() throws RecognitionException {
        CSharp4.unchecked_statement_return retval = new CSharp4.unchecked_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNCHECKED679=null;
        CSharp4.block_return block680 =null;


        Object UNCHECKED679_tree=null;

        try {
            // CSharp4.g:1056:2: ( UNCHECKED block )
            // CSharp4.g:1056:4: UNCHECKED block
            {
            root_0 = (Object)adaptor.nil();


            UNCHECKED679=(Token)match(input,UNCHECKED,FOLLOW_UNCHECKED_in_unchecked_statement4620); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNCHECKED679_tree = 
            (Object)adaptor.create(UNCHECKED679)
            ;
            adaptor.addChild(root_0, UNCHECKED679_tree);
            }

            pushFollow(FOLLOW_block_in_unchecked_statement4622);
            block680=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block680.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unchecked_statement"


    public static class lock_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "lock_statement"
    // CSharp4.g:1058:1: lock_statement : LOCK OPEN_PARENS expression CLOSE_PARENS embedded_statement ;
    public final CSharp4.lock_statement_return lock_statement() throws RecognitionException {
        CSharp4.lock_statement_return retval = new CSharp4.lock_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token LOCK681=null;
        Token OPEN_PARENS682=null;
        Token CLOSE_PARENS684=null;
        CSharp4.expression_return expression683 =null;

        CSharp4.embedded_statement_return embedded_statement685 =null;


        Object LOCK681_tree=null;
        Object OPEN_PARENS682_tree=null;
        Object CLOSE_PARENS684_tree=null;

        try {
            // CSharp4.g:1059:2: ( LOCK OPEN_PARENS expression CLOSE_PARENS embedded_statement )
            // CSharp4.g:1059:4: LOCK OPEN_PARENS expression CLOSE_PARENS embedded_statement
            {
            root_0 = (Object)adaptor.nil();


            LOCK681=(Token)match(input,LOCK,FOLLOW_LOCK_in_lock_statement4633); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LOCK681_tree = 
            (Object)adaptor.create(LOCK681)
            ;
            adaptor.addChild(root_0, LOCK681_tree);
            }

            OPEN_PARENS682=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_lock_statement4635); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS682_tree = 
            (Object)adaptor.create(OPEN_PARENS682)
            ;
            adaptor.addChild(root_0, OPEN_PARENS682_tree);
            }

            pushFollow(FOLLOW_expression_in_lock_statement4637);
            expression683=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression683.getTree());

            CLOSE_PARENS684=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_lock_statement4639); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS684_tree = 
            (Object)adaptor.create(CLOSE_PARENS684)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS684_tree);
            }

            pushFollow(FOLLOW_embedded_statement_in_lock_statement4641);
            embedded_statement685=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement685.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "lock_statement"


    public static class using_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "using_statement"
    // CSharp4.g:1061:1: using_statement : USING OPEN_PARENS resource_acquisition CLOSE_PARENS embedded_statement ;
    public final CSharp4.using_statement_return using_statement() throws RecognitionException {
        CSharp4.using_statement_return retval = new CSharp4.using_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token USING686=null;
        Token OPEN_PARENS687=null;
        Token CLOSE_PARENS689=null;
        CSharp4.resource_acquisition_return resource_acquisition688 =null;

        CSharp4.embedded_statement_return embedded_statement690 =null;


        Object USING686_tree=null;
        Object OPEN_PARENS687_tree=null;
        Object CLOSE_PARENS689_tree=null;

        try {
            // CSharp4.g:1062:2: ( USING OPEN_PARENS resource_acquisition CLOSE_PARENS embedded_statement )
            // CSharp4.g:1062:4: USING OPEN_PARENS resource_acquisition CLOSE_PARENS embedded_statement
            {
            root_0 = (Object)adaptor.nil();


            USING686=(Token)match(input,USING,FOLLOW_USING_in_using_statement4652); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            USING686_tree = 
            (Object)adaptor.create(USING686)
            ;
            adaptor.addChild(root_0, USING686_tree);
            }

            OPEN_PARENS687=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_using_statement4654); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS687_tree = 
            (Object)adaptor.create(OPEN_PARENS687)
            ;
            adaptor.addChild(root_0, OPEN_PARENS687_tree);
            }

            pushFollow(FOLLOW_resource_acquisition_in_using_statement4656);
            resource_acquisition688=resource_acquisition();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, resource_acquisition688.getTree());

            CLOSE_PARENS689=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_using_statement4658); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS689_tree = 
            (Object)adaptor.create(CLOSE_PARENS689)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS689_tree);
            }

            pushFollow(FOLLOW_embedded_statement_in_using_statement4660);
            embedded_statement690=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement690.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "using_statement"


    public static class resource_acquisition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "resource_acquisition"
    // CSharp4.g:1070:1: resource_acquisition : ( ( local_variable_declaration )=> local_variable_declaration | expression );
    public final CSharp4.resource_acquisition_return resource_acquisition() throws RecognitionException {
        CSharp4.resource_acquisition_return retval = new CSharp4.resource_acquisition_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.local_variable_declaration_return local_variable_declaration691 =null;

        CSharp4.expression_return expression692 =null;



        try {
            // CSharp4.g:1071:2: ( ( local_variable_declaration )=> local_variable_declaration | expression )
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==BYTE||LA126_0==CHAR||LA126_0==INT||LA126_0==LONG||LA126_0==SBYTE||LA126_0==SHORT||(LA126_0 >= UINT && LA126_0 <= ULONG)||LA126_0==USHORT) ) {
                int LA126_1 = input.LA(2);

                if ( (synpred18_CSharp4()) ) {
                    alt126=1;
                }
                else if ( (true) ) {
                    alt126=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==DOUBLE||LA126_0==FLOAT) ) {
                int LA126_2 = input.LA(2);

                if ( (synpred18_CSharp4()) ) {
                    alt126=1;
                }
                else if ( (true) ) {
                    alt126=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==DECIMAL) ) {
                int LA126_3 = input.LA(2);

                if ( (synpred18_CSharp4()) ) {
                    alt126=1;
                }
                else if ( (true) ) {
                    alt126=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==BOOL) ) {
                int LA126_4 = input.LA(2);

                if ( (synpred18_CSharp4()) ) {
                    alt126=1;
                }
                else if ( (true) ) {
                    alt126=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==IDENTIFIER) ) {
                int LA126_5 = input.LA(2);

                if ( (synpred18_CSharp4()) ) {
                    alt126=1;
                }
                else if ( (true) ) {
                    alt126=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==OBJECT) ) {
                int LA126_6 = input.LA(2);

                if ( (synpred18_CSharp4()) ) {
                    alt126=1;
                }
                else if ( (true) ) {
                    alt126=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==STRING) ) {
                int LA126_7 = input.LA(2);

                if ( (synpred18_CSharp4()) ) {
                    alt126=1;
                }
                else if ( (true) ) {
                    alt126=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 7, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==VOID) && (synpred18_CSharp4())) {
                alt126=1;
            }
            else if ( (LA126_0==AMP||(LA126_0 >= BANG && LA126_0 <= BASE)||(LA126_0 >= CHARACTER_LITERAL && LA126_0 <= CHECKED)||(LA126_0 >= DEFAULT && LA126_0 <= DELEGATE)||LA126_0==FALSE||LA126_0==INTEGER_LITERAL||LA126_0==MINUS||LA126_0==NEW||LA126_0==NULL||LA126_0==OPEN_PARENS||LA126_0==OP_DEC||LA126_0==OP_INC||LA126_0==PLUS||LA126_0==REAL_LITERAL||LA126_0==SIZEOF||LA126_0==STAR||LA126_0==STRING_LITERAL||LA126_0==THIS||(LA126_0 >= TILDE && LA126_0 <= TRUE)||LA126_0==TYPEOF||LA126_0==UNCHECKED) ) {
                alt126=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;

            }
            switch (alt126) {
                case 1 :
                    // CSharp4.g:1071:4: ( local_variable_declaration )=> local_variable_declaration
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_local_variable_declaration_in_resource_acquisition4679);
                    local_variable_declaration691=local_variable_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration691.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1072:4: expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_expression_in_resource_acquisition4684);
                    expression692=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression692.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "resource_acquisition"


    public static class yield_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "yield_statement"
    // CSharp4.g:1074:1: yield_statement : ( yield_contextual_keyword RETURN expression SEMICOLON | yield_contextual_keyword BREAK SEMICOLON );
    public final CSharp4.yield_statement_return yield_statement() throws RecognitionException {
        CSharp4.yield_statement_return retval = new CSharp4.yield_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token RETURN694=null;
        Token SEMICOLON696=null;
        Token BREAK698=null;
        Token SEMICOLON699=null;
        CSharp4.yield_contextual_keyword_return yield_contextual_keyword693 =null;

        CSharp4.expression_return expression695 =null;

        CSharp4.yield_contextual_keyword_return yield_contextual_keyword697 =null;


        Object RETURN694_tree=null;
        Object SEMICOLON696_tree=null;
        Object BREAK698_tree=null;
        Object SEMICOLON699_tree=null;

        try {
            // CSharp4.g:1075:2: ( yield_contextual_keyword RETURN expression SEMICOLON | yield_contextual_keyword BREAK SEMICOLON )
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==IDENTIFIER) ) {
                int LA127_1 = input.LA(2);

                if ( (LA127_1==RETURN) ) {
                    alt127=1;
                }
                else if ( (LA127_1==BREAK) ) {
                    alt127=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 127, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;

            }
            switch (alt127) {
                case 1 :
                    // CSharp4.g:1075:4: yield_contextual_keyword RETURN expression SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_yield_contextual_keyword_in_yield_statement4695);
                    yield_contextual_keyword693=yield_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, yield_contextual_keyword693.getTree());

                    RETURN694=(Token)match(input,RETURN,FOLLOW_RETURN_in_yield_statement4697); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RETURN694_tree = 
                    (Object)adaptor.create(RETURN694)
                    ;
                    adaptor.addChild(root_0, RETURN694_tree);
                    }

                    pushFollow(FOLLOW_expression_in_yield_statement4699);
                    expression695=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression695.getTree());

                    SEMICOLON696=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_yield_statement4701); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON696_tree = 
                    (Object)adaptor.create(SEMICOLON696)
                    ;
                    adaptor.addChild(root_0, SEMICOLON696_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1076:4: yield_contextual_keyword BREAK SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_yield_contextual_keyword_in_yield_statement4706);
                    yield_contextual_keyword697=yield_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, yield_contextual_keyword697.getTree());

                    BREAK698=(Token)match(input,BREAK,FOLLOW_BREAK_in_yield_statement4708); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BREAK698_tree = 
                    (Object)adaptor.create(BREAK698)
                    ;
                    adaptor.addChild(root_0, BREAK698_tree);
                    }

                    SEMICOLON699=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_yield_statement4710); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON699_tree = 
                    (Object)adaptor.create(SEMICOLON699)
                    ;
                    adaptor.addChild(root_0, SEMICOLON699_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "yield_statement"


    public static class compilation_unit_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "compilation_unit"
    // CSharp4.g:1088:1: compilation_unit : ( extern_alias_directives )? ( using_directives )? ( ( global_attribute_section )=> global_attribute_section )* ( namespace_member_declarations )? EOF ;
    public final CSharp4.compilation_unit_return compilation_unit() throws RecognitionException {
        CSharp4.compilation_unit_return retval = new CSharp4.compilation_unit_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token EOF704=null;
        CSharp4.extern_alias_directives_return extern_alias_directives700 =null;

        CSharp4.using_directives_return using_directives701 =null;

        CSharp4.global_attribute_section_return global_attribute_section702 =null;

        CSharp4.namespace_member_declarations_return namespace_member_declarations703 =null;


        Object EOF704_tree=null;

        try {
            // CSharp4.g:1089:3: ( ( extern_alias_directives )? ( using_directives )? ( ( global_attribute_section )=> global_attribute_section )* ( namespace_member_declarations )? EOF )
            // CSharp4.g:1089:5: ( extern_alias_directives )? ( using_directives )? ( ( global_attribute_section )=> global_attribute_section )* ( namespace_member_declarations )? EOF
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1089:5: ( extern_alias_directives )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==EXTERN) ) {
                int LA128_1 = input.LA(2);

                if ( (LA128_1==IDENTIFIER) ) {
                    int LA128_3 = input.LA(3);

                    if ( (LA128_3==IDENTIFIER) ) {
                        int LA128_4 = input.LA(4);

                        if ( (LA128_4==SEMICOLON) ) {
                            alt128=1;
                        }
                    }
                }
            }
            switch (alt128) {
                case 1 :
                    // CSharp4.g:1089:5: extern_alias_directives
                    {
                    pushFollow(FOLLOW_extern_alias_directives_in_compilation_unit4729);
                    extern_alias_directives700=extern_alias_directives();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, extern_alias_directives700.getTree());

                    }
                    break;

            }


            // CSharp4.g:1089:30: ( using_directives )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==USING) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // CSharp4.g:1089:30: using_directives
                    {
                    pushFollow(FOLLOW_using_directives_in_compilation_unit4732);
                    using_directives701=using_directives();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, using_directives701.getTree());

                    }
                    break;

            }


            // CSharp4.g:1090:5: ( ( global_attribute_section )=> global_attribute_section )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==OPEN_BRACKET) ) {
                    int LA130_2 = input.LA(2);

                    if ( (synpred19_CSharp4()) ) {
                        alt130=1;
                    }


                }


                switch (alt130) {
            	case 1 :
            	    // CSharp4.g:1090:7: ( global_attribute_section )=> global_attribute_section
            	    {
            	    pushFollow(FOLLOW_global_attribute_section_in_compilation_unit4747);
            	    global_attribute_section702=global_attribute_section();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute_section702.getTree());

            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);


            // CSharp4.g:1091:5: ( namespace_member_declarations )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==ABSTRACT||LA131_0==CLASS||LA131_0==DELEGATE||LA131_0==ENUM||LA131_0==EXTERN||LA131_0==IDENTIFIER||(LA131_0 >= INTERFACE && LA131_0 <= INTERNAL)||(LA131_0 >= NAMESPACE && LA131_0 <= NEW)||LA131_0==OPEN_BRACKET||LA131_0==OVERRIDE||(LA131_0 >= PRIVATE && LA131_0 <= PUBLIC)||LA131_0==READONLY||LA131_0==SEALED||LA131_0==STATIC||LA131_0==STRUCT||LA131_0==UNSAFE||LA131_0==VIRTUAL||LA131_0==VOLATILE) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // CSharp4.g:1091:5: namespace_member_declarations
                    {
                    pushFollow(FOLLOW_namespace_member_declarations_in_compilation_unit4756);
                    namespace_member_declarations703=namespace_member_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_member_declarations703.getTree());

                    }
                    break;

            }


            EOF704=(Token)match(input,EOF,FOLLOW_EOF_in_compilation_unit4759); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            EOF704_tree = 
            (Object)adaptor.create(EOF704)
            ;
            adaptor.addChild(root_0, EOF704_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "compilation_unit"


    public static class namespace_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "namespace_declaration"
    // CSharp4.g:1093:1: namespace_declaration : NAMESPACE qi= qualified_identifier namespace_body ( SEMICOLON )? ;
    public final CSharp4.namespace_declaration_return namespace_declaration() throws RecognitionException {
        CSharp4.namespace_declaration_return retval = new CSharp4.namespace_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NAMESPACE705=null;
        Token SEMICOLON707=null;
        CSharp4.qualified_identifier_return qi =null;

        CSharp4.namespace_body_return namespace_body706 =null;


        Object NAMESPACE705_tree=null;
        Object SEMICOLON707_tree=null;

        try {
            // CSharp4.g:1094:2: ( NAMESPACE qi= qualified_identifier namespace_body ( SEMICOLON )? )
            // CSharp4.g:1094:4: NAMESPACE qi= qualified_identifier namespace_body ( SEMICOLON )?
            {
            root_0 = (Object)adaptor.nil();


            NAMESPACE705=(Token)match(input,NAMESPACE,FOLLOW_NAMESPACE_in_namespace_declaration4771); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            NAMESPACE705_tree = 
            (Object)adaptor.create(NAMESPACE705)
            ;
            adaptor.addChild(root_0, NAMESPACE705_tree);
            }

            pushFollow(FOLLOW_qualified_identifier_in_namespace_declaration4775);
            qi=qualified_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, qi.getTree());

            pushFollow(FOLLOW_namespace_body_in_namespace_declaration4777);
            namespace_body706=namespace_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_body706.getTree());

            // CSharp4.g:1094:53: ( SEMICOLON )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==SEMICOLON) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // CSharp4.g:1094:53: SEMICOLON
                    {
                    SEMICOLON707=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_namespace_declaration4779); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON707_tree = 
                    (Object)adaptor.create(SEMICOLON707)
                    ;
                    adaptor.addChild(root_0, SEMICOLON707_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "namespace_declaration"


    public static class qualified_identifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "qualified_identifier"
    // CSharp4.g:1096:1: qualified_identifier : IDENTIFIER ( DOT IDENTIFIER )* ;
    public final CSharp4.qualified_identifier_return qualified_identifier() throws RecognitionException {
        CSharp4.qualified_identifier_return retval = new CSharp4.qualified_identifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER708=null;
        Token DOT709=null;
        Token IDENTIFIER710=null;

        Object IDENTIFIER708_tree=null;
        Object DOT709_tree=null;
        Object IDENTIFIER710_tree=null;

        try {
            // CSharp4.g:1097:2: ( IDENTIFIER ( DOT IDENTIFIER )* )
            // CSharp4.g:1097:4: IDENTIFIER ( DOT IDENTIFIER )*
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER708=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_qualified_identifier4791); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER708_tree = 
            (Object)adaptor.create(IDENTIFIER708)
            ;
            adaptor.addChild(root_0, IDENTIFIER708_tree);
            }

            // CSharp4.g:1097:15: ( DOT IDENTIFIER )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==DOT) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // CSharp4.g:1097:17: DOT IDENTIFIER
            	    {
            	    DOT709=(Token)match(input,DOT,FOLLOW_DOT_in_qualified_identifier4795); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    DOT709_tree = 
            	    (Object)adaptor.create(DOT709)
            	    ;
            	    adaptor.addChild(root_0, DOT709_tree);
            	    }

            	    IDENTIFIER710=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_qualified_identifier4798); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    IDENTIFIER710_tree = 
            	    (Object)adaptor.create(IDENTIFIER710)
            	    ;
            	    adaptor.addChild(root_0, IDENTIFIER710_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "qualified_identifier"


    public static class namespace_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "namespace_body"
    // CSharp4.g:1099:1: namespace_body : OPEN_BRACE ( extern_alias_directives )? ( using_directives )? ( namespace_member_declarations )? CLOSE_BRACE ;
    public final CSharp4.namespace_body_return namespace_body() throws RecognitionException {
        CSharp4.namespace_body_return retval = new CSharp4.namespace_body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE711=null;
        Token CLOSE_BRACE715=null;
        CSharp4.extern_alias_directives_return extern_alias_directives712 =null;

        CSharp4.using_directives_return using_directives713 =null;

        CSharp4.namespace_member_declarations_return namespace_member_declarations714 =null;


        Object OPEN_BRACE711_tree=null;
        Object CLOSE_BRACE715_tree=null;

        try {
            // CSharp4.g:1100:2: ( OPEN_BRACE ( extern_alias_directives )? ( using_directives )? ( namespace_member_declarations )? CLOSE_BRACE )
            // CSharp4.g:1100:4: OPEN_BRACE ( extern_alias_directives )? ( using_directives )? ( namespace_member_declarations )? CLOSE_BRACE
            {
            root_0 = (Object)adaptor.nil();


            OPEN_BRACE711=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_namespace_body4812); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACE711_tree = 
            (Object)adaptor.create(OPEN_BRACE711)
            ;
            adaptor.addChild(root_0, OPEN_BRACE711_tree);
            }

            // CSharp4.g:1100:15: ( extern_alias_directives )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==EXTERN) ) {
                int LA134_1 = input.LA(2);

                if ( (LA134_1==IDENTIFIER) ) {
                    int LA134_3 = input.LA(3);

                    if ( (LA134_3==IDENTIFIER) ) {
                        int LA134_4 = input.LA(4);

                        if ( (LA134_4==SEMICOLON) ) {
                            alt134=1;
                        }
                    }
                }
            }
            switch (alt134) {
                case 1 :
                    // CSharp4.g:1100:15: extern_alias_directives
                    {
                    pushFollow(FOLLOW_extern_alias_directives_in_namespace_body4814);
                    extern_alias_directives712=extern_alias_directives();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, extern_alias_directives712.getTree());

                    }
                    break;

            }


            // CSharp4.g:1100:40: ( using_directives )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==USING) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // CSharp4.g:1100:40: using_directives
                    {
                    pushFollow(FOLLOW_using_directives_in_namespace_body4817);
                    using_directives713=using_directives();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, using_directives713.getTree());

                    }
                    break;

            }


            // CSharp4.g:1100:58: ( namespace_member_declarations )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==ABSTRACT||LA136_0==CLASS||LA136_0==DELEGATE||LA136_0==ENUM||LA136_0==EXTERN||LA136_0==IDENTIFIER||(LA136_0 >= INTERFACE && LA136_0 <= INTERNAL)||(LA136_0 >= NAMESPACE && LA136_0 <= NEW)||LA136_0==OPEN_BRACKET||LA136_0==OVERRIDE||(LA136_0 >= PRIVATE && LA136_0 <= PUBLIC)||LA136_0==READONLY||LA136_0==SEALED||LA136_0==STATIC||LA136_0==STRUCT||LA136_0==UNSAFE||LA136_0==VIRTUAL||LA136_0==VOLATILE) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // CSharp4.g:1100:58: namespace_member_declarations
                    {
                    pushFollow(FOLLOW_namespace_member_declarations_in_namespace_body4820);
                    namespace_member_declarations714=namespace_member_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_member_declarations714.getTree());

                    }
                    break;

            }


            CLOSE_BRACE715=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_namespace_body4823); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACE715_tree = 
            (Object)adaptor.create(CLOSE_BRACE715)
            ;
            adaptor.addChild(root_0, CLOSE_BRACE715_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "namespace_body"


    public static class extern_alias_directives_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "extern_alias_directives"
    // CSharp4.g:1102:1: extern_alias_directives : ( extern_alias_directive )+ ;
    public final CSharp4.extern_alias_directives_return extern_alias_directives() throws RecognitionException {
        CSharp4.extern_alias_directives_return retval = new CSharp4.extern_alias_directives_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.extern_alias_directive_return extern_alias_directive716 =null;



        try {
            // CSharp4.g:1103:2: ( ( extern_alias_directive )+ )
            // CSharp4.g:1103:4: ( extern_alias_directive )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1103:4: ( extern_alias_directive )+
            int cnt137=0;
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==EXTERN) ) {
                    int LA137_2 = input.LA(2);

                    if ( (LA137_2==IDENTIFIER) ) {
                        int LA137_3 = input.LA(3);

                        if ( (LA137_3==IDENTIFIER) ) {
                            int LA137_4 = input.LA(4);

                            if ( (LA137_4==SEMICOLON) ) {
                                alt137=1;
                            }


                        }


                    }


                }


                switch (alt137) {
            	case 1 :
            	    // CSharp4.g:1103:4: extern_alias_directive
            	    {
            	    pushFollow(FOLLOW_extern_alias_directive_in_extern_alias_directives4834);
            	    extern_alias_directive716=extern_alias_directive();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, extern_alias_directive716.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt137 >= 1 ) break loop137;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(137, input);
                        throw eee;
                }
                cnt137++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "extern_alias_directives"


    public static class extern_alias_directive_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "extern_alias_directive"
    // CSharp4.g:1105:1: extern_alias_directive : EXTERN alias_contextual_keyword IDENTIFIER SEMICOLON ;
    public final CSharp4.extern_alias_directive_return extern_alias_directive() throws RecognitionException {
        CSharp4.extern_alias_directive_return retval = new CSharp4.extern_alias_directive_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token EXTERN717=null;
        Token IDENTIFIER719=null;
        Token SEMICOLON720=null;
        CSharp4.alias_contextual_keyword_return alias_contextual_keyword718 =null;


        Object EXTERN717_tree=null;
        Object IDENTIFIER719_tree=null;
        Object SEMICOLON720_tree=null;

        try {
            // CSharp4.g:1106:2: ( EXTERN alias_contextual_keyword IDENTIFIER SEMICOLON )
            // CSharp4.g:1106:4: EXTERN alias_contextual_keyword IDENTIFIER SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            EXTERN717=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_extern_alias_directive4846); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            EXTERN717_tree = 
            (Object)adaptor.create(EXTERN717)
            ;
            adaptor.addChild(root_0, EXTERN717_tree);
            }

            pushFollow(FOLLOW_alias_contextual_keyword_in_extern_alias_directive4848);
            alias_contextual_keyword718=alias_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, alias_contextual_keyword718.getTree());

            IDENTIFIER719=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_extern_alias_directive4850); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER719_tree = 
            (Object)adaptor.create(IDENTIFIER719)
            ;
            adaptor.addChild(root_0, IDENTIFIER719_tree);
            }

            SEMICOLON720=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_extern_alias_directive4852); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON720_tree = 
            (Object)adaptor.create(SEMICOLON720)
            ;
            adaptor.addChild(root_0, SEMICOLON720_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "extern_alias_directive"


    public static class using_directives_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "using_directives"
    // CSharp4.g:1108:1: using_directives : ( using_directive )+ ;
    public final CSharp4.using_directives_return using_directives() throws RecognitionException {
        CSharp4.using_directives_return retval = new CSharp4.using_directives_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.using_directive_return using_directive721 =null;



        try {
            // CSharp4.g:1109:2: ( ( using_directive )+ )
            // CSharp4.g:1109:4: ( using_directive )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1109:4: ( using_directive )+
            int cnt138=0;
            loop138:
            do {
                int alt138=2;
                int LA138_0 = input.LA(1);

                if ( (LA138_0==USING) ) {
                    alt138=1;
                }


                switch (alt138) {
            	case 1 :
            	    // CSharp4.g:1109:4: using_directive
            	    {
            	    pushFollow(FOLLOW_using_directive_in_using_directives4863);
            	    using_directive721=using_directive();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, using_directive721.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt138 >= 1 ) break loop138;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(138, input);
                        throw eee;
                }
                cnt138++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "using_directives"


    public static class using_directive_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "using_directive"
    // CSharp4.g:1111:1: using_directive : ( using_alias_directive | using_namespace_directive );
    public final CSharp4.using_directive_return using_directive() throws RecognitionException {
        CSharp4.using_directive_return retval = new CSharp4.using_directive_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.using_alias_directive_return using_alias_directive722 =null;

        CSharp4.using_namespace_directive_return using_namespace_directive723 =null;



        try {
            // CSharp4.g:1112:2: ( using_alias_directive | using_namespace_directive )
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==USING) ) {
                int LA139_1 = input.LA(2);

                if ( (LA139_1==IDENTIFIER) ) {
                    int LA139_2 = input.LA(3);

                    if ( (LA139_2==ASSIGNMENT) ) {
                        alt139=1;
                    }
                    else if ( (LA139_2==DOT||LA139_2==DOUBLE_COLON||LA139_2==LT||LA139_2==SEMICOLON) ) {
                        alt139=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 139, 2, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 139, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;

            }
            switch (alt139) {
                case 1 :
                    // CSharp4.g:1112:4: using_alias_directive
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_using_alias_directive_in_using_directive4875);
                    using_alias_directive722=using_alias_directive();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, using_alias_directive722.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1113:4: using_namespace_directive
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_using_namespace_directive_in_using_directive4880);
                    using_namespace_directive723=using_namespace_directive();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, using_namespace_directive723.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "using_directive"


    public static class using_alias_directive_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "using_alias_directive"
    // CSharp4.g:1115:1: using_alias_directive : USING IDENTIFIER ASSIGNMENT namespace_or_type_name SEMICOLON ;
    public final CSharp4.using_alias_directive_return using_alias_directive() throws RecognitionException {
        CSharp4.using_alias_directive_return retval = new CSharp4.using_alias_directive_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token USING724=null;
        Token IDENTIFIER725=null;
        Token ASSIGNMENT726=null;
        Token SEMICOLON728=null;
        CSharp4.namespace_or_type_name_return namespace_or_type_name727 =null;


        Object USING724_tree=null;
        Object IDENTIFIER725_tree=null;
        Object ASSIGNMENT726_tree=null;
        Object SEMICOLON728_tree=null;

        try {
            // CSharp4.g:1116:2: ( USING IDENTIFIER ASSIGNMENT namespace_or_type_name SEMICOLON )
            // CSharp4.g:1116:4: USING IDENTIFIER ASSIGNMENT namespace_or_type_name SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            USING724=(Token)match(input,USING,FOLLOW_USING_in_using_alias_directive4891); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            USING724_tree = 
            (Object)adaptor.create(USING724)
            ;
            adaptor.addChild(root_0, USING724_tree);
            }

            IDENTIFIER725=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_using_alias_directive4893); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER725_tree = 
            (Object)adaptor.create(IDENTIFIER725)
            ;
            adaptor.addChild(root_0, IDENTIFIER725_tree);
            }

            ASSIGNMENT726=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_using_alias_directive4895); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGNMENT726_tree = 
            (Object)adaptor.create(ASSIGNMENT726)
            ;
            adaptor.addChild(root_0, ASSIGNMENT726_tree);
            }

            pushFollow(FOLLOW_namespace_or_type_name_in_using_alias_directive4897);
            namespace_or_type_name727=namespace_or_type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_or_type_name727.getTree());

            SEMICOLON728=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_using_alias_directive4899); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON728_tree = 
            (Object)adaptor.create(SEMICOLON728)
            ;
            adaptor.addChild(root_0, SEMICOLON728_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "using_alias_directive"


    public static class using_namespace_directive_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "using_namespace_directive"
    // CSharp4.g:1118:1: using_namespace_directive : USING namespace_name SEMICOLON ;
    public final CSharp4.using_namespace_directive_return using_namespace_directive() throws RecognitionException {
        CSharp4.using_namespace_directive_return retval = new CSharp4.using_namespace_directive_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token USING729=null;
        Token SEMICOLON731=null;
        CSharp4.namespace_name_return namespace_name730 =null;


        Object USING729_tree=null;
        Object SEMICOLON731_tree=null;

        try {
            // CSharp4.g:1119:2: ( USING namespace_name SEMICOLON )
            // CSharp4.g:1119:4: USING namespace_name SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            USING729=(Token)match(input,USING,FOLLOW_USING_in_using_namespace_directive4910); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            USING729_tree = 
            (Object)adaptor.create(USING729)
            ;
            adaptor.addChild(root_0, USING729_tree);
            }

            pushFollow(FOLLOW_namespace_name_in_using_namespace_directive4912);
            namespace_name730=namespace_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_name730.getTree());

            SEMICOLON731=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_using_namespace_directive4914); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON731_tree = 
            (Object)adaptor.create(SEMICOLON731)
            ;
            adaptor.addChild(root_0, SEMICOLON731_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "using_namespace_directive"


    public static class namespace_member_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "namespace_member_declarations"
    // CSharp4.g:1121:1: namespace_member_declarations : ( namespace_member_declaration )+ ;
    public final CSharp4.namespace_member_declarations_return namespace_member_declarations() throws RecognitionException {
        CSharp4.namespace_member_declarations_return retval = new CSharp4.namespace_member_declarations_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.namespace_member_declaration_return namespace_member_declaration732 =null;



        try {
            // CSharp4.g:1122:2: ( ( namespace_member_declaration )+ )
            // CSharp4.g:1122:4: ( namespace_member_declaration )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1122:4: ( namespace_member_declaration )+
            int cnt140=0;
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==ABSTRACT||LA140_0==CLASS||LA140_0==DELEGATE||LA140_0==ENUM||LA140_0==EXTERN||LA140_0==IDENTIFIER||(LA140_0 >= INTERFACE && LA140_0 <= INTERNAL)||(LA140_0 >= NAMESPACE && LA140_0 <= NEW)||LA140_0==OPEN_BRACKET||LA140_0==OVERRIDE||(LA140_0 >= PRIVATE && LA140_0 <= PUBLIC)||LA140_0==READONLY||LA140_0==SEALED||LA140_0==STATIC||LA140_0==STRUCT||LA140_0==UNSAFE||LA140_0==VIRTUAL||LA140_0==VOLATILE) ) {
                    alt140=1;
                }


                switch (alt140) {
            	case 1 :
            	    // CSharp4.g:1122:4: namespace_member_declaration
            	    {
            	    pushFollow(FOLLOW_namespace_member_declaration_in_namespace_member_declarations4925);
            	    namespace_member_declaration732=namespace_member_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_member_declaration732.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt140 >= 1 ) break loop140;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(140, input);
                        throw eee;
                }
                cnt140++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "namespace_member_declarations"


    public static class namespace_member_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "namespace_member_declaration"
    // CSharp4.g:1124:1: namespace_member_declaration : ( namespace_declaration | type_declaration );
    public final CSharp4.namespace_member_declaration_return namespace_member_declaration() throws RecognitionException {
        CSharp4.namespace_member_declaration_return retval = new CSharp4.namespace_member_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.namespace_declaration_return namespace_declaration733 =null;

        CSharp4.type_declaration_return type_declaration734 =null;



        try {
            // CSharp4.g:1125:2: ( namespace_declaration | type_declaration )
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==NAMESPACE) ) {
                alt141=1;
            }
            else if ( (LA141_0==ABSTRACT||LA141_0==CLASS||LA141_0==DELEGATE||LA141_0==ENUM||LA141_0==EXTERN||LA141_0==IDENTIFIER||(LA141_0 >= INTERFACE && LA141_0 <= INTERNAL)||LA141_0==NEW||LA141_0==OPEN_BRACKET||LA141_0==OVERRIDE||(LA141_0 >= PRIVATE && LA141_0 <= PUBLIC)||LA141_0==READONLY||LA141_0==SEALED||LA141_0==STATIC||LA141_0==STRUCT||LA141_0==UNSAFE||LA141_0==VIRTUAL||LA141_0==VOLATILE) ) {
                alt141=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;

            }
            switch (alt141) {
                case 1 :
                    // CSharp4.g:1125:4: namespace_declaration
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_namespace_declaration_in_namespace_member_declaration4937);
                    namespace_declaration733=namespace_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_declaration733.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1126:4: type_declaration
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_type_declaration_in_namespace_member_declaration4942);
                    type_declaration734=type_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_declaration734.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "namespace_member_declaration"


    public static class type_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_declaration"
    // CSharp4.g:1137:1: type_declaration : ( attributes )? ( all_member_modifiers )? ( class_definition | struct_definition | interface_definition | enum_definition | delegate_definition ) ;
    public final CSharp4.type_declaration_return type_declaration() throws RecognitionException {
        CSharp4.type_declaration_return retval = new CSharp4.type_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.attributes_return attributes735 =null;

        CSharp4.all_member_modifiers_return all_member_modifiers736 =null;

        CSharp4.class_definition_return class_definition737 =null;

        CSharp4.struct_definition_return struct_definition738 =null;

        CSharp4.interface_definition_return interface_definition739 =null;

        CSharp4.enum_definition_return enum_definition740 =null;

        CSharp4.delegate_definition_return delegate_definition741 =null;



        try {
            // CSharp4.g:1138:3: ( ( attributes )? ( all_member_modifiers )? ( class_definition | struct_definition | interface_definition | enum_definition | delegate_definition ) )
            // CSharp4.g:1138:5: ( attributes )? ( all_member_modifiers )? ( class_definition | struct_definition | interface_definition | enum_definition | delegate_definition )
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1138:5: ( attributes )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==OPEN_BRACKET) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // CSharp4.g:1138:5: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_type_declaration4956);
                    attributes735=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes735.getTree());

                    }
                    break;

            }


            // CSharp4.g:1138:17: ( all_member_modifiers )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==ABSTRACT||LA143_0==EXTERN||LA143_0==IDENTIFIER||LA143_0==INTERNAL||LA143_0==NEW||LA143_0==OVERRIDE||(LA143_0 >= PRIVATE && LA143_0 <= PUBLIC)||LA143_0==READONLY||LA143_0==SEALED||LA143_0==STATIC||LA143_0==UNSAFE||LA143_0==VIRTUAL||LA143_0==VOLATILE) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // CSharp4.g:1138:17: all_member_modifiers
                    {
                    pushFollow(FOLLOW_all_member_modifiers_in_type_declaration4959);
                    all_member_modifiers736=all_member_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, all_member_modifiers736.getTree());

                    }
                    break;

            }


            // CSharp4.g:1139:5: ( class_definition | struct_definition | interface_definition | enum_definition | delegate_definition )
            int alt144=5;
            switch ( input.LA(1) ) {
            case CLASS:
                {
                alt144=1;
                }
                break;
            case STRUCT:
                {
                alt144=2;
                }
                break;
            case INTERFACE:
                {
                alt144=3;
                }
                break;
            case ENUM:
                {
                alt144=4;
                }
                break;
            case DELEGATE:
                {
                alt144=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;

            }

            switch (alt144) {
                case 1 :
                    // CSharp4.g:1139:7: class_definition
                    {
                    pushFollow(FOLLOW_class_definition_in_type_declaration4968);
                    class_definition737=class_definition();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_definition737.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1140:7: struct_definition
                    {
                    pushFollow(FOLLOW_struct_definition_in_type_declaration4976);
                    struct_definition738=struct_definition();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_definition738.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:1141:7: interface_definition
                    {
                    pushFollow(FOLLOW_interface_definition_in_type_declaration4984);
                    interface_definition739=interface_definition();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_definition739.getTree());

                    }
                    break;
                case 4 :
                    // CSharp4.g:1142:7: enum_definition
                    {
                    pushFollow(FOLLOW_enum_definition_in_type_declaration4992);
                    enum_definition740=enum_definition();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_definition740.getTree());

                    }
                    break;
                case 5 :
                    // CSharp4.g:1143:7: delegate_definition
                    {
                    pushFollow(FOLLOW_delegate_definition_in_type_declaration5000);
                    delegate_definition741=delegate_definition();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_definition741.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_declaration"


    public static class qualified_alias_member_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "qualified_alias_member"
    // CSharp4.g:1147:1: qualified_alias_member : IDENTIFIER DOUBLE_COLON IDENTIFIER type_argument_list_opt ;
    public final CSharp4.qualified_alias_member_return qualified_alias_member() throws RecognitionException {
        CSharp4.qualified_alias_member_return retval = new CSharp4.qualified_alias_member_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER742=null;
        Token DOUBLE_COLON743=null;
        Token IDENTIFIER744=null;
        CSharp4.type_argument_list_opt_return type_argument_list_opt745 =null;


        Object IDENTIFIER742_tree=null;
        Object DOUBLE_COLON743_tree=null;
        Object IDENTIFIER744_tree=null;

        try {
            // CSharp4.g:1148:2: ( IDENTIFIER DOUBLE_COLON IDENTIFIER type_argument_list_opt )
            // CSharp4.g:1148:4: IDENTIFIER DOUBLE_COLON IDENTIFIER type_argument_list_opt
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER742=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_qualified_alias_member5020); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER742_tree = 
            (Object)adaptor.create(IDENTIFIER742)
            ;
            adaptor.addChild(root_0, IDENTIFIER742_tree);
            }

            DOUBLE_COLON743=(Token)match(input,DOUBLE_COLON,FOLLOW_DOUBLE_COLON_in_qualified_alias_member5022); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            DOUBLE_COLON743_tree = 
            (Object)adaptor.create(DOUBLE_COLON743)
            ;
            adaptor.addChild(root_0, DOUBLE_COLON743_tree);
            }

            IDENTIFIER744=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_qualified_alias_member5024); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER744_tree = 
            (Object)adaptor.create(IDENTIFIER744)
            ;
            adaptor.addChild(root_0, IDENTIFIER744_tree);
            }

            pushFollow(FOLLOW_type_argument_list_opt_in_qualified_alias_member5026);
            type_argument_list_opt745=type_argument_list_opt();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_argument_list_opt745.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "qualified_alias_member"


    public static class class_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_declaration"
    // CSharp4.g:1153:1: class_declaration : ( attributes )? ( class_modifiers )? ( partial_contextual_keyword )? CLASS IDENTIFIER ( type_parameter_list )? ( class_base )? ( type_parameter_constraints_clauses )? class_body ( SEMICOLON )? ;
    public final CSharp4.class_declaration_return class_declaration() throws RecognitionException {
        CSharp4.class_declaration_return retval = new CSharp4.class_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token CLASS749=null;
        Token IDENTIFIER750=null;
        Token SEMICOLON755=null;
        CSharp4.attributes_return attributes746 =null;

        CSharp4.class_modifiers_return class_modifiers747 =null;

        CSharp4.partial_contextual_keyword_return partial_contextual_keyword748 =null;

        CSharp4.type_parameter_list_return type_parameter_list751 =null;

        CSharp4.class_base_return class_base752 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses753 =null;

        CSharp4.class_body_return class_body754 =null;


        Object CLASS749_tree=null;
        Object IDENTIFIER750_tree=null;
        Object SEMICOLON755_tree=null;

        try {
            // CSharp4.g:1154:2: ( ( attributes )? ( class_modifiers )? ( partial_contextual_keyword )? CLASS IDENTIFIER ( type_parameter_list )? ( class_base )? ( type_parameter_constraints_clauses )? class_body ( SEMICOLON )? )
            // CSharp4.g:1154:4: ( attributes )? ( class_modifiers )? ( partial_contextual_keyword )? CLASS IDENTIFIER ( type_parameter_list )? ( class_base )? ( type_parameter_constraints_clauses )? class_body ( SEMICOLON )?
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1154:4: ( attributes )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==OPEN_BRACKET) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // CSharp4.g:1154:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_class_declaration5040);
                    attributes746=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes746.getTree());

                    }
                    break;

            }


            // CSharp4.g:1154:16: ( class_modifiers )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==ABSTRACT||LA146_0==INTERNAL||LA146_0==NEW||(LA146_0 >= PRIVATE && LA146_0 <= PUBLIC)||LA146_0==SEALED||LA146_0==STATIC||LA146_0==UNSAFE) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // CSharp4.g:1154:16: class_modifiers
                    {
                    pushFollow(FOLLOW_class_modifiers_in_class_declaration5043);
                    class_modifiers747=class_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_modifiers747.getTree());

                    }
                    break;

            }


            // CSharp4.g:1154:33: ( partial_contextual_keyword )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==IDENTIFIER) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // CSharp4.g:1154:33: partial_contextual_keyword
                    {
                    pushFollow(FOLLOW_partial_contextual_keyword_in_class_declaration5046);
                    partial_contextual_keyword748=partial_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, partial_contextual_keyword748.getTree());

                    }
                    break;

            }


            CLASS749=(Token)match(input,CLASS,FOLLOW_CLASS_in_class_declaration5049); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLASS749_tree = 
            (Object)adaptor.create(CLASS749)
            ;
            adaptor.addChild(root_0, CLASS749_tree);
            }

            IDENTIFIER750=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_class_declaration5051); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER750_tree = 
            (Object)adaptor.create(IDENTIFIER750)
            ;
            adaptor.addChild(root_0, IDENTIFIER750_tree);
            }

            // CSharp4.g:1154:78: ( type_parameter_list )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==LT) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // CSharp4.g:1154:78: type_parameter_list
                    {
                    pushFollow(FOLLOW_type_parameter_list_in_class_declaration5053);
                    type_parameter_list751=type_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_list751.getTree());

                    }
                    break;

            }


            // CSharp4.g:1155:6: ( class_base )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==COLON) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // CSharp4.g:1155:6: class_base
                    {
                    pushFollow(FOLLOW_class_base_in_class_declaration5061);
                    class_base752=class_base();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_base752.getTree());

                    }
                    break;

            }


            // CSharp4.g:1155:18: ( type_parameter_constraints_clauses )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==IDENTIFIER) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // CSharp4.g:1155:18: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_class_declaration5064);
                    type_parameter_constraints_clauses753=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses753.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_class_body_in_class_declaration5067);
            class_body754=class_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, class_body754.getTree());

            // CSharp4.g:1155:65: ( SEMICOLON )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==SEMICOLON) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // CSharp4.g:1155:65: SEMICOLON
                    {
                    SEMICOLON755=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_class_declaration5069); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON755_tree = 
                    (Object)adaptor.create(SEMICOLON755)
                    ;
                    adaptor.addChild(root_0, SEMICOLON755_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_declaration"


    public static class class_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_modifiers"
    // CSharp4.g:1157:1: class_modifiers : class_modifier ( class_modifier )* ;
    public final CSharp4.class_modifiers_return class_modifiers() throws RecognitionException {
        CSharp4.class_modifiers_return retval = new CSharp4.class_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.class_modifier_return class_modifier756 =null;

        CSharp4.class_modifier_return class_modifier757 =null;



        try {
            // CSharp4.g:1158:2: ( class_modifier ( class_modifier )* )
            // CSharp4.g:1158:4: class_modifier ( class_modifier )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_class_modifier_in_class_modifiers5081);
            class_modifier756=class_modifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, class_modifier756.getTree());

            // CSharp4.g:1158:19: ( class_modifier )*
            loop152:
            do {
                int alt152=2;
                int LA152_0 = input.LA(1);

                if ( (LA152_0==ABSTRACT||LA152_0==INTERNAL||LA152_0==NEW||(LA152_0 >= PRIVATE && LA152_0 <= PUBLIC)||LA152_0==SEALED||LA152_0==STATIC||LA152_0==UNSAFE) ) {
                    alt152=1;
                }


                switch (alt152) {
            	case 1 :
            	    // CSharp4.g:1158:21: class_modifier
            	    {
            	    pushFollow(FOLLOW_class_modifier_in_class_modifiers5085);
            	    class_modifier757=class_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_modifier757.getTree());

            	    }
            	    break;

            	default :
            	    break loop152;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_modifiers"


    public static class class_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_modifier"
    // CSharp4.g:1160:1: class_modifier : ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | ABSTRACT | SEALED | STATIC | class_modifier_unsafe );
    public final CSharp4.class_modifier_return class_modifier() throws RecognitionException {
        CSharp4.class_modifier_return retval = new CSharp4.class_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW758=null;
        Token PUBLIC759=null;
        Token PROTECTED760=null;
        Token INTERNAL761=null;
        Token PRIVATE762=null;
        Token ABSTRACT763=null;
        Token SEALED764=null;
        Token STATIC765=null;
        CSharp4.class_modifier_unsafe_return class_modifier_unsafe766 =null;


        Object NEW758_tree=null;
        Object PUBLIC759_tree=null;
        Object PROTECTED760_tree=null;
        Object INTERNAL761_tree=null;
        Object PRIVATE762_tree=null;
        Object ABSTRACT763_tree=null;
        Object SEALED764_tree=null;
        Object STATIC765_tree=null;

        try {
            // CSharp4.g:1161:2: ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | ABSTRACT | SEALED | STATIC | class_modifier_unsafe )
            int alt153=9;
            switch ( input.LA(1) ) {
            case NEW:
                {
                alt153=1;
                }
                break;
            case PUBLIC:
                {
                alt153=2;
                }
                break;
            case PROTECTED:
                {
                alt153=3;
                }
                break;
            case INTERNAL:
                {
                alt153=4;
                }
                break;
            case PRIVATE:
                {
                alt153=5;
                }
                break;
            case ABSTRACT:
                {
                alt153=6;
                }
                break;
            case SEALED:
                {
                alt153=7;
                }
                break;
            case STATIC:
                {
                alt153=8;
                }
                break;
            case UNSAFE:
                {
                alt153=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;

            }

            switch (alt153) {
                case 1 :
                    // CSharp4.g:1161:4: NEW
                    {
                    root_0 = (Object)adaptor.nil();


                    NEW758=(Token)match(input,NEW,FOLLOW_NEW_in_class_modifier5099); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW758_tree = 
                    (Object)adaptor.create(NEW758)
                    ;
                    adaptor.addChild(root_0, NEW758_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1162:4: PUBLIC
                    {
                    root_0 = (Object)adaptor.nil();


                    PUBLIC759=(Token)match(input,PUBLIC,FOLLOW_PUBLIC_in_class_modifier5104); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PUBLIC759_tree = 
                    (Object)adaptor.create(PUBLIC759)
                    ;
                    adaptor.addChild(root_0, PUBLIC759_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1163:4: PROTECTED
                    {
                    root_0 = (Object)adaptor.nil();


                    PROTECTED760=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_class_modifier5109); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED760_tree = 
                    (Object)adaptor.create(PROTECTED760)
                    ;
                    adaptor.addChild(root_0, PROTECTED760_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1164:4: INTERNAL
                    {
                    root_0 = (Object)adaptor.nil();


                    INTERNAL761=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_class_modifier5114); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL761_tree = 
                    (Object)adaptor.create(INTERNAL761)
                    ;
                    adaptor.addChild(root_0, INTERNAL761_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1165:4: PRIVATE
                    {
                    root_0 = (Object)adaptor.nil();


                    PRIVATE762=(Token)match(input,PRIVATE,FOLLOW_PRIVATE_in_class_modifier5119); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PRIVATE762_tree = 
                    (Object)adaptor.create(PRIVATE762)
                    ;
                    adaptor.addChild(root_0, PRIVATE762_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:1166:4: ABSTRACT
                    {
                    root_0 = (Object)adaptor.nil();


                    ABSTRACT763=(Token)match(input,ABSTRACT,FOLLOW_ABSTRACT_in_class_modifier5124); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ABSTRACT763_tree = 
                    (Object)adaptor.create(ABSTRACT763)
                    ;
                    adaptor.addChild(root_0, ABSTRACT763_tree);
                    }

                    }
                    break;
                case 7 :
                    // CSharp4.g:1167:4: SEALED
                    {
                    root_0 = (Object)adaptor.nil();


                    SEALED764=(Token)match(input,SEALED,FOLLOW_SEALED_in_class_modifier5129); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEALED764_tree = 
                    (Object)adaptor.create(SEALED764)
                    ;
                    adaptor.addChild(root_0, SEALED764_tree);
                    }

                    }
                    break;
                case 8 :
                    // CSharp4.g:1168:4: STATIC
                    {
                    root_0 = (Object)adaptor.nil();


                    STATIC765=(Token)match(input,STATIC,FOLLOW_STATIC_in_class_modifier5134); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC765_tree = 
                    (Object)adaptor.create(STATIC765)
                    ;
                    adaptor.addChild(root_0, STATIC765_tree);
                    }

                    }
                    break;
                case 9 :
                    // CSharp4.g:1169:4: class_modifier_unsafe
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_class_modifier_unsafe_in_class_modifier5139);
                    class_modifier_unsafe766=class_modifier_unsafe();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_modifier_unsafe766.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_modifier"


    public static class type_parameter_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_parameter_list"
    // CSharp4.g:1171:1: type_parameter_list : LT type_parameters GT ;
    public final CSharp4.type_parameter_list_return type_parameter_list() throws RecognitionException {
        CSharp4.type_parameter_list_return retval = new CSharp4.type_parameter_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token LT767=null;
        Token GT769=null;
        CSharp4.type_parameters_return type_parameters768 =null;


        Object LT767_tree=null;
        Object GT769_tree=null;

        try {
            // CSharp4.g:1172:2: ( LT type_parameters GT )
            // CSharp4.g:1172:4: LT type_parameters GT
            {
            root_0 = (Object)adaptor.nil();


            LT767=(Token)match(input,LT,FOLLOW_LT_in_type_parameter_list5150); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LT767_tree = 
            (Object)adaptor.create(LT767)
            ;
            adaptor.addChild(root_0, LT767_tree);
            }

            pushFollow(FOLLOW_type_parameters_in_type_parameter_list5152);
            type_parameters768=type_parameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameters768.getTree());

            GT769=(Token)match(input,GT,FOLLOW_GT_in_type_parameter_list5154); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            GT769_tree = 
            (Object)adaptor.create(GT769)
            ;
            adaptor.addChild(root_0, GT769_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_parameter_list"


    public static class type_parameters_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_parameters"
    // CSharp4.g:1174:1: type_parameters : ( attributes )? type_parameter ( COMMA ( attributes )? type_parameter )* ;
    public final CSharp4.type_parameters_return type_parameters() throws RecognitionException {
        CSharp4.type_parameters_return retval = new CSharp4.type_parameters_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA772=null;
        CSharp4.attributes_return attributes770 =null;

        CSharp4.type_parameter_return type_parameter771 =null;

        CSharp4.attributes_return attributes773 =null;

        CSharp4.type_parameter_return type_parameter774 =null;


        Object COMMA772_tree=null;

        try {
            // CSharp4.g:1175:2: ( ( attributes )? type_parameter ( COMMA ( attributes )? type_parameter )* )
            // CSharp4.g:1175:4: ( attributes )? type_parameter ( COMMA ( attributes )? type_parameter )*
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1175:4: ( attributes )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==OPEN_BRACKET) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // CSharp4.g:1175:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_type_parameters5165);
                    attributes770=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes770.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_type_parameter_in_type_parameters5168);
            type_parameter771=type_parameter();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter771.getTree());

            // CSharp4.g:1175:31: ( COMMA ( attributes )? type_parameter )*
            loop156:
            do {
                int alt156=2;
                int LA156_0 = input.LA(1);

                if ( (LA156_0==COMMA) ) {
                    alt156=1;
                }


                switch (alt156) {
            	case 1 :
            	    // CSharp4.g:1175:33: COMMA ( attributes )? type_parameter
            	    {
            	    COMMA772=(Token)match(input,COMMA,FOLLOW_COMMA_in_type_parameters5172); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA772_tree = 
            	    (Object)adaptor.create(COMMA772)
            	    ;
            	    adaptor.addChild(root_0, COMMA772_tree);
            	    }

            	    // CSharp4.g:1175:40: ( attributes )?
            	    int alt155=2;
            	    int LA155_0 = input.LA(1);

            	    if ( (LA155_0==OPEN_BRACKET) ) {
            	        alt155=1;
            	    }
            	    switch (alt155) {
            	        case 1 :
            	            // CSharp4.g:1175:40: attributes
            	            {
            	            pushFollow(FOLLOW_attributes_in_type_parameters5175);
            	            attributes773=attributes();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes773.getTree());

            	            }
            	            break;

            	    }


            	    pushFollow(FOLLOW_type_parameter_in_type_parameters5179);
            	    type_parameter774=type_parameter();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter774.getTree());

            	    }
            	    break;

            	default :
            	    break loop156;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_parameters"


    public static class type_parameter_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_parameter"
    // CSharp4.g:1178:1: type_parameter : IDENTIFIER ;
    public final CSharp4.type_parameter_return type_parameter() throws RecognitionException {
        CSharp4.type_parameter_return retval = new CSharp4.type_parameter_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER775=null;

        Object IDENTIFIER775_tree=null;

        try {
            // CSharp4.g:1179:2: ( IDENTIFIER )
            // CSharp4.g:1179:4: IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER775=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_type_parameter5195); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER775_tree = 
            (Object)adaptor.create(IDENTIFIER775)
            ;
            adaptor.addChild(root_0, IDENTIFIER775_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_parameter"


    public static class class_base_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_base"
    // CSharp4.g:1189:1: class_base : COLON class_type ( COMMA interface_type )* ;
    public final CSharp4.class_base_return class_base() throws RecognitionException {
        CSharp4.class_base_return retval = new CSharp4.class_base_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COLON776=null;
        Token COMMA778=null;
        CSharp4.class_type_return class_type777 =null;

        CSharp4.interface_type_return interface_type779 =null;


        Object COLON776_tree=null;
        Object COMMA778_tree=null;

        try {
            // CSharp4.g:1190:3: ( COLON class_type ( COMMA interface_type )* )
            // CSharp4.g:1190:5: COLON class_type ( COMMA interface_type )*
            {
            root_0 = (Object)adaptor.nil();


            COLON776=(Token)match(input,COLON,FOLLOW_COLON_in_class_base5210); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COLON776_tree = 
            (Object)adaptor.create(COLON776)
            ;
            adaptor.addChild(root_0, COLON776_tree);
            }

            pushFollow(FOLLOW_class_type_in_class_base5212);
            class_type777=class_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, class_type777.getTree());

            // CSharp4.g:1190:22: ( COMMA interface_type )*
            loop157:
            do {
                int alt157=2;
                int LA157_0 = input.LA(1);

                if ( (LA157_0==COMMA) ) {
                    alt157=1;
                }


                switch (alt157) {
            	case 1 :
            	    // CSharp4.g:1190:24: COMMA interface_type
            	    {
            	    COMMA778=(Token)match(input,COMMA,FOLLOW_COMMA_in_class_base5216); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA778_tree = 
            	    (Object)adaptor.create(COMMA778)
            	    ;
            	    adaptor.addChild(root_0, COMMA778_tree);
            	    }

            	    pushFollow(FOLLOW_interface_type_in_class_base5219);
            	    interface_type779=interface_type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type779.getTree());

            	    }
            	    break;

            	default :
            	    break loop157;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_base"


    public static class interface_type_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_type_list"
    // CSharp4.g:1192:1: interface_type_list : interface_type ( COMMA interface_type )* ;
    public final CSharp4.interface_type_list_return interface_type_list() throws RecognitionException {
        CSharp4.interface_type_list_return retval = new CSharp4.interface_type_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA781=null;
        CSharp4.interface_type_return interface_type780 =null;

        CSharp4.interface_type_return interface_type782 =null;


        Object COMMA781_tree=null;

        try {
            // CSharp4.g:1193:2: ( interface_type ( COMMA interface_type )* )
            // CSharp4.g:1193:4: interface_type ( COMMA interface_type )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_interface_type_in_interface_type_list5234);
            interface_type780=interface_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type780.getTree());

            // CSharp4.g:1193:19: ( COMMA interface_type )*
            loop158:
            do {
                int alt158=2;
                int LA158_0 = input.LA(1);

                if ( (LA158_0==COMMA) ) {
                    alt158=1;
                }


                switch (alt158) {
            	case 1 :
            	    // CSharp4.g:1193:21: COMMA interface_type
            	    {
            	    COMMA781=(Token)match(input,COMMA,FOLLOW_COMMA_in_interface_type_list5238); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA781_tree = 
            	    (Object)adaptor.create(COMMA781)
            	    ;
            	    adaptor.addChild(root_0, COMMA781_tree);
            	    }

            	    pushFollow(FOLLOW_interface_type_in_interface_type_list5241);
            	    interface_type782=interface_type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type782.getTree());

            	    }
            	    break;

            	default :
            	    break loop158;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_type_list"


    public static class type_parameter_constraints_clauses_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_parameter_constraints_clauses"
    // CSharp4.g:1195:1: type_parameter_constraints_clauses : type_parameter_constraints_clause ( type_parameter_constraints_clause )* ;
    public final CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses() throws RecognitionException {
        CSharp4.type_parameter_constraints_clauses_return retval = new CSharp4.type_parameter_constraints_clauses_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.type_parameter_constraints_clause_return type_parameter_constraints_clause783 =null;

        CSharp4.type_parameter_constraints_clause_return type_parameter_constraints_clause784 =null;



        try {
            // CSharp4.g:1196:2: ( type_parameter_constraints_clause ( type_parameter_constraints_clause )* )
            // CSharp4.g:1196:4: type_parameter_constraints_clause ( type_parameter_constraints_clause )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses5255);
            type_parameter_constraints_clause783=type_parameter_constraints_clause();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clause783.getTree());

            // CSharp4.g:1196:38: ( type_parameter_constraints_clause )*
            loop159:
            do {
                int alt159=2;
                int LA159_0 = input.LA(1);

                if ( (LA159_0==IDENTIFIER) ) {
                    alt159=1;
                }


                switch (alt159) {
            	case 1 :
            	    // CSharp4.g:1196:40: type_parameter_constraints_clause
            	    {
            	    pushFollow(FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses5259);
            	    type_parameter_constraints_clause784=type_parameter_constraints_clause();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clause784.getTree());

            	    }
            	    break;

            	default :
            	    break loop159;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_parameter_constraints_clauses"


    public static class type_parameter_constraints_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_parameter_constraints_clause"
    // CSharp4.g:1198:1: type_parameter_constraints_clause : where_contextual_keyword type_parameter COLON type_parameter_constraints ;
    public final CSharp4.type_parameter_constraints_clause_return type_parameter_constraints_clause() throws RecognitionException {
        CSharp4.type_parameter_constraints_clause_return retval = new CSharp4.type_parameter_constraints_clause_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COLON787=null;
        CSharp4.where_contextual_keyword_return where_contextual_keyword785 =null;

        CSharp4.type_parameter_return type_parameter786 =null;

        CSharp4.type_parameter_constraints_return type_parameter_constraints788 =null;


        Object COLON787_tree=null;

        try {
            // CSharp4.g:1199:2: ( where_contextual_keyword type_parameter COLON type_parameter_constraints )
            // CSharp4.g:1199:4: where_contextual_keyword type_parameter COLON type_parameter_constraints
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_where_contextual_keyword_in_type_parameter_constraints_clause5273);
            where_contextual_keyword785=where_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, where_contextual_keyword785.getTree());

            pushFollow(FOLLOW_type_parameter_in_type_parameter_constraints_clause5275);
            type_parameter786=type_parameter();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter786.getTree());

            COLON787=(Token)match(input,COLON,FOLLOW_COLON_in_type_parameter_constraints_clause5277); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COLON787_tree = 
            (Object)adaptor.create(COLON787)
            ;
            adaptor.addChild(root_0, COLON787_tree);
            }

            pushFollow(FOLLOW_type_parameter_constraints_in_type_parameter_constraints_clause5279);
            type_parameter_constraints788=type_parameter_constraints();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints788.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_parameter_constraints_clause"


    public static class type_parameter_constraints_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_parameter_constraints"
    // CSharp4.g:1212:1: type_parameter_constraints : ( constructor_constraint | primary_constraint ( COMMA secondary_constraints )? ( COMMA constructor_constraint )? );
    public final CSharp4.type_parameter_constraints_return type_parameter_constraints() throws RecognitionException {
        CSharp4.type_parameter_constraints_return retval = new CSharp4.type_parameter_constraints_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA791=null;
        Token COMMA793=null;
        CSharp4.constructor_constraint_return constructor_constraint789 =null;

        CSharp4.primary_constraint_return primary_constraint790 =null;

        CSharp4.secondary_constraints_return secondary_constraints792 =null;

        CSharp4.constructor_constraint_return constructor_constraint794 =null;


        Object COMMA791_tree=null;
        Object COMMA793_tree=null;

        try {
            // CSharp4.g:1213:3: ( constructor_constraint | primary_constraint ( COMMA secondary_constraints )? ( COMMA constructor_constraint )? )
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==NEW) ) {
                alt162=1;
            }
            else if ( (LA162_0==CLASS||LA162_0==IDENTIFIER||LA162_0==OBJECT||LA162_0==STRING||LA162_0==STRUCT) ) {
                alt162=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;

            }
            switch (alt162) {
                case 1 :
                    // CSharp4.g:1213:5: constructor_constraint
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraints5293);
                    constructor_constraint789=constructor_constraint();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_constraint789.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1214:5: primary_constraint ( COMMA secondary_constraints )? ( COMMA constructor_constraint )?
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_primary_constraint_in_type_parameter_constraints5299);
                    primary_constraint790=primary_constraint();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_constraint790.getTree());

                    // CSharp4.g:1214:24: ( COMMA secondary_constraints )?
                    int alt160=2;
                    int LA160_0 = input.LA(1);

                    if ( (LA160_0==COMMA) ) {
                        int LA160_1 = input.LA(2);

                        if ( (LA160_1==IDENTIFIER) ) {
                            alt160=1;
                        }
                    }
                    switch (alt160) {
                        case 1 :
                            // CSharp4.g:1214:25: COMMA secondary_constraints
                            {
                            COMMA791=(Token)match(input,COMMA,FOLLOW_COMMA_in_type_parameter_constraints5302); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA791_tree = 
                            (Object)adaptor.create(COMMA791)
                            ;
                            adaptor.addChild(root_0, COMMA791_tree);
                            }

                            pushFollow(FOLLOW_secondary_constraints_in_type_parameter_constraints5304);
                            secondary_constraints792=secondary_constraints();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, secondary_constraints792.getTree());

                            }
                            break;

                    }


                    // CSharp4.g:1214:55: ( COMMA constructor_constraint )?
                    int alt161=2;
                    int LA161_0 = input.LA(1);

                    if ( (LA161_0==COMMA) ) {
                        alt161=1;
                    }
                    switch (alt161) {
                        case 1 :
                            // CSharp4.g:1214:56: COMMA constructor_constraint
                            {
                            COMMA793=(Token)match(input,COMMA,FOLLOW_COMMA_in_type_parameter_constraints5309); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA793_tree = 
                            (Object)adaptor.create(COMMA793)
                            ;
                            adaptor.addChild(root_0, COMMA793_tree);
                            }

                            pushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraints5311);
                            constructor_constraint794=constructor_constraint();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_constraint794.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_parameter_constraints"


    public static class primary_constraint_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "primary_constraint"
    // CSharp4.g:1216:1: primary_constraint : ( class_type | CLASS | STRUCT );
    public final CSharp4.primary_constraint_return primary_constraint() throws RecognitionException {
        CSharp4.primary_constraint_return retval = new CSharp4.primary_constraint_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token CLASS796=null;
        Token STRUCT797=null;
        CSharp4.class_type_return class_type795 =null;


        Object CLASS796_tree=null;
        Object STRUCT797_tree=null;

        try {
            // CSharp4.g:1217:2: ( class_type | CLASS | STRUCT )
            int alt163=3;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
            case OBJECT:
            case STRING:
                {
                alt163=1;
                }
                break;
            case CLASS:
                {
                alt163=2;
                }
                break;
            case STRUCT:
                {
                alt163=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 163, 0, input);

                throw nvae;

            }

            switch (alt163) {
                case 1 :
                    // CSharp4.g:1217:4: class_type
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_class_type_in_primary_constraint5325);
                    class_type795=class_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_type795.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1218:4: CLASS
                    {
                    root_0 = (Object)adaptor.nil();


                    CLASS796=(Token)match(input,CLASS,FOLLOW_CLASS_in_primary_constraint5330); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLASS796_tree = 
                    (Object)adaptor.create(CLASS796)
                    ;
                    adaptor.addChild(root_0, CLASS796_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1219:4: STRUCT
                    {
                    root_0 = (Object)adaptor.nil();


                    STRUCT797=(Token)match(input,STRUCT,FOLLOW_STRUCT_in_primary_constraint5335); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STRUCT797_tree = 
                    (Object)adaptor.create(STRUCT797)
                    ;
                    adaptor.addChild(root_0, STRUCT797_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "primary_constraint"


    public static class secondary_constraints_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "secondary_constraints"
    // CSharp4.g:1230:1: secondary_constraints : interface_type ( COMMA interface_type )* ;
    public final CSharp4.secondary_constraints_return secondary_constraints() throws RecognitionException {
        CSharp4.secondary_constraints_return retval = new CSharp4.secondary_constraints_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA799=null;
        CSharp4.interface_type_return interface_type798 =null;

        CSharp4.interface_type_return interface_type800 =null;


        Object COMMA799_tree=null;

        try {
            // CSharp4.g:1231:3: ( interface_type ( COMMA interface_type )* )
            // CSharp4.g:1231:5: interface_type ( COMMA interface_type )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_interface_type_in_secondary_constraints5349);
            interface_type798=interface_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type798.getTree());

            // CSharp4.g:1231:20: ( COMMA interface_type )*
            loop164:
            do {
                int alt164=2;
                int LA164_0 = input.LA(1);

                if ( (LA164_0==COMMA) ) {
                    int LA164_1 = input.LA(2);

                    if ( (LA164_1==IDENTIFIER) ) {
                        alt164=1;
                    }


                }


                switch (alt164) {
            	case 1 :
            	    // CSharp4.g:1231:21: COMMA interface_type
            	    {
            	    COMMA799=(Token)match(input,COMMA,FOLLOW_COMMA_in_secondary_constraints5352); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA799_tree = 
            	    (Object)adaptor.create(COMMA799)
            	    ;
            	    adaptor.addChild(root_0, COMMA799_tree);
            	    }

            	    pushFollow(FOLLOW_interface_type_in_secondary_constraints5354);
            	    interface_type800=interface_type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type800.getTree());

            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "secondary_constraints"


    public static class constructor_constraint_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constructor_constraint"
    // CSharp4.g:1233:1: constructor_constraint : NEW OPEN_PARENS CLOSE_PARENS ;
    public final CSharp4.constructor_constraint_return constructor_constraint() throws RecognitionException {
        CSharp4.constructor_constraint_return retval = new CSharp4.constructor_constraint_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW801=null;
        Token OPEN_PARENS802=null;
        Token CLOSE_PARENS803=null;

        Object NEW801_tree=null;
        Object OPEN_PARENS802_tree=null;
        Object CLOSE_PARENS803_tree=null;

        try {
            // CSharp4.g:1234:2: ( NEW OPEN_PARENS CLOSE_PARENS )
            // CSharp4.g:1234:4: NEW OPEN_PARENS CLOSE_PARENS
            {
            root_0 = (Object)adaptor.nil();


            NEW801=(Token)match(input,NEW,FOLLOW_NEW_in_constructor_constraint5368); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            NEW801_tree = 
            (Object)adaptor.create(NEW801)
            ;
            adaptor.addChild(root_0, NEW801_tree);
            }

            OPEN_PARENS802=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_constructor_constraint5370); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS802_tree = 
            (Object)adaptor.create(OPEN_PARENS802)
            ;
            adaptor.addChild(root_0, OPEN_PARENS802_tree);
            }

            CLOSE_PARENS803=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_constructor_constraint5372); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS803_tree = 
            (Object)adaptor.create(CLOSE_PARENS803)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS803_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constructor_constraint"


    public static class class_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_body"
    // CSharp4.g:1236:1: class_body : OPEN_BRACE ( class_member_declarations )? CLOSE_BRACE ;
    public final CSharp4.class_body_return class_body() throws RecognitionException {
        CSharp4.class_body_return retval = new CSharp4.class_body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE804=null;
        Token CLOSE_BRACE806=null;
        CSharp4.class_member_declarations_return class_member_declarations805 =null;


        Object OPEN_BRACE804_tree=null;
        Object CLOSE_BRACE806_tree=null;

        try {
            // CSharp4.g:1237:2: ( OPEN_BRACE ( class_member_declarations )? CLOSE_BRACE )
            // CSharp4.g:1237:4: OPEN_BRACE ( class_member_declarations )? CLOSE_BRACE
            {
            root_0 = (Object)adaptor.nil();


            OPEN_BRACE804=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_class_body5383); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACE804_tree = 
            (Object)adaptor.create(OPEN_BRACE804)
            ;
            adaptor.addChild(root_0, OPEN_BRACE804_tree);
            }

            // CSharp4.g:1237:15: ( class_member_declarations )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==ABSTRACT||LA165_0==BOOL||LA165_0==BYTE||LA165_0==CHAR||LA165_0==CLASS||LA165_0==CONST||LA165_0==DECIMAL||LA165_0==DELEGATE||LA165_0==DOUBLE||(LA165_0 >= ENUM && LA165_0 <= EXTERN)||LA165_0==FLOAT||LA165_0==IDENTIFIER||LA165_0==IMPLICIT||LA165_0==INT||(LA165_0 >= INTERFACE && LA165_0 <= INTERNAL)||LA165_0==LONG||LA165_0==NEW||LA165_0==OBJECT||LA165_0==OPEN_BRACKET||LA165_0==OVERRIDE||(LA165_0 >= PRIVATE && LA165_0 <= PUBLIC)||LA165_0==READONLY||(LA165_0 >= SBYTE && LA165_0 <= SEALED)||LA165_0==SHORT||(LA165_0 >= STATIC && LA165_0 <= STRING)||LA165_0==STRUCT||LA165_0==TILDE||(LA165_0 >= UINT && LA165_0 <= ULONG)||(LA165_0 >= UNSAFE && LA165_0 <= USHORT)||(LA165_0 >= VIRTUAL && LA165_0 <= VOLATILE)) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // CSharp4.g:1237:15: class_member_declarations
                    {
                    pushFollow(FOLLOW_class_member_declarations_in_class_body5385);
                    class_member_declarations805=class_member_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_member_declarations805.getTree());

                    }
                    break;

            }


            CLOSE_BRACE806=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_class_body5388); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACE806_tree = 
            (Object)adaptor.create(CLOSE_BRACE806)
            ;
            adaptor.addChild(root_0, CLOSE_BRACE806_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_body"


    public static class class_member_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_member_declarations"
    // CSharp4.g:1239:1: class_member_declarations : ( class_member_declaration )+ ;
    public final CSharp4.class_member_declarations_return class_member_declarations() throws RecognitionException {
        CSharp4.class_member_declarations_return retval = new CSharp4.class_member_declarations_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.class_member_declaration_return class_member_declaration807 =null;



        try {
            // CSharp4.g:1240:2: ( ( class_member_declaration )+ )
            // CSharp4.g:1240:4: ( class_member_declaration )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1240:4: ( class_member_declaration )+
            int cnt166=0;
            loop166:
            do {
                int alt166=2;
                int LA166_0 = input.LA(1);

                if ( (LA166_0==ABSTRACT||LA166_0==BOOL||LA166_0==BYTE||LA166_0==CHAR||LA166_0==CLASS||LA166_0==CONST||LA166_0==DECIMAL||LA166_0==DELEGATE||LA166_0==DOUBLE||(LA166_0 >= ENUM && LA166_0 <= EXTERN)||LA166_0==FLOAT||LA166_0==IDENTIFIER||LA166_0==IMPLICIT||LA166_0==INT||(LA166_0 >= INTERFACE && LA166_0 <= INTERNAL)||LA166_0==LONG||LA166_0==NEW||LA166_0==OBJECT||LA166_0==OPEN_BRACKET||LA166_0==OVERRIDE||(LA166_0 >= PRIVATE && LA166_0 <= PUBLIC)||LA166_0==READONLY||(LA166_0 >= SBYTE && LA166_0 <= SEALED)||LA166_0==SHORT||(LA166_0 >= STATIC && LA166_0 <= STRING)||LA166_0==STRUCT||LA166_0==TILDE||(LA166_0 >= UINT && LA166_0 <= ULONG)||(LA166_0 >= UNSAFE && LA166_0 <= USHORT)||(LA166_0 >= VIRTUAL && LA166_0 <= VOLATILE)) ) {
                    alt166=1;
                }


                switch (alt166) {
            	case 1 :
            	    // CSharp4.g:1240:4: class_member_declaration
            	    {
            	    pushFollow(FOLLOW_class_member_declaration_in_class_member_declarations5399);
            	    class_member_declaration807=class_member_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_member_declaration807.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt166 >= 1 ) break loop166;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(166, input);
                        throw eee;
                }
                cnt166++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_member_declarations"


    public static class class_member_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_member_declaration"
    // CSharp4.g:1257:1: class_member_declaration : ( attributes )? ( all_member_modifiers )? ( common_member_declaration | TILDE IDENTIFIER OPEN_PARENS CLOSE_PARENS destructor_body ) ;
    public final CSharp4.class_member_declaration_return class_member_declaration() throws RecognitionException {
        CSharp4.class_member_declaration_return retval = new CSharp4.class_member_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token TILDE811=null;
        Token IDENTIFIER812=null;
        Token OPEN_PARENS813=null;
        Token CLOSE_PARENS814=null;
        CSharp4.attributes_return attributes808 =null;

        CSharp4.all_member_modifiers_return all_member_modifiers809 =null;

        CSharp4.common_member_declaration_return common_member_declaration810 =null;

        CSharp4.destructor_body_return destructor_body815 =null;


        Object TILDE811_tree=null;
        Object IDENTIFIER812_tree=null;
        Object OPEN_PARENS813_tree=null;
        Object CLOSE_PARENS814_tree=null;

        try {
            // CSharp4.g:1258:3: ( ( attributes )? ( all_member_modifiers )? ( common_member_declaration | TILDE IDENTIFIER OPEN_PARENS CLOSE_PARENS destructor_body ) )
            // CSharp4.g:1258:5: ( attributes )? ( all_member_modifiers )? ( common_member_declaration | TILDE IDENTIFIER OPEN_PARENS CLOSE_PARENS destructor_body )
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1258:5: ( attributes )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==OPEN_BRACKET) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // CSharp4.g:1258:5: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_class_member_declaration5414);
                    attributes808=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes808.getTree());

                    }
                    break;

            }


            // CSharp4.g:1258:17: ( all_member_modifiers )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==ABSTRACT||LA168_0==EXTERN||LA168_0==INTERNAL||LA168_0==NEW||LA168_0==OVERRIDE||(LA168_0 >= PRIVATE && LA168_0 <= PUBLIC)||LA168_0==READONLY||LA168_0==SEALED||LA168_0==STATIC||LA168_0==UNSAFE||LA168_0==VIRTUAL||LA168_0==VOLATILE) ) {
                alt168=1;
            }
            else if ( (LA168_0==IDENTIFIER) ) {
                int LA168_15 = input.LA(2);

                if ( ((input.LT(1).getText().equals("partial"))) ) {
                    alt168=1;
                }
            }
            switch (alt168) {
                case 1 :
                    // CSharp4.g:1258:17: all_member_modifiers
                    {
                    pushFollow(FOLLOW_all_member_modifiers_in_class_member_declaration5417);
                    all_member_modifiers809=all_member_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, all_member_modifiers809.getTree());

                    }
                    break;

            }


            // CSharp4.g:1259:4: ( common_member_declaration | TILDE IDENTIFIER OPEN_PARENS CLOSE_PARENS destructor_body )
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==BOOL||LA169_0==BYTE||LA169_0==CHAR||LA169_0==CLASS||LA169_0==CONST||LA169_0==DECIMAL||LA169_0==DELEGATE||LA169_0==DOUBLE||(LA169_0 >= ENUM && LA169_0 <= EXPLICIT)||LA169_0==FLOAT||LA169_0==IDENTIFIER||LA169_0==IMPLICIT||LA169_0==INT||LA169_0==INTERFACE||LA169_0==LONG||LA169_0==OBJECT||LA169_0==SBYTE||LA169_0==SHORT||LA169_0==STRING||LA169_0==STRUCT||(LA169_0 >= UINT && LA169_0 <= ULONG)||LA169_0==USHORT||LA169_0==VOID) ) {
                alt169=1;
            }
            else if ( (LA169_0==TILDE) ) {
                alt169=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 169, 0, input);

                throw nvae;

            }
            switch (alt169) {
                case 1 :
                    // CSharp4.g:1259:6: common_member_declaration
                    {
                    pushFollow(FOLLOW_common_member_declaration_in_class_member_declaration5425);
                    common_member_declaration810=common_member_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, common_member_declaration810.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1260:6: TILDE IDENTIFIER OPEN_PARENS CLOSE_PARENS destructor_body
                    {
                    TILDE811=(Token)match(input,TILDE,FOLLOW_TILDE_in_class_member_declaration5432); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    TILDE811_tree = 
                    (Object)adaptor.create(TILDE811)
                    ;
                    adaptor.addChild(root_0, TILDE811_tree);
                    }

                    IDENTIFIER812=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_class_member_declaration5434); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER812_tree = 
                    (Object)adaptor.create(IDENTIFIER812)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER812_tree);
                    }

                    OPEN_PARENS813=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_class_member_declaration5436); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS813_tree = 
                    (Object)adaptor.create(OPEN_PARENS813)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS813_tree);
                    }

                    CLOSE_PARENS814=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_class_member_declaration5438); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS814_tree = 
                    (Object)adaptor.create(CLOSE_PARENS814)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS814_tree);
                    }

                    pushFollow(FOLLOW_destructor_body_in_class_member_declaration5440);
                    destructor_body815=destructor_body();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, destructor_body815.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_member_declaration"


    public static class all_member_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "all_member_modifiers"
    // CSharp4.g:1265:1: all_member_modifiers : (m= all_member_modifier )+ ;
    public final CSharp4.all_member_modifiers_return all_member_modifiers() throws RecognitionException {
        CSharp4.all_member_modifiers_return retval = new CSharp4.all_member_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.all_member_modifier_return m =null;



        try {
            // CSharp4.g:1266:3: ( (m= all_member_modifier )+ )
            // CSharp4.g:1266:5: (m= all_member_modifier )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1266:5: (m= all_member_modifier )+
            int cnt170=0;
            loop170:
            do {
                int alt170=2;
                int LA170_0 = input.LA(1);

                if ( (LA170_0==IDENTIFIER) ) {
                    int LA170_11 = input.LA(2);

                    if ( ((input.LT(1).getText().equals("partial"))) ) {
                        alt170=1;
                    }


                }
                else if ( (LA170_0==ABSTRACT||LA170_0==EXTERN||LA170_0==INTERNAL||LA170_0==NEW||LA170_0==OVERRIDE||(LA170_0 >= PRIVATE && LA170_0 <= PUBLIC)||LA170_0==READONLY||LA170_0==SEALED||LA170_0==STATIC||LA170_0==UNSAFE||LA170_0==VIRTUAL||LA170_0==VOLATILE) ) {
                    alt170=1;
                }


                switch (alt170) {
            	case 1 :
            	    // CSharp4.g:1266:6: m= all_member_modifier
            	    {
            	    pushFollow(FOLLOW_all_member_modifier_in_all_member_modifiers5462);
            	    m=all_member_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, m.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt170 >= 1 ) break loop170;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(170, input);
                        throw eee;
                }
                cnt170++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "all_member_modifiers"


    public static class all_member_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "all_member_modifier"
    // CSharp4.g:1268:1: all_member_modifier : ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | READONLY | VOLATILE | VIRTUAL | SEALED | OVERRIDE | ABSTRACT | STATIC | UNSAFE | EXTERN | partial_contextual_keyword );
    public final CSharp4.all_member_modifier_return all_member_modifier() throws RecognitionException {
        CSharp4.all_member_modifier_return retval = new CSharp4.all_member_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW816=null;
        Token PUBLIC817=null;
        Token PROTECTED818=null;
        Token INTERNAL819=null;
        Token PRIVATE820=null;
        Token READONLY821=null;
        Token VOLATILE822=null;
        Token VIRTUAL823=null;
        Token SEALED824=null;
        Token OVERRIDE825=null;
        Token ABSTRACT826=null;
        Token STATIC827=null;
        Token UNSAFE828=null;
        Token EXTERN829=null;
        CSharp4.partial_contextual_keyword_return partial_contextual_keyword830 =null;


        Object NEW816_tree=null;
        Object PUBLIC817_tree=null;
        Object PROTECTED818_tree=null;
        Object INTERNAL819_tree=null;
        Object PRIVATE820_tree=null;
        Object READONLY821_tree=null;
        Object VOLATILE822_tree=null;
        Object VIRTUAL823_tree=null;
        Object SEALED824_tree=null;
        Object OVERRIDE825_tree=null;
        Object ABSTRACT826_tree=null;
        Object STATIC827_tree=null;
        Object UNSAFE828_tree=null;
        Object EXTERN829_tree=null;

        try {
            // CSharp4.g:1269:3: ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | READONLY | VOLATILE | VIRTUAL | SEALED | OVERRIDE | ABSTRACT | STATIC | UNSAFE | EXTERN | partial_contextual_keyword )
            int alt171=15;
            switch ( input.LA(1) ) {
            case NEW:
                {
                alt171=1;
                }
                break;
            case PUBLIC:
                {
                alt171=2;
                }
                break;
            case PROTECTED:
                {
                alt171=3;
                }
                break;
            case INTERNAL:
                {
                alt171=4;
                }
                break;
            case PRIVATE:
                {
                alt171=5;
                }
                break;
            case READONLY:
                {
                alt171=6;
                }
                break;
            case VOLATILE:
                {
                alt171=7;
                }
                break;
            case VIRTUAL:
                {
                alt171=8;
                }
                break;
            case SEALED:
                {
                alt171=9;
                }
                break;
            case OVERRIDE:
                {
                alt171=10;
                }
                break;
            case ABSTRACT:
                {
                alt171=11;
                }
                break;
            case STATIC:
                {
                alt171=12;
                }
                break;
            case UNSAFE:
                {
                alt171=13;
                }
                break;
            case EXTERN:
                {
                alt171=14;
                }
                break;
            case IDENTIFIER:
                {
                alt171=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 171, 0, input);

                throw nvae;

            }

            switch (alt171) {
                case 1 :
                    // CSharp4.g:1269:5: NEW
                    {
                    root_0 = (Object)adaptor.nil();


                    NEW816=(Token)match(input,NEW,FOLLOW_NEW_in_all_member_modifier5476); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW816_tree = 
                    (Object)adaptor.create(NEW816)
                    ;
                    adaptor.addChild(root_0, NEW816_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1270:5: PUBLIC
                    {
                    root_0 = (Object)adaptor.nil();


                    PUBLIC817=(Token)match(input,PUBLIC,FOLLOW_PUBLIC_in_all_member_modifier5482); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PUBLIC817_tree = 
                    (Object)adaptor.create(PUBLIC817)
                    ;
                    adaptor.addChild(root_0, PUBLIC817_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1271:5: PROTECTED
                    {
                    root_0 = (Object)adaptor.nil();


                    PROTECTED818=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_all_member_modifier5488); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED818_tree = 
                    (Object)adaptor.create(PROTECTED818)
                    ;
                    adaptor.addChild(root_0, PROTECTED818_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1272:5: INTERNAL
                    {
                    root_0 = (Object)adaptor.nil();


                    INTERNAL819=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_all_member_modifier5494); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL819_tree = 
                    (Object)adaptor.create(INTERNAL819)
                    ;
                    adaptor.addChild(root_0, INTERNAL819_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1273:5: PRIVATE
                    {
                    root_0 = (Object)adaptor.nil();


                    PRIVATE820=(Token)match(input,PRIVATE,FOLLOW_PRIVATE_in_all_member_modifier5500); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PRIVATE820_tree = 
                    (Object)adaptor.create(PRIVATE820)
                    ;
                    adaptor.addChild(root_0, PRIVATE820_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:1274:5: READONLY
                    {
                    root_0 = (Object)adaptor.nil();


                    READONLY821=(Token)match(input,READONLY,FOLLOW_READONLY_in_all_member_modifier5506); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    READONLY821_tree = 
                    (Object)adaptor.create(READONLY821)
                    ;
                    adaptor.addChild(root_0, READONLY821_tree);
                    }

                    }
                    break;
                case 7 :
                    // CSharp4.g:1275:5: VOLATILE
                    {
                    root_0 = (Object)adaptor.nil();


                    VOLATILE822=(Token)match(input,VOLATILE,FOLLOW_VOLATILE_in_all_member_modifier5512); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VOLATILE822_tree = 
                    (Object)adaptor.create(VOLATILE822)
                    ;
                    adaptor.addChild(root_0, VOLATILE822_tree);
                    }

                    }
                    break;
                case 8 :
                    // CSharp4.g:1276:5: VIRTUAL
                    {
                    root_0 = (Object)adaptor.nil();


                    VIRTUAL823=(Token)match(input,VIRTUAL,FOLLOW_VIRTUAL_in_all_member_modifier5518); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VIRTUAL823_tree = 
                    (Object)adaptor.create(VIRTUAL823)
                    ;
                    adaptor.addChild(root_0, VIRTUAL823_tree);
                    }

                    }
                    break;
                case 9 :
                    // CSharp4.g:1277:5: SEALED
                    {
                    root_0 = (Object)adaptor.nil();


                    SEALED824=(Token)match(input,SEALED,FOLLOW_SEALED_in_all_member_modifier5524); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEALED824_tree = 
                    (Object)adaptor.create(SEALED824)
                    ;
                    adaptor.addChild(root_0, SEALED824_tree);
                    }

                    }
                    break;
                case 10 :
                    // CSharp4.g:1278:5: OVERRIDE
                    {
                    root_0 = (Object)adaptor.nil();


                    OVERRIDE825=(Token)match(input,OVERRIDE,FOLLOW_OVERRIDE_in_all_member_modifier5530); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OVERRIDE825_tree = 
                    (Object)adaptor.create(OVERRIDE825)
                    ;
                    adaptor.addChild(root_0, OVERRIDE825_tree);
                    }

                    }
                    break;
                case 11 :
                    // CSharp4.g:1279:5: ABSTRACT
                    {
                    root_0 = (Object)adaptor.nil();


                    ABSTRACT826=(Token)match(input,ABSTRACT,FOLLOW_ABSTRACT_in_all_member_modifier5536); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ABSTRACT826_tree = 
                    (Object)adaptor.create(ABSTRACT826)
                    ;
                    adaptor.addChild(root_0, ABSTRACT826_tree);
                    }

                    }
                    break;
                case 12 :
                    // CSharp4.g:1280:5: STATIC
                    {
                    root_0 = (Object)adaptor.nil();


                    STATIC827=(Token)match(input,STATIC,FOLLOW_STATIC_in_all_member_modifier5542); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC827_tree = 
                    (Object)adaptor.create(STATIC827)
                    ;
                    adaptor.addChild(root_0, STATIC827_tree);
                    }

                    }
                    break;
                case 13 :
                    // CSharp4.g:1281:5: UNSAFE
                    {
                    root_0 = (Object)adaptor.nil();


                    UNSAFE828=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_all_member_modifier5548); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    UNSAFE828_tree = 
                    (Object)adaptor.create(UNSAFE828)
                    ;
                    adaptor.addChild(root_0, UNSAFE828_tree);
                    }

                    }
                    break;
                case 14 :
                    // CSharp4.g:1282:5: EXTERN
                    {
                    root_0 = (Object)adaptor.nil();


                    EXTERN829=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_all_member_modifier5554); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN829_tree = 
                    (Object)adaptor.create(EXTERN829)
                    ;
                    adaptor.addChild(root_0, EXTERN829_tree);
                    }

                    }
                    break;
                case 15 :
                    // CSharp4.g:1283:5: partial_contextual_keyword
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_partial_contextual_keyword_in_all_member_modifier5560);
                    partial_contextual_keyword830=partial_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, partial_contextual_keyword830.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "all_member_modifier"


    public static class common_member_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "common_member_declaration"
    // CSharp4.g:1300:1: common_member_declaration : ( constant_declaration2 | typed_member_declaration | EVENT type ( variable_declarators SEMICOLON | member_name OPEN_BRACE event_accessor_declarations CLOSE_BRACE ) | conversion_operator_declarator operator_body |cons= IDENTIFIER OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( constructor_initializer )? body | VOID method_definition | CLASS id= IDENTIFIER ( type_parameter_list )? ( class_base )? ( type_parameter_constraints_clauses )? class_body ( SEMICOLON )? | STRUCT IDENTIFIER ( type_parameter_list )? ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( SEMICOLON )? | INTERFACE IDENTIFIER ( variant_type_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( SEMICOLON )? | ENUM IDENTIFIER ( enum_base )? enum_body ( SEMICOLON )? | DELEGATE return_type IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON );
    public final CSharp4.common_member_declaration_return common_member_declaration() throws RecognitionException {
        CSharp4.common_member_declaration_return retval = new CSharp4.common_member_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token cons=null;
        Token id=null;
        Token EVENT833=null;
        Token SEMICOLON836=null;
        Token OPEN_BRACE838=null;
        Token CLOSE_BRACE840=null;
        Token OPEN_PARENS843=null;
        Token CLOSE_PARENS845=null;
        Token VOID848=null;
        Token CLASS850=null;
        Token SEMICOLON855=null;
        Token STRUCT856=null;
        Token IDENTIFIER857=null;
        Token SEMICOLON862=null;
        Token INTERFACE863=null;
        Token IDENTIFIER864=null;
        Token SEMICOLON869=null;
        Token ENUM870=null;
        Token IDENTIFIER871=null;
        Token SEMICOLON874=null;
        Token DELEGATE875=null;
        Token IDENTIFIER877=null;
        Token OPEN_PARENS879=null;
        Token CLOSE_PARENS881=null;
        Token SEMICOLON883=null;
        CSharp4.constant_declaration2_return constant_declaration2831 =null;

        CSharp4.typed_member_declaration_return typed_member_declaration832 =null;

        CSharp4.type_return type834 =null;

        CSharp4.variable_declarators_return variable_declarators835 =null;

        CSharp4.member_name_return member_name837 =null;

        CSharp4.event_accessor_declarations_return event_accessor_declarations839 =null;

        CSharp4.conversion_operator_declarator_return conversion_operator_declarator841 =null;

        CSharp4.operator_body_return operator_body842 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list844 =null;

        CSharp4.constructor_initializer_return constructor_initializer846 =null;

        CSharp4.body_return body847 =null;

        CSharp4.method_definition_return method_definition849 =null;

        CSharp4.type_parameter_list_return type_parameter_list851 =null;

        CSharp4.class_base_return class_base852 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses853 =null;

        CSharp4.class_body_return class_body854 =null;

        CSharp4.type_parameter_list_return type_parameter_list858 =null;

        CSharp4.struct_interfaces_return struct_interfaces859 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses860 =null;

        CSharp4.struct_body_return struct_body861 =null;

        CSharp4.variant_type_parameter_list_return variant_type_parameter_list865 =null;

        CSharp4.interface_base_return interface_base866 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses867 =null;

        CSharp4.interface_body_return interface_body868 =null;

        CSharp4.enum_base_return enum_base872 =null;

        CSharp4.enum_body_return enum_body873 =null;

        CSharp4.return_type_return return_type876 =null;

        CSharp4.type_parameter_list_return type_parameter_list878 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list880 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses882 =null;


        Object cons_tree=null;
        Object id_tree=null;
        Object EVENT833_tree=null;
        Object SEMICOLON836_tree=null;
        Object OPEN_BRACE838_tree=null;
        Object CLOSE_BRACE840_tree=null;
        Object OPEN_PARENS843_tree=null;
        Object CLOSE_PARENS845_tree=null;
        Object VOID848_tree=null;
        Object CLASS850_tree=null;
        Object SEMICOLON855_tree=null;
        Object STRUCT856_tree=null;
        Object IDENTIFIER857_tree=null;
        Object SEMICOLON862_tree=null;
        Object INTERFACE863_tree=null;
        Object IDENTIFIER864_tree=null;
        Object SEMICOLON869_tree=null;
        Object ENUM870_tree=null;
        Object IDENTIFIER871_tree=null;
        Object SEMICOLON874_tree=null;
        Object DELEGATE875_tree=null;
        Object IDENTIFIER877_tree=null;
        Object OPEN_PARENS879_tree=null;
        Object CLOSE_PARENS881_tree=null;
        Object SEMICOLON883_tree=null;

        try {
            // CSharp4.g:1301:3: ( constant_declaration2 | typed_member_declaration | EVENT type ( variable_declarators SEMICOLON | member_name OPEN_BRACE event_accessor_declarations CLOSE_BRACE ) | conversion_operator_declarator operator_body |cons= IDENTIFIER OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( constructor_initializer )? body | VOID method_definition | CLASS id= IDENTIFIER ( type_parameter_list )? ( class_base )? ( type_parameter_constraints_clauses )? class_body ( SEMICOLON )? | STRUCT IDENTIFIER ( type_parameter_list )? ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( SEMICOLON )? | INTERFACE IDENTIFIER ( variant_type_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( SEMICOLON )? | ENUM IDENTIFIER ( enum_base )? enum_body ( SEMICOLON )? | DELEGATE return_type IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON )
            int alt192=11;
            switch ( input.LA(1) ) {
            case CONST:
                {
                alt192=1;
                }
                break;
            case BOOL:
            case BYTE:
            case CHAR:
            case DECIMAL:
            case DOUBLE:
            case FLOAT:
            case INT:
            case LONG:
            case OBJECT:
            case SBYTE:
            case SHORT:
            case STRING:
            case UINT:
            case ULONG:
            case USHORT:
                {
                alt192=2;
                }
                break;
            case IDENTIFIER:
                {
                int LA192_3 = input.LA(2);

                if ( (LA192_3==DOT||LA192_3==DOUBLE_COLON||LA192_3==IDENTIFIER||LA192_3==INTERR||LA192_3==LT||LA192_3==OPEN_BRACKET||LA192_3==OPERATOR||LA192_3==STAR||LA192_3==THIS) ) {
                    alt192=2;
                }
                else if ( (LA192_3==OPEN_PARENS) ) {
                    alt192=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 192, 3, input);

                    throw nvae;

                }
                }
                break;
            case VOID:
                {
                int LA192_4 = input.LA(2);

                if ( (LA192_4==STAR) ) {
                    alt192=2;
                }
                else if ( (LA192_4==IDENTIFIER) ) {
                    alt192=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 192, 4, input);

                    throw nvae;

                }
                }
                break;
            case EVENT:
                {
                alt192=3;
                }
                break;
            case EXPLICIT:
            case IMPLICIT:
                {
                alt192=4;
                }
                break;
            case CLASS:
                {
                alt192=7;
                }
                break;
            case STRUCT:
                {
                alt192=8;
                }
                break;
            case INTERFACE:
                {
                alt192=9;
                }
                break;
            case ENUM:
                {
                alt192=10;
                }
                break;
            case DELEGATE:
                {
                alt192=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 192, 0, input);

                throw nvae;

            }

            switch (alt192) {
                case 1 :
                    // CSharp4.g:1301:5: constant_declaration2
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_constant_declaration2_in_common_member_declaration5577);
                    constant_declaration2831=constant_declaration2();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declaration2831.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1302:5: typed_member_declaration
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_typed_member_declaration_in_common_member_declaration5583);
                    typed_member_declaration832=typed_member_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typed_member_declaration832.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:1303:5: EVENT type ( variable_declarators SEMICOLON | member_name OPEN_BRACE event_accessor_declarations CLOSE_BRACE )
                    {
                    root_0 = (Object)adaptor.nil();


                    EVENT833=(Token)match(input,EVENT,FOLLOW_EVENT_in_common_member_declaration5589); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EVENT833_tree = 
                    (Object)adaptor.create(EVENT833)
                    ;
                    adaptor.addChild(root_0, EVENT833_tree);
                    }

                    pushFollow(FOLLOW_type_in_common_member_declaration5591);
                    type834=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type834.getTree());

                    // CSharp4.g:1303:16: ( variable_declarators SEMICOLON | member_name OPEN_BRACE event_accessor_declarations CLOSE_BRACE )
                    int alt172=2;
                    int LA172_0 = input.LA(1);

                    if ( (LA172_0==IDENTIFIER) ) {
                        int LA172_1 = input.LA(2);

                        if ( (LA172_1==ASSIGNMENT||LA172_1==COMMA||LA172_1==SEMICOLON) ) {
                            alt172=1;
                        }
                        else if ( (LA172_1==DOT||LA172_1==DOUBLE_COLON||LA172_1==LT||LA172_1==OPEN_BRACE) ) {
                            alt172=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 172, 1, input);

                            throw nvae;

                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 172, 0, input);

                        throw nvae;

                    }
                    switch (alt172) {
                        case 1 :
                            // CSharp4.g:1303:18: variable_declarators SEMICOLON
                            {
                            pushFollow(FOLLOW_variable_declarators_in_common_member_declaration5595);
                            variable_declarators835=variable_declarators();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarators835.getTree());

                            SEMICOLON836=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_common_member_declaration5597); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            SEMICOLON836_tree = 
                            (Object)adaptor.create(SEMICOLON836)
                            ;
                            adaptor.addChild(root_0, SEMICOLON836_tree);
                            }

                            }
                            break;
                        case 2 :
                            // CSharp4.g:1304:20: member_name OPEN_BRACE event_accessor_declarations CLOSE_BRACE
                            {
                            pushFollow(FOLLOW_member_name_in_common_member_declaration5618);
                            member_name837=member_name();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name837.getTree());

                            OPEN_BRACE838=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_common_member_declaration5620); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            OPEN_BRACE838_tree = 
                            (Object)adaptor.create(OPEN_BRACE838)
                            ;
                            adaptor.addChild(root_0, OPEN_BRACE838_tree);
                            }

                            pushFollow(FOLLOW_event_accessor_declarations_in_common_member_declaration5622);
                            event_accessor_declarations839=event_accessor_declarations();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, event_accessor_declarations839.getTree());

                            CLOSE_BRACE840=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_common_member_declaration5624); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            CLOSE_BRACE840_tree = 
                            (Object)adaptor.create(CLOSE_BRACE840)
                            ;
                            adaptor.addChild(root_0, CLOSE_BRACE840_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // CSharp4.g:1306:5: conversion_operator_declarator operator_body
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_conversion_operator_declarator_in_common_member_declaration5649);
                    conversion_operator_declarator841=conversion_operator_declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, conversion_operator_declarator841.getTree());

                    pushFollow(FOLLOW_operator_body_in_common_member_declaration5651);
                    operator_body842=operator_body();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_body842.getTree());

                    }
                    break;
                case 5 :
                    // CSharp4.g:1308:5: cons= IDENTIFIER OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( constructor_initializer )? body
                    {
                    root_0 = (Object)adaptor.nil();


                    cons=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_common_member_declaration5662); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    cons_tree = 
                    (Object)adaptor.create(cons)
                    ;
                    adaptor.addChild(root_0, cons_tree);
                    }

                    OPEN_PARENS843=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_common_member_declaration5664); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS843_tree = 
                    (Object)adaptor.create(OPEN_PARENS843)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS843_tree);
                    }

                    // CSharp4.g:1308:33: ( formal_parameter_list )?
                    int alt173=2;
                    int LA173_0 = input.LA(1);

                    if ( (LA173_0==BOOL||LA173_0==BYTE||LA173_0==CHAR||LA173_0==DECIMAL||LA173_0==DOUBLE||LA173_0==FLOAT||LA173_0==IDENTIFIER||LA173_0==INT||LA173_0==LONG||LA173_0==OBJECT||LA173_0==OPEN_BRACKET||LA173_0==OUT||LA173_0==PARAMS||LA173_0==REF||LA173_0==SBYTE||LA173_0==SHORT||LA173_0==STRING||LA173_0==THIS||(LA173_0 >= UINT && LA173_0 <= ULONG)||LA173_0==USHORT||LA173_0==VOID) ) {
                        alt173=1;
                    }
                    switch (alt173) {
                        case 1 :
                            // CSharp4.g:1308:33: formal_parameter_list
                            {
                            pushFollow(FOLLOW_formal_parameter_list_in_common_member_declaration5666);
                            formal_parameter_list844=formal_parameter_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list844.getTree());

                            }
                            break;

                    }


                    CLOSE_PARENS845=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_common_member_declaration5669); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS845_tree = 
                    (Object)adaptor.create(CLOSE_PARENS845)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS845_tree);
                    }

                    // CSharp4.g:1308:69: ( constructor_initializer )?
                    int alt174=2;
                    int LA174_0 = input.LA(1);

                    if ( (LA174_0==COLON) ) {
                        alt174=1;
                    }
                    switch (alt174) {
                        case 1 :
                            // CSharp4.g:1308:69: constructor_initializer
                            {
                            pushFollow(FOLLOW_constructor_initializer_in_common_member_declaration5671);
                            constructor_initializer846=constructor_initializer();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_initializer846.getTree());

                            }
                            break;

                    }


                    pushFollow(FOLLOW_body_in_common_member_declaration5674);
                    body847=body();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, body847.getTree());

                    }
                    break;
                case 6 :
                    // CSharp4.g:1309:5: VOID method_definition
                    {
                    root_0 = (Object)adaptor.nil();


                    VOID848=(Token)match(input,VOID,FOLLOW_VOID_in_common_member_declaration5680); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VOID848_tree = 
                    (Object)adaptor.create(VOID848)
                    ;
                    adaptor.addChild(root_0, VOID848_tree);
                    }

                    pushFollow(FOLLOW_method_definition_in_common_member_declaration5682);
                    method_definition849=method_definition();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_definition849.getTree());

                    }
                    break;
                case 7 :
                    // CSharp4.g:1310:5: CLASS id= IDENTIFIER ( type_parameter_list )? ( class_base )? ( type_parameter_constraints_clauses )? class_body ( SEMICOLON )?
                    {
                    root_0 = (Object)adaptor.nil();


                    CLASS850=(Token)match(input,CLASS,FOLLOW_CLASS_in_common_member_declaration5688); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLASS850_tree = 
                    (Object)adaptor.create(CLASS850)
                    ;
                    adaptor.addChild(root_0, CLASS850_tree);
                    }

                    id=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_common_member_declaration5692); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    id_tree = 
                    (Object)adaptor.create(id)
                    ;
                    adaptor.addChild(root_0, id_tree);
                    }

                    // CSharp4.g:1310:25: ( type_parameter_list )?
                    int alt175=2;
                    int LA175_0 = input.LA(1);

                    if ( (LA175_0==LT) ) {
                        alt175=1;
                    }
                    switch (alt175) {
                        case 1 :
                            // CSharp4.g:1310:25: type_parameter_list
                            {
                            pushFollow(FOLLOW_type_parameter_list_in_common_member_declaration5694);
                            type_parameter_list851=type_parameter_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_list851.getTree());

                            }
                            break;

                    }


                    // CSharp4.g:1310:46: ( class_base )?
                    int alt176=2;
                    int LA176_0 = input.LA(1);

                    if ( (LA176_0==COLON) ) {
                        alt176=1;
                    }
                    switch (alt176) {
                        case 1 :
                            // CSharp4.g:1310:46: class_base
                            {
                            pushFollow(FOLLOW_class_base_in_common_member_declaration5697);
                            class_base852=class_base();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, class_base852.getTree());

                            }
                            break;

                    }


                    // CSharp4.g:1310:58: ( type_parameter_constraints_clauses )?
                    int alt177=2;
                    int LA177_0 = input.LA(1);

                    if ( (LA177_0==IDENTIFIER) ) {
                        alt177=1;
                    }
                    switch (alt177) {
                        case 1 :
                            // CSharp4.g:1310:58: type_parameter_constraints_clauses
                            {
                            pushFollow(FOLLOW_type_parameter_constraints_clauses_in_common_member_declaration5700);
                            type_parameter_constraints_clauses853=type_parameter_constraints_clauses();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses853.getTree());

                            }
                            break;

                    }


                    pushFollow(FOLLOW_class_body_in_common_member_declaration5703);
                    class_body854=class_body();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_body854.getTree());

                    // CSharp4.g:1310:105: ( SEMICOLON )?
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==SEMICOLON) ) {
                        alt178=1;
                    }
                    switch (alt178) {
                        case 1 :
                            // CSharp4.g:1310:105: SEMICOLON
                            {
                            SEMICOLON855=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_common_member_declaration5705); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            SEMICOLON855_tree = 
                            (Object)adaptor.create(SEMICOLON855)
                            ;
                            adaptor.addChild(root_0, SEMICOLON855_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 8 :
                    // CSharp4.g:1311:5: STRUCT IDENTIFIER ( type_parameter_list )? ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( SEMICOLON )?
                    {
                    root_0 = (Object)adaptor.nil();


                    STRUCT856=(Token)match(input,STRUCT,FOLLOW_STRUCT_in_common_member_declaration5712); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STRUCT856_tree = 
                    (Object)adaptor.create(STRUCT856)
                    ;
                    adaptor.addChild(root_0, STRUCT856_tree);
                    }

                    IDENTIFIER857=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_common_member_declaration5714); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER857_tree = 
                    (Object)adaptor.create(IDENTIFIER857)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER857_tree);
                    }

                    // CSharp4.g:1311:23: ( type_parameter_list )?
                    int alt179=2;
                    int LA179_0 = input.LA(1);

                    if ( (LA179_0==LT) ) {
                        alt179=1;
                    }
                    switch (alt179) {
                        case 1 :
                            // CSharp4.g:1311:23: type_parameter_list
                            {
                            pushFollow(FOLLOW_type_parameter_list_in_common_member_declaration5716);
                            type_parameter_list858=type_parameter_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_list858.getTree());

                            }
                            break;

                    }


                    // CSharp4.g:1311:44: ( struct_interfaces )?
                    int alt180=2;
                    int LA180_0 = input.LA(1);

                    if ( (LA180_0==COLON) ) {
                        alt180=1;
                    }
                    switch (alt180) {
                        case 1 :
                            // CSharp4.g:1311:44: struct_interfaces
                            {
                            pushFollow(FOLLOW_struct_interfaces_in_common_member_declaration5719);
                            struct_interfaces859=struct_interfaces();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_interfaces859.getTree());

                            }
                            break;

                    }


                    // CSharp4.g:1311:63: ( type_parameter_constraints_clauses )?
                    int alt181=2;
                    int LA181_0 = input.LA(1);

                    if ( (LA181_0==IDENTIFIER) ) {
                        alt181=1;
                    }
                    switch (alt181) {
                        case 1 :
                            // CSharp4.g:1311:63: type_parameter_constraints_clauses
                            {
                            pushFollow(FOLLOW_type_parameter_constraints_clauses_in_common_member_declaration5722);
                            type_parameter_constraints_clauses860=type_parameter_constraints_clauses();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses860.getTree());

                            }
                            break;

                    }


                    pushFollow(FOLLOW_struct_body_in_common_member_declaration5725);
                    struct_body861=struct_body();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_body861.getTree());

                    // CSharp4.g:1311:111: ( SEMICOLON )?
                    int alt182=2;
                    int LA182_0 = input.LA(1);

                    if ( (LA182_0==SEMICOLON) ) {
                        alt182=1;
                    }
                    switch (alt182) {
                        case 1 :
                            // CSharp4.g:1311:111: SEMICOLON
                            {
                            SEMICOLON862=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_common_member_declaration5727); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            SEMICOLON862_tree = 
                            (Object)adaptor.create(SEMICOLON862)
                            ;
                            adaptor.addChild(root_0, SEMICOLON862_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 9 :
                    // CSharp4.g:1312:5: INTERFACE IDENTIFIER ( variant_type_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( SEMICOLON )?
                    {
                    root_0 = (Object)adaptor.nil();


                    INTERFACE863=(Token)match(input,INTERFACE,FOLLOW_INTERFACE_in_common_member_declaration5734); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERFACE863_tree = 
                    (Object)adaptor.create(INTERFACE863)
                    ;
                    adaptor.addChild(root_0, INTERFACE863_tree);
                    }

                    IDENTIFIER864=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_common_member_declaration5736); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER864_tree = 
                    (Object)adaptor.create(IDENTIFIER864)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER864_tree);
                    }

                    // CSharp4.g:1312:26: ( variant_type_parameter_list )?
                    int alt183=2;
                    int LA183_0 = input.LA(1);

                    if ( (LA183_0==LT) ) {
                        alt183=1;
                    }
                    switch (alt183) {
                        case 1 :
                            // CSharp4.g:1312:26: variant_type_parameter_list
                            {
                            pushFollow(FOLLOW_variant_type_parameter_list_in_common_member_declaration5738);
                            variant_type_parameter_list865=variant_type_parameter_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_parameter_list865.getTree());

                            }
                            break;

                    }


                    // CSharp4.g:1312:55: ( interface_base )?
                    int alt184=2;
                    int LA184_0 = input.LA(1);

                    if ( (LA184_0==COLON) ) {
                        alt184=1;
                    }
                    switch (alt184) {
                        case 1 :
                            // CSharp4.g:1312:55: interface_base
                            {
                            pushFollow(FOLLOW_interface_base_in_common_member_declaration5741);
                            interface_base866=interface_base();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_base866.getTree());

                            }
                            break;

                    }


                    // CSharp4.g:1312:71: ( type_parameter_constraints_clauses )?
                    int alt185=2;
                    int LA185_0 = input.LA(1);

                    if ( (LA185_0==IDENTIFIER) ) {
                        alt185=1;
                    }
                    switch (alt185) {
                        case 1 :
                            // CSharp4.g:1312:71: type_parameter_constraints_clauses
                            {
                            pushFollow(FOLLOW_type_parameter_constraints_clauses_in_common_member_declaration5744);
                            type_parameter_constraints_clauses867=type_parameter_constraints_clauses();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses867.getTree());

                            }
                            break;

                    }


                    pushFollow(FOLLOW_interface_body_in_common_member_declaration5747);
                    interface_body868=interface_body();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_body868.getTree());

                    // CSharp4.g:1312:122: ( SEMICOLON )?
                    int alt186=2;
                    int LA186_0 = input.LA(1);

                    if ( (LA186_0==SEMICOLON) ) {
                        alt186=1;
                    }
                    switch (alt186) {
                        case 1 :
                            // CSharp4.g:1312:122: SEMICOLON
                            {
                            SEMICOLON869=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_common_member_declaration5749); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            SEMICOLON869_tree = 
                            (Object)adaptor.create(SEMICOLON869)
                            ;
                            adaptor.addChild(root_0, SEMICOLON869_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 10 :
                    // CSharp4.g:1313:5: ENUM IDENTIFIER ( enum_base )? enum_body ( SEMICOLON )?
                    {
                    root_0 = (Object)adaptor.nil();


                    ENUM870=(Token)match(input,ENUM,FOLLOW_ENUM_in_common_member_declaration5756); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ENUM870_tree = 
                    (Object)adaptor.create(ENUM870)
                    ;
                    adaptor.addChild(root_0, ENUM870_tree);
                    }

                    IDENTIFIER871=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_common_member_declaration5758); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER871_tree = 
                    (Object)adaptor.create(IDENTIFIER871)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER871_tree);
                    }

                    // CSharp4.g:1313:21: ( enum_base )?
                    int alt187=2;
                    int LA187_0 = input.LA(1);

                    if ( (LA187_0==COLON) ) {
                        alt187=1;
                    }
                    switch (alt187) {
                        case 1 :
                            // CSharp4.g:1313:21: enum_base
                            {
                            pushFollow(FOLLOW_enum_base_in_common_member_declaration5760);
                            enum_base872=enum_base();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_base872.getTree());

                            }
                            break;

                    }


                    pushFollow(FOLLOW_enum_body_in_common_member_declaration5763);
                    enum_body873=enum_body();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_body873.getTree());

                    // CSharp4.g:1313:42: ( SEMICOLON )?
                    int alt188=2;
                    int LA188_0 = input.LA(1);

                    if ( (LA188_0==SEMICOLON) ) {
                        alt188=1;
                    }
                    switch (alt188) {
                        case 1 :
                            // CSharp4.g:1313:42: SEMICOLON
                            {
                            SEMICOLON874=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_common_member_declaration5765); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            SEMICOLON874_tree = 
                            (Object)adaptor.create(SEMICOLON874)
                            ;
                            adaptor.addChild(root_0, SEMICOLON874_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 11 :
                    // CSharp4.g:1314:5: DELEGATE return_type IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    DELEGATE875=(Token)match(input,DELEGATE,FOLLOW_DELEGATE_in_common_member_declaration5772); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DELEGATE875_tree = 
                    (Object)adaptor.create(DELEGATE875)
                    ;
                    adaptor.addChild(root_0, DELEGATE875_tree);
                    }

                    pushFollow(FOLLOW_return_type_in_common_member_declaration5774);
                    return_type876=return_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, return_type876.getTree());

                    IDENTIFIER877=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_common_member_declaration5776); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER877_tree = 
                    (Object)adaptor.create(IDENTIFIER877)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER877_tree);
                    }

                    // CSharp4.g:1314:37: ( type_parameter_list )?
                    int alt189=2;
                    int LA189_0 = input.LA(1);

                    if ( (LA189_0==LT) ) {
                        alt189=1;
                    }
                    switch (alt189) {
                        case 1 :
                            // CSharp4.g:1314:37: type_parameter_list
                            {
                            pushFollow(FOLLOW_type_parameter_list_in_common_member_declaration5778);
                            type_parameter_list878=type_parameter_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_list878.getTree());

                            }
                            break;

                    }


                    OPEN_PARENS879=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_common_member_declaration5781); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS879_tree = 
                    (Object)adaptor.create(OPEN_PARENS879)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS879_tree);
                    }

                    // CSharp4.g:1314:70: ( formal_parameter_list )?
                    int alt190=2;
                    int LA190_0 = input.LA(1);

                    if ( (LA190_0==BOOL||LA190_0==BYTE||LA190_0==CHAR||LA190_0==DECIMAL||LA190_0==DOUBLE||LA190_0==FLOAT||LA190_0==IDENTIFIER||LA190_0==INT||LA190_0==LONG||LA190_0==OBJECT||LA190_0==OPEN_BRACKET||LA190_0==OUT||LA190_0==PARAMS||LA190_0==REF||LA190_0==SBYTE||LA190_0==SHORT||LA190_0==STRING||LA190_0==THIS||(LA190_0 >= UINT && LA190_0 <= ULONG)||LA190_0==USHORT||LA190_0==VOID) ) {
                        alt190=1;
                    }
                    switch (alt190) {
                        case 1 :
                            // CSharp4.g:1314:70: formal_parameter_list
                            {
                            pushFollow(FOLLOW_formal_parameter_list_in_common_member_declaration5783);
                            formal_parameter_list880=formal_parameter_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list880.getTree());

                            }
                            break;

                    }


                    CLOSE_PARENS881=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_common_member_declaration5786); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS881_tree = 
                    (Object)adaptor.create(CLOSE_PARENS881)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS881_tree);
                    }

                    // CSharp4.g:1314:106: ( type_parameter_constraints_clauses )?
                    int alt191=2;
                    int LA191_0 = input.LA(1);

                    if ( (LA191_0==IDENTIFIER) ) {
                        alt191=1;
                    }
                    switch (alt191) {
                        case 1 :
                            // CSharp4.g:1314:106: type_parameter_constraints_clauses
                            {
                            pushFollow(FOLLOW_type_parameter_constraints_clauses_in_common_member_declaration5788);
                            type_parameter_constraints_clauses882=type_parameter_constraints_clauses();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses882.getTree());

                            }
                            break;

                    }


                    SEMICOLON883=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_common_member_declaration5791); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON883_tree = 
                    (Object)adaptor.create(SEMICOLON883)
                    ;
                    adaptor.addChild(root_0, SEMICOLON883_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "common_member_declaration"


    public static class typed_member_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "typed_member_declaration"
    // CSharp4.g:1317:1: typed_member_declaration : t= type ( ( interface_type DOT THIS )=> interface_type DOT THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE accessor_declarations CLOSE_BRACE | ( member_name ( type_parameter_list )? OPEN_PARENS )=> method_definition | ( member_name OPEN_BRACE )=> property_declaration2 | THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE accessor_declarations CLOSE_BRACE | operator_declaration2 | field_declaration2 ) ;
    public final CSharp4.typed_member_declaration_return typed_member_declaration() throws RecognitionException {
        CSharp4.typed_member_declaration_return retval = new CSharp4.typed_member_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token DOT885=null;
        Token THIS886=null;
        Token OPEN_BRACKET887=null;
        Token CLOSE_BRACKET889=null;
        Token OPEN_BRACE890=null;
        Token CLOSE_BRACE892=null;
        Token THIS895=null;
        Token OPEN_BRACKET896=null;
        Token CLOSE_BRACKET898=null;
        Token OPEN_BRACE899=null;
        Token CLOSE_BRACE901=null;
        CSharp4.type_return t =null;

        CSharp4.interface_type_return interface_type884 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list888 =null;

        CSharp4.accessor_declarations_return accessor_declarations891 =null;

        CSharp4.method_definition_return method_definition893 =null;

        CSharp4.property_declaration2_return property_declaration2894 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list897 =null;

        CSharp4.accessor_declarations_return accessor_declarations900 =null;

        CSharp4.operator_declaration2_return operator_declaration2902 =null;

        CSharp4.field_declaration2_return field_declaration2903 =null;


        Object DOT885_tree=null;
        Object THIS886_tree=null;
        Object OPEN_BRACKET887_tree=null;
        Object CLOSE_BRACKET889_tree=null;
        Object OPEN_BRACE890_tree=null;
        Object CLOSE_BRACE892_tree=null;
        Object THIS895_tree=null;
        Object OPEN_BRACKET896_tree=null;
        Object CLOSE_BRACKET898_tree=null;
        Object OPEN_BRACE899_tree=null;
        Object CLOSE_BRACE901_tree=null;

        try {
            // CSharp4.g:1318:3: (t= type ( ( interface_type DOT THIS )=> interface_type DOT THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE accessor_declarations CLOSE_BRACE | ( member_name ( type_parameter_list )? OPEN_PARENS )=> method_definition | ( member_name OPEN_BRACE )=> property_declaration2 | THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE accessor_declarations CLOSE_BRACE | operator_declaration2 | field_declaration2 ) )
            // CSharp4.g:1318:5: t= type ( ( interface_type DOT THIS )=> interface_type DOT THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE accessor_declarations CLOSE_BRACE | ( member_name ( type_parameter_list )? OPEN_PARENS )=> method_definition | ( member_name OPEN_BRACE )=> property_declaration2 | THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE accessor_declarations CLOSE_BRACE | operator_declaration2 | field_declaration2 )
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_in_typed_member_declaration5806);
            t=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, t.getTree());

            // CSharp4.g:1319:5: ( ( interface_type DOT THIS )=> interface_type DOT THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE accessor_declarations CLOSE_BRACE | ( member_name ( type_parameter_list )? OPEN_PARENS )=> method_definition | ( member_name OPEN_BRACE )=> property_declaration2 | THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE accessor_declarations CLOSE_BRACE | operator_declaration2 | field_declaration2 )
            int alt193=6;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                int LA193_1 = input.LA(2);

                if ( (synpred20_CSharp4()) ) {
                    alt193=1;
                }
                else if ( (synpred21_CSharp4()) ) {
                    alt193=2;
                }
                else if ( (synpred22_CSharp4()) ) {
                    alt193=3;
                }
                else if ( (true) ) {
                    alt193=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 193, 1, input);

                    throw nvae;

                }
                }
                break;
            case THIS:
                {
                alt193=4;
                }
                break;
            case OPERATOR:
                {
                alt193=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 193, 0, input);

                throw nvae;

            }

            switch (alt193) {
                case 1 :
                    // CSharp4.g:1319:7: ( interface_type DOT THIS )=> interface_type DOT THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE accessor_declarations CLOSE_BRACE
                    {
                    pushFollow(FOLLOW_interface_type_in_typed_member_declaration5832);
                    interface_type884=interface_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type884.getTree());

                    DOT885=(Token)match(input,DOT,FOLLOW_DOT_in_typed_member_declaration5834); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DOT885_tree = 
                    (Object)adaptor.create(DOT885)
                    ;
                    adaptor.addChild(root_0, DOT885_tree);
                    }

                    THIS886=(Token)match(input,THIS,FOLLOW_THIS_in_typed_member_declaration5836); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    THIS886_tree = 
                    (Object)adaptor.create(THIS886)
                    ;
                    adaptor.addChild(root_0, THIS886_tree);
                    }

                    OPEN_BRACKET887=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_typed_member_declaration5838); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACKET887_tree = 
                    (Object)adaptor.create(OPEN_BRACKET887)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACKET887_tree);
                    }

                    pushFollow(FOLLOW_formal_parameter_list_in_typed_member_declaration5840);
                    formal_parameter_list888=formal_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list888.getTree());

                    CLOSE_BRACKET889=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_typed_member_declaration5842); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACKET889_tree = 
                    (Object)adaptor.create(CLOSE_BRACKET889)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACKET889_tree);
                    }

                    OPEN_BRACE890=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_typed_member_declaration5844); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACE890_tree = 
                    (Object)adaptor.create(OPEN_BRACE890)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACE890_tree);
                    }

                    pushFollow(FOLLOW_accessor_declarations_in_typed_member_declaration5846);
                    accessor_declarations891=accessor_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_declarations891.getTree());

                    CLOSE_BRACE892=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_typed_member_declaration5848); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACE892_tree = 
                    (Object)adaptor.create(CLOSE_BRACE892)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACE892_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1321:7: ( member_name ( type_parameter_list )? OPEN_PARENS )=> method_definition
                    {
                    pushFollow(FOLLOW_method_definition_in_typed_member_declaration5867);
                    method_definition893=method_definition();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_definition893.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:1322:7: ( member_name OPEN_BRACE )=> property_declaration2
                    {
                    pushFollow(FOLLOW_property_declaration2_in_typed_member_declaration5883);
                    property_declaration2894=property_declaration2();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration2894.getTree());

                    }
                    break;
                case 4 :
                    // CSharp4.g:1323:7: THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE accessor_declarations CLOSE_BRACE
                    {
                    THIS895=(Token)match(input,THIS,FOLLOW_THIS_in_typed_member_declaration5891); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    THIS895_tree = 
                    (Object)adaptor.create(THIS895)
                    ;
                    adaptor.addChild(root_0, THIS895_tree);
                    }

                    OPEN_BRACKET896=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_typed_member_declaration5893); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACKET896_tree = 
                    (Object)adaptor.create(OPEN_BRACKET896)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACKET896_tree);
                    }

                    pushFollow(FOLLOW_formal_parameter_list_in_typed_member_declaration5895);
                    formal_parameter_list897=formal_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list897.getTree());

                    CLOSE_BRACKET898=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_typed_member_declaration5897); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACKET898_tree = 
                    (Object)adaptor.create(CLOSE_BRACKET898)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACKET898_tree);
                    }

                    OPEN_BRACE899=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_typed_member_declaration5899); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACE899_tree = 
                    (Object)adaptor.create(OPEN_BRACE899)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACE899_tree);
                    }

                    pushFollow(FOLLOW_accessor_declarations_in_typed_member_declaration5901);
                    accessor_declarations900=accessor_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_declarations900.getTree());

                    CLOSE_BRACE901=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_typed_member_declaration5903); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACE901_tree = 
                    (Object)adaptor.create(CLOSE_BRACE901)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACE901_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1324:7: operator_declaration2
                    {
                    pushFollow(FOLLOW_operator_declaration2_in_typed_member_declaration5911);
                    operator_declaration2902=operator_declaration2();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_declaration2902.getTree());

                    }
                    break;
                case 6 :
                    // CSharp4.g:1325:7: field_declaration2
                    {
                    pushFollow(FOLLOW_field_declaration2_in_typed_member_declaration5919);
                    field_declaration2903=field_declaration2();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, field_declaration2903.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typed_member_declaration"


    public static class constant_declarators_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constant_declarators"
    // CSharp4.g:1343:1: constant_declarators : constant_declarator ( COMMA constant_declarator )* ;
    public final CSharp4.constant_declarators_return constant_declarators() throws RecognitionException {
        CSharp4.constant_declarators_return retval = new CSharp4.constant_declarators_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA905=null;
        CSharp4.constant_declarator_return constant_declarator904 =null;

        CSharp4.constant_declarator_return constant_declarator906 =null;


        Object COMMA905_tree=null;

        try {
            // CSharp4.g:1344:2: ( constant_declarator ( COMMA constant_declarator )* )
            // CSharp4.g:1344:4: constant_declarator ( COMMA constant_declarator )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_constant_declarator_in_constant_declarators5939);
            constant_declarator904=constant_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarator904.getTree());

            // CSharp4.g:1344:24: ( COMMA constant_declarator )*
            loop194:
            do {
                int alt194=2;
                int LA194_0 = input.LA(1);

                if ( (LA194_0==COMMA) ) {
                    alt194=1;
                }


                switch (alt194) {
            	case 1 :
            	    // CSharp4.g:1344:26: COMMA constant_declarator
            	    {
            	    COMMA905=(Token)match(input,COMMA,FOLLOW_COMMA_in_constant_declarators5943); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA905_tree = 
            	    (Object)adaptor.create(COMMA905)
            	    ;
            	    adaptor.addChild(root_0, COMMA905_tree);
            	    }

            	    pushFollow(FOLLOW_constant_declarator_in_constant_declarators5946);
            	    constant_declarator906=constant_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarator906.getTree());

            	    }
            	    break;

            	default :
            	    break loop194;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constant_declarators"


    public static class constant_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constant_declarator"
    // CSharp4.g:1346:1: constant_declarator : IDENTIFIER ASSIGNMENT constant_expression ;
    public final CSharp4.constant_declarator_return constant_declarator() throws RecognitionException {
        CSharp4.constant_declarator_return retval = new CSharp4.constant_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER907=null;
        Token ASSIGNMENT908=null;
        CSharp4.constant_expression_return constant_expression909 =null;


        Object IDENTIFIER907_tree=null;
        Object ASSIGNMENT908_tree=null;

        try {
            // CSharp4.g:1347:2: ( IDENTIFIER ASSIGNMENT constant_expression )
            // CSharp4.g:1347:4: IDENTIFIER ASSIGNMENT constant_expression
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER907=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_constant_declarator5960); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER907_tree = 
            (Object)adaptor.create(IDENTIFIER907)
            ;
            adaptor.addChild(root_0, IDENTIFIER907_tree);
            }

            ASSIGNMENT908=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_constant_declarator5962); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGNMENT908_tree = 
            (Object)adaptor.create(ASSIGNMENT908)
            ;
            adaptor.addChild(root_0, ASSIGNMENT908_tree);
            }

            pushFollow(FOLLOW_constant_expression_in_constant_declarator5964);
            constant_expression909=constant_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression909.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constant_declarator"


    public static class variable_declarators_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "variable_declarators"
    // CSharp4.g:1369:1: variable_declarators : variable_declarator ( COMMA variable_declarator )* ;
    public final CSharp4.variable_declarators_return variable_declarators() throws RecognitionException {
        CSharp4.variable_declarators_return retval = new CSharp4.variable_declarators_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA911=null;
        CSharp4.variable_declarator_return variable_declarator910 =null;

        CSharp4.variable_declarator_return variable_declarator912 =null;


        Object COMMA911_tree=null;

        try {
            // CSharp4.g:1370:2: ( variable_declarator ( COMMA variable_declarator )* )
            // CSharp4.g:1370:4: variable_declarator ( COMMA variable_declarator )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_variable_declarator_in_variable_declarators5978);
            variable_declarator910=variable_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarator910.getTree());

            // CSharp4.g:1370:24: ( COMMA variable_declarator )*
            loop195:
            do {
                int alt195=2;
                int LA195_0 = input.LA(1);

                if ( (LA195_0==COMMA) ) {
                    alt195=1;
                }


                switch (alt195) {
            	case 1 :
            	    // CSharp4.g:1370:26: COMMA variable_declarator
            	    {
            	    COMMA911=(Token)match(input,COMMA,FOLLOW_COMMA_in_variable_declarators5982); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA911_tree = 
            	    (Object)adaptor.create(COMMA911)
            	    ;
            	    adaptor.addChild(root_0, COMMA911_tree);
            	    }

            	    pushFollow(FOLLOW_variable_declarator_in_variable_declarators5985);
            	    variable_declarator912=variable_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarator912.getTree());

            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "variable_declarators"


    public static class variable_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "variable_declarator"
    // CSharp4.g:1372:1: variable_declarator : ( IDENTIFIER | IDENTIFIER ASSIGNMENT variable_initializer );
    public final CSharp4.variable_declarator_return variable_declarator() throws RecognitionException {
        CSharp4.variable_declarator_return retval = new CSharp4.variable_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER913=null;
        Token IDENTIFIER914=null;
        Token ASSIGNMENT915=null;
        CSharp4.variable_initializer_return variable_initializer916 =null;


        Object IDENTIFIER913_tree=null;
        Object IDENTIFIER914_tree=null;
        Object ASSIGNMENT915_tree=null;

        try {
            // CSharp4.g:1373:2: ( IDENTIFIER | IDENTIFIER ASSIGNMENT variable_initializer )
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==IDENTIFIER) ) {
                int LA196_1 = input.LA(2);

                if ( (LA196_1==ASSIGNMENT) ) {
                    alt196=2;
                }
                else if ( (LA196_1==COMMA||LA196_1==SEMICOLON) ) {
                    alt196=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 196, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 196, 0, input);

                throw nvae;

            }
            switch (alt196) {
                case 1 :
                    // CSharp4.g:1373:4: IDENTIFIER
                    {
                    root_0 = (Object)adaptor.nil();


                    IDENTIFIER913=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_variable_declarator5999); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER913_tree = 
                    (Object)adaptor.create(IDENTIFIER913)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER913_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1374:4: IDENTIFIER ASSIGNMENT variable_initializer
                    {
                    root_0 = (Object)adaptor.nil();


                    IDENTIFIER914=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_variable_declarator6004); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER914_tree = 
                    (Object)adaptor.create(IDENTIFIER914)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER914_tree);
                    }

                    ASSIGNMENT915=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_variable_declarator6006); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGNMENT915_tree = 
                    (Object)adaptor.create(ASSIGNMENT915)
                    ;
                    adaptor.addChild(root_0, ASSIGNMENT915_tree);
                    }

                    pushFollow(FOLLOW_variable_initializer_in_variable_declarator6008);
                    variable_initializer916=variable_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer916.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "variable_declarator"


    public static class variable_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "variable_initializer"
    // CSharp4.g:1376:1: variable_initializer : ( expression | array_initializer );
    public final CSharp4.variable_initializer_return variable_initializer() throws RecognitionException {
        CSharp4.variable_initializer_return retval = new CSharp4.variable_initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.expression_return expression917 =null;

        CSharp4.array_initializer_return array_initializer918 =null;



        try {
            // CSharp4.g:1377:2: ( expression | array_initializer )
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==AMP||(LA197_0 >= BANG && LA197_0 <= BASE)||LA197_0==BOOL||LA197_0==BYTE||(LA197_0 >= CHAR && LA197_0 <= CHECKED)||LA197_0==DECIMAL||(LA197_0 >= DEFAULT && LA197_0 <= DELEGATE)||LA197_0==DOUBLE||LA197_0==FALSE||LA197_0==FLOAT||LA197_0==IDENTIFIER||(LA197_0 >= INT && LA197_0 <= INTEGER_LITERAL)||LA197_0==LONG||LA197_0==MINUS||LA197_0==NEW||LA197_0==NULL||LA197_0==OBJECT||LA197_0==OPEN_PARENS||LA197_0==OP_DEC||LA197_0==OP_INC||LA197_0==PLUS||LA197_0==REAL_LITERAL||LA197_0==SBYTE||LA197_0==SHORT||LA197_0==SIZEOF||LA197_0==STAR||(LA197_0 >= STRING && LA197_0 <= STRING_LITERAL)||LA197_0==THIS||(LA197_0 >= TILDE && LA197_0 <= TRUE)||(LA197_0 >= TYPEOF && LA197_0 <= UNCHECKED)||LA197_0==USHORT) ) {
                alt197=1;
            }
            else if ( (LA197_0==OPEN_BRACE) ) {
                alt197=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 197, 0, input);

                throw nvae;

            }
            switch (alt197) {
                case 1 :
                    // CSharp4.g:1377:4: expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_expression_in_variable_initializer6019);
                    expression917=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression917.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1378:4: array_initializer
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_array_initializer_in_variable_initializer6024);
                    array_initializer918=array_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer918.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "variable_initializer"


    public static class method_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_declaration"
    // CSharp4.g:1380:1: method_declaration : method_header method_body ;
    public  CSharp4.method_declaration_return method_declaration() throws RecognitionException {
        CSharp4.method_declaration_return retval = new CSharp4.method_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.method_header_return method_header919 =null;

        CSharp4.method_body_return method_body920 =null;



        try {
            // CSharp4.g:1381:2: ( method_header method_body )
            // CSharp4.g:1381:4: method_header method_body
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_method_header_in_method_declaration6035);
            method_header919=method_header();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_header919.getTree());

            pushFollow(FOLLOW_method_body_in_method_declaration6037);
            method_body920=method_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_body920.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_declaration"


    public static class method_header_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_header"
    // CSharp4.g:1383:1: method_header : ( attributes )? ( method_modifiers )? ( partial_contextual_keyword )? return_type member_name ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? ;
    public final CSharp4.method_header_return method_header() throws RecognitionException {
        CSharp4.method_header_return retval = new CSharp4.method_header_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_PARENS927=null;
        Token CLOSE_PARENS929=null;
        CSharp4.attributes_return attributes921 =null;

        CSharp4.method_modifiers_return method_modifiers922 =null;

        CSharp4.partial_contextual_keyword_return partial_contextual_keyword923 =null;

        CSharp4.return_type_return return_type924 =null;

        CSharp4.member_name_return member_name925 =null;

        CSharp4.type_parameter_list_return type_parameter_list926 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list928 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses930 =null;


        Object OPEN_PARENS927_tree=null;
        Object CLOSE_PARENS929_tree=null;

        try {
            // CSharp4.g:1384:2: ( ( attributes )? ( method_modifiers )? ( partial_contextual_keyword )? return_type member_name ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? )
            // CSharp4.g:1384:4: ( attributes )? ( method_modifiers )? ( partial_contextual_keyword )? return_type member_name ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )?
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1384:4: ( attributes )?
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==OPEN_BRACKET) ) {
                alt198=1;
            }
            switch (alt198) {
                case 1 :
                    // CSharp4.g:1384:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_method_header6048);
                    attributes921=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes921.getTree());

                    }
                    break;

            }


            // CSharp4.g:1384:16: ( method_modifiers )?
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==ABSTRACT||LA199_0==EXTERN||LA199_0==INTERNAL||LA199_0==NEW||LA199_0==OVERRIDE||(LA199_0 >= PRIVATE && LA199_0 <= PUBLIC)||LA199_0==SEALED||LA199_0==STATIC||LA199_0==UNSAFE||LA199_0==VIRTUAL) ) {
                alt199=1;
            }
            switch (alt199) {
                case 1 :
                    // CSharp4.g:1384:16: method_modifiers
                    {
                    pushFollow(FOLLOW_method_modifiers_in_method_header6051);
                    method_modifiers922=method_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_modifiers922.getTree());

                    }
                    break;

            }


            // CSharp4.g:1384:34: ( partial_contextual_keyword )?
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( (LA200_0==IDENTIFIER) ) {
                int LA200_1 = input.LA(2);

                if ( ((input.LT(1).getText().equals("partial"))) ) {
                    alt200=1;
                }
            }
            switch (alt200) {
                case 1 :
                    // CSharp4.g:1384:34: partial_contextual_keyword
                    {
                    pushFollow(FOLLOW_partial_contextual_keyword_in_method_header6054);
                    partial_contextual_keyword923=partial_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, partial_contextual_keyword923.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_return_type_in_method_header6057);
            return_type924=return_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, return_type924.getTree());

            pushFollow(FOLLOW_member_name_in_method_header6059);
            member_name925=member_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name925.getTree());

            // CSharp4.g:1384:86: ( type_parameter_list )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==LT) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // CSharp4.g:1384:86: type_parameter_list
                    {
                    pushFollow(FOLLOW_type_parameter_list_in_method_header6061);
                    type_parameter_list926=type_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_list926.getTree());

                    }
                    break;

            }


            OPEN_PARENS927=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_method_header6064); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS927_tree = 
            (Object)adaptor.create(OPEN_PARENS927)
            ;
            adaptor.addChild(root_0, OPEN_PARENS927_tree);
            }

            // CSharp4.g:1384:119: ( formal_parameter_list )?
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==BOOL||LA202_0==BYTE||LA202_0==CHAR||LA202_0==DECIMAL||LA202_0==DOUBLE||LA202_0==FLOAT||LA202_0==IDENTIFIER||LA202_0==INT||LA202_0==LONG||LA202_0==OBJECT||LA202_0==OPEN_BRACKET||LA202_0==OUT||LA202_0==PARAMS||LA202_0==REF||LA202_0==SBYTE||LA202_0==SHORT||LA202_0==STRING||LA202_0==THIS||(LA202_0 >= UINT && LA202_0 <= ULONG)||LA202_0==USHORT||LA202_0==VOID) ) {
                alt202=1;
            }
            switch (alt202) {
                case 1 :
                    // CSharp4.g:1384:119: formal_parameter_list
                    {
                    pushFollow(FOLLOW_formal_parameter_list_in_method_header6066);
                    formal_parameter_list928=formal_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list928.getTree());

                    }
                    break;

            }


            CLOSE_PARENS929=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_method_header6069); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS929_tree = 
            (Object)adaptor.create(CLOSE_PARENS929)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS929_tree);
            }

            // CSharp4.g:1384:155: ( type_parameter_constraints_clauses )?
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==IDENTIFIER) ) {
                alt203=1;
            }
            switch (alt203) {
                case 1 :
                    // CSharp4.g:1384:155: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_method_header6071);
                    type_parameter_constraints_clauses930=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses930.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_header"


    public static class method_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_modifiers"
    // CSharp4.g:1386:1: method_modifiers : ( method_modifier )+ ;
    public final CSharp4.method_modifiers_return method_modifiers() throws RecognitionException {
        CSharp4.method_modifiers_return retval = new CSharp4.method_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.method_modifier_return method_modifier931 =null;



        try {
            // CSharp4.g:1387:2: ( ( method_modifier )+ )
            // CSharp4.g:1387:4: ( method_modifier )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1387:4: ( method_modifier )+
            int cnt204=0;
            loop204:
            do {
                int alt204=2;
                int LA204_0 = input.LA(1);

                if ( (LA204_0==ABSTRACT||LA204_0==EXTERN||LA204_0==INTERNAL||LA204_0==NEW||LA204_0==OVERRIDE||(LA204_0 >= PRIVATE && LA204_0 <= PUBLIC)||LA204_0==SEALED||LA204_0==STATIC||LA204_0==UNSAFE||LA204_0==VIRTUAL) ) {
                    alt204=1;
                }


                switch (alt204) {
            	case 1 :
            	    // CSharp4.g:1387:4: method_modifier
            	    {
            	    pushFollow(FOLLOW_method_modifier_in_method_modifiers6083);
            	    method_modifier931=method_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_modifier931.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt204 >= 1 ) break loop204;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(204, input);
                        throw eee;
                }
                cnt204++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_modifiers"


    public static class method_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_modifier"
    // CSharp4.g:1389:1: method_modifier : ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | STATIC | VIRTUAL | SEALED | OVERRIDE | ABSTRACT | EXTERN | method_modifier_unsafe );
    public final CSharp4.method_modifier_return method_modifier() throws RecognitionException {
        CSharp4.method_modifier_return retval = new CSharp4.method_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW932=null;
        Token PUBLIC933=null;
        Token PROTECTED934=null;
        Token INTERNAL935=null;
        Token PRIVATE936=null;
        Token STATIC937=null;
        Token VIRTUAL938=null;
        Token SEALED939=null;
        Token OVERRIDE940=null;
        Token ABSTRACT941=null;
        Token EXTERN942=null;
        CSharp4.method_modifier_unsafe_return method_modifier_unsafe943 =null;


        Object NEW932_tree=null;
        Object PUBLIC933_tree=null;
        Object PROTECTED934_tree=null;
        Object INTERNAL935_tree=null;
        Object PRIVATE936_tree=null;
        Object STATIC937_tree=null;
        Object VIRTUAL938_tree=null;
        Object SEALED939_tree=null;
        Object OVERRIDE940_tree=null;
        Object ABSTRACT941_tree=null;
        Object EXTERN942_tree=null;

        try {
            // CSharp4.g:1390:2: ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | STATIC | VIRTUAL | SEALED | OVERRIDE | ABSTRACT | EXTERN | method_modifier_unsafe )
            int alt205=12;
            switch ( input.LA(1) ) {
            case NEW:
                {
                alt205=1;
                }
                break;
            case PUBLIC:
                {
                alt205=2;
                }
                break;
            case PROTECTED:
                {
                alt205=3;
                }
                break;
            case INTERNAL:
                {
                alt205=4;
                }
                break;
            case PRIVATE:
                {
                alt205=5;
                }
                break;
            case STATIC:
                {
                alt205=6;
                }
                break;
            case VIRTUAL:
                {
                alt205=7;
                }
                break;
            case SEALED:
                {
                alt205=8;
                }
                break;
            case OVERRIDE:
                {
                alt205=9;
                }
                break;
            case ABSTRACT:
                {
                alt205=10;
                }
                break;
            case EXTERN:
                {
                alt205=11;
                }
                break;
            case UNSAFE:
                {
                alt205=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 205, 0, input);

                throw nvae;

            }

            switch (alt205) {
                case 1 :
                    // CSharp4.g:1390:4: NEW
                    {
                    root_0 = (Object)adaptor.nil();


                    NEW932=(Token)match(input,NEW,FOLLOW_NEW_in_method_modifier6095); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW932_tree = 
                    (Object)adaptor.create(NEW932)
                    ;
                    adaptor.addChild(root_0, NEW932_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1391:4: PUBLIC
                    {
                    root_0 = (Object)adaptor.nil();


                    PUBLIC933=(Token)match(input,PUBLIC,FOLLOW_PUBLIC_in_method_modifier6100); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PUBLIC933_tree = 
                    (Object)adaptor.create(PUBLIC933)
                    ;
                    adaptor.addChild(root_0, PUBLIC933_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1392:4: PROTECTED
                    {
                    root_0 = (Object)adaptor.nil();


                    PROTECTED934=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_method_modifier6105); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED934_tree = 
                    (Object)adaptor.create(PROTECTED934)
                    ;
                    adaptor.addChild(root_0, PROTECTED934_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1393:4: INTERNAL
                    {
                    root_0 = (Object)adaptor.nil();


                    INTERNAL935=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_method_modifier6110); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL935_tree = 
                    (Object)adaptor.create(INTERNAL935)
                    ;
                    adaptor.addChild(root_0, INTERNAL935_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1394:4: PRIVATE
                    {
                    root_0 = (Object)adaptor.nil();


                    PRIVATE936=(Token)match(input,PRIVATE,FOLLOW_PRIVATE_in_method_modifier6115); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PRIVATE936_tree = 
                    (Object)adaptor.create(PRIVATE936)
                    ;
                    adaptor.addChild(root_0, PRIVATE936_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:1395:4: STATIC
                    {
                    root_0 = (Object)adaptor.nil();


                    STATIC937=(Token)match(input,STATIC,FOLLOW_STATIC_in_method_modifier6120); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC937_tree = 
                    (Object)adaptor.create(STATIC937)
                    ;
                    adaptor.addChild(root_0, STATIC937_tree);
                    }

                    }
                    break;
                case 7 :
                    // CSharp4.g:1396:4: VIRTUAL
                    {
                    root_0 = (Object)adaptor.nil();


                    VIRTUAL938=(Token)match(input,VIRTUAL,FOLLOW_VIRTUAL_in_method_modifier6125); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VIRTUAL938_tree = 
                    (Object)adaptor.create(VIRTUAL938)
                    ;
                    adaptor.addChild(root_0, VIRTUAL938_tree);
                    }

                    }
                    break;
                case 8 :
                    // CSharp4.g:1397:4: SEALED
                    {
                    root_0 = (Object)adaptor.nil();


                    SEALED939=(Token)match(input,SEALED,FOLLOW_SEALED_in_method_modifier6130); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEALED939_tree = 
                    (Object)adaptor.create(SEALED939)
                    ;
                    adaptor.addChild(root_0, SEALED939_tree);
                    }

                    }
                    break;
                case 9 :
                    // CSharp4.g:1398:4: OVERRIDE
                    {
                    root_0 = (Object)adaptor.nil();


                    OVERRIDE940=(Token)match(input,OVERRIDE,FOLLOW_OVERRIDE_in_method_modifier6135); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OVERRIDE940_tree = 
                    (Object)adaptor.create(OVERRIDE940)
                    ;
                    adaptor.addChild(root_0, OVERRIDE940_tree);
                    }

                    }
                    break;
                case 10 :
                    // CSharp4.g:1399:4: ABSTRACT
                    {
                    root_0 = (Object)adaptor.nil();


                    ABSTRACT941=(Token)match(input,ABSTRACT,FOLLOW_ABSTRACT_in_method_modifier6140); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ABSTRACT941_tree = 
                    (Object)adaptor.create(ABSTRACT941)
                    ;
                    adaptor.addChild(root_0, ABSTRACT941_tree);
                    }

                    }
                    break;
                case 11 :
                    // CSharp4.g:1400:4: EXTERN
                    {
                    root_0 = (Object)adaptor.nil();


                    EXTERN942=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_method_modifier6145); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN942_tree = 
                    (Object)adaptor.create(EXTERN942)
                    ;
                    adaptor.addChild(root_0, EXTERN942_tree);
                    }

                    }
                    break;
                case 12 :
                    // CSharp4.g:1401:4: method_modifier_unsafe
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_method_modifier_unsafe_in_method_modifier6150);
                    method_modifier_unsafe943=method_modifier_unsafe();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_modifier_unsafe943.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_modifier"


    public static class return_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "return_type"
    // CSharp4.g:1404:1: return_type : ( type | VOID );
    public final CSharp4.return_type_return return_type() throws RecognitionException {
        CSharp4.return_type_return retval = new CSharp4.return_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token VOID945=null;
        CSharp4.type_return type944 =null;


        Object VOID945_tree=null;

        try {
            // CSharp4.g:1405:2: ( type | VOID )
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==BOOL||LA206_0==BYTE||LA206_0==CHAR||LA206_0==DECIMAL||LA206_0==DOUBLE||LA206_0==FLOAT||LA206_0==IDENTIFIER||LA206_0==INT||LA206_0==LONG||LA206_0==OBJECT||LA206_0==SBYTE||LA206_0==SHORT||LA206_0==STRING||(LA206_0 >= UINT && LA206_0 <= ULONG)||LA206_0==USHORT) ) {
                alt206=1;
            }
            else if ( (LA206_0==VOID) ) {
                int LA206_2 = input.LA(2);

                if ( (LA206_2==STAR) ) {
                    alt206=1;
                }
                else if ( (LA206_2==IDENTIFIER) ) {
                    alt206=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 206, 2, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 206, 0, input);

                throw nvae;

            }
            switch (alt206) {
                case 1 :
                    // CSharp4.g:1405:4: type
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_type_in_return_type6163);
                    type944=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type944.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1406:4: VOID
                    {
                    root_0 = (Object)adaptor.nil();


                    VOID945=(Token)match(input,VOID,FOLLOW_VOID_in_return_type6168); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VOID945_tree = 
                    (Object)adaptor.create(VOID945)
                    ;
                    adaptor.addChild(root_0, VOID945_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "return_type"


    public static class member_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "member_name"
    // CSharp4.g:1415:1: member_name : interface_type ;
    public final CSharp4.member_name_return member_name() throws RecognitionException {
        CSharp4.member_name_return retval = new CSharp4.member_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.interface_type_return interface_type946 =null;



        try {
            // CSharp4.g:1416:3: ( interface_type )
            // CSharp4.g:1416:5: interface_type
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_interface_type_in_member_name6184);
            interface_type946=interface_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type946.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "member_name"


    public static class method_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_body"
    // CSharp4.g:1418:1: method_body : ( block | SEMICOLON );
    public final CSharp4.method_body_return method_body() throws RecognitionException {
        CSharp4.method_body_return retval = new CSharp4.method_body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SEMICOLON948=null;
        CSharp4.block_return block947 =null;


        Object SEMICOLON948_tree=null;

        try {
            // CSharp4.g:1419:2: ( block | SEMICOLON )
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==OPEN_BRACE) ) {
                alt207=1;
            }
            else if ( (LA207_0==SEMICOLON) ) {
                alt207=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 207, 0, input);

                throw nvae;

            }
            switch (alt207) {
                case 1 :
                    // CSharp4.g:1419:4: block
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_block_in_method_body6196);
                    block947=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block947.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1420:4: SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    SEMICOLON948=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_method_body6201); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON948_tree = 
                    (Object)adaptor.create(SEMICOLON948)
                    ;
                    adaptor.addChild(root_0, SEMICOLON948_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_body"


    public static class formal_parameter_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "formal_parameter_list"
    // CSharp4.g:1429:1: formal_parameter_list : ( ( ( attributes )? PARAMS )=> parameter_array | fixed_parameters ( ( COMMA parameter_array )=> COMMA parameter_array )? );
    public final CSharp4.formal_parameter_list_return formal_parameter_list() throws RecognitionException {
        CSharp4.formal_parameter_list_return retval = new CSharp4.formal_parameter_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA951=null;
        CSharp4.parameter_array_return parameter_array949 =null;

        CSharp4.fixed_parameters_return fixed_parameters950 =null;

        CSharp4.parameter_array_return parameter_array952 =null;


        Object COMMA951_tree=null;

        try {
            // CSharp4.g:1430:3: ( ( ( attributes )? PARAMS )=> parameter_array | fixed_parameters ( ( COMMA parameter_array )=> COMMA parameter_array )? )
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==OPEN_BRACKET) ) {
                int LA209_1 = input.LA(2);

                if ( (synpred23_CSharp4()) ) {
                    alt209=1;
                }
                else if ( (true) ) {
                    alt209=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 209, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA209_0==PARAMS) && (synpred23_CSharp4())) {
                alt209=1;
            }
            else if ( (LA209_0==BOOL||LA209_0==BYTE||LA209_0==CHAR||LA209_0==DECIMAL||LA209_0==DOUBLE||LA209_0==FLOAT||LA209_0==IDENTIFIER||LA209_0==INT||LA209_0==LONG||LA209_0==OBJECT||LA209_0==OUT||LA209_0==REF||LA209_0==SBYTE||LA209_0==SHORT||LA209_0==STRING||LA209_0==THIS||(LA209_0 >= UINT && LA209_0 <= ULONG)||LA209_0==USHORT||LA209_0==VOID) ) {
                alt209=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;

            }
            switch (alt209) {
                case 1 :
                    // CSharp4.g:1430:5: ( ( attributes )? PARAMS )=> parameter_array
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_parameter_array_in_formal_parameter_list6224);
                    parameter_array949=parameter_array();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_array949.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1431:5: fixed_parameters ( ( COMMA parameter_array )=> COMMA parameter_array )?
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_fixed_parameters_in_formal_parameter_list6230);
                    fixed_parameters950=fixed_parameters();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_parameters950.getTree());

                    // CSharp4.g:1431:22: ( ( COMMA parameter_array )=> COMMA parameter_array )?
                    int alt208=2;
                    int LA208_0 = input.LA(1);

                    if ( (LA208_0==COMMA) && (synpred24_CSharp4())) {
                        alt208=1;
                    }
                    switch (alt208) {
                        case 1 :
                            // CSharp4.g:1431:24: ( COMMA parameter_array )=> COMMA parameter_array
                            {
                            COMMA951=(Token)match(input,COMMA,FOLLOW_COMMA_in_formal_parameter_list6242); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA951_tree = 
                            (Object)adaptor.create(COMMA951)
                            ;
                            adaptor.addChild(root_0, COMMA951_tree);
                            }

                            pushFollow(FOLLOW_parameter_array_in_formal_parameter_list6244);
                            parameter_array952=parameter_array();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_array952.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "formal_parameter_list"


    public static class fixed_parameters_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "fixed_parameters"
    // CSharp4.g:1433:1: fixed_parameters : fixed_parameter ( ( COMMA fixed_parameter )=> COMMA fixed_parameter )* ;
    public final CSharp4.fixed_parameters_return fixed_parameters() throws RecognitionException {
        CSharp4.fixed_parameters_return retval = new CSharp4.fixed_parameters_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA954=null;
        CSharp4.fixed_parameter_return fixed_parameter953 =null;

        CSharp4.fixed_parameter_return fixed_parameter955 =null;


        Object COMMA954_tree=null;

        try {
            // CSharp4.g:1434:2: ( fixed_parameter ( ( COMMA fixed_parameter )=> COMMA fixed_parameter )* )
            // CSharp4.g:1434:4: fixed_parameter ( ( COMMA fixed_parameter )=> COMMA fixed_parameter )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_fixed_parameter_in_fixed_parameters6258);
            fixed_parameter953=fixed_parameter();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_parameter953.getTree());

            // CSharp4.g:1434:20: ( ( COMMA fixed_parameter )=> COMMA fixed_parameter )*
            loop210:
            do {
                int alt210=2;
                int LA210_0 = input.LA(1);

                if ( (LA210_0==COMMA) ) {
                    int LA210_1 = input.LA(2);

                    if ( (synpred25_CSharp4()) ) {
                        alt210=1;
                    }


                }


                switch (alt210) {
            	case 1 :
            	    // CSharp4.g:1434:22: ( COMMA fixed_parameter )=> COMMA fixed_parameter
            	    {
            	    COMMA954=(Token)match(input,COMMA,FOLLOW_COMMA_in_fixed_parameters6270); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA954_tree = 
            	    (Object)adaptor.create(COMMA954)
            	    ;
            	    adaptor.addChild(root_0, COMMA954_tree);
            	    }

            	    pushFollow(FOLLOW_fixed_parameter_in_fixed_parameters6272);
            	    fixed_parameter955=fixed_parameter();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_parameter955.getTree());

            	    }
            	    break;

            	default :
            	    break loop210;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "fixed_parameters"


    public static class fixed_parameter_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "fixed_parameter"
    // CSharp4.g:1442:1: fixed_parameter : ( ( attributes )? ( parameter_modifier )? type IDENTIFIER ( default_argument )? | arglist );
    public final CSharp4.fixed_parameter_return fixed_parameter() throws RecognitionException {
        CSharp4.fixed_parameter_return retval = new CSharp4.fixed_parameter_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER959=null;
        CSharp4.attributes_return attributes956 =null;

        CSharp4.parameter_modifier_return parameter_modifier957 =null;

        CSharp4.type_return type958 =null;

        CSharp4.default_argument_return default_argument960 =null;

        CSharp4.arglist_return arglist961 =null;


        Object IDENTIFIER959_tree=null;

        try {
            // CSharp4.g:1443:3: ( ( attributes )? ( parameter_modifier )? type IDENTIFIER ( default_argument )? | arglist )
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==BOOL||LA214_0==BYTE||LA214_0==CHAR||LA214_0==DECIMAL||LA214_0==DOUBLE||LA214_0==FLOAT||LA214_0==INT||LA214_0==LONG||LA214_0==OBJECT||LA214_0==OPEN_BRACKET||LA214_0==OUT||LA214_0==REF||LA214_0==SBYTE||LA214_0==SHORT||LA214_0==STRING||LA214_0==THIS||(LA214_0 >= UINT && LA214_0 <= ULONG)||LA214_0==USHORT||LA214_0==VOID) ) {
                alt214=1;
            }
            else if ( (LA214_0==IDENTIFIER) ) {
                int LA214_2 = input.LA(2);

                if ( (LA214_2==DOT||LA214_2==DOUBLE_COLON||LA214_2==IDENTIFIER||LA214_2==INTERR||LA214_2==LT||LA214_2==OPEN_BRACKET||LA214_2==STAR) ) {
                    alt214=1;
                }
                else if ( (LA214_2==EOF||(LA214_2 >= CLOSE_BRACKET && LA214_2 <= CLOSE_PARENS)||LA214_2==COMMA) ) {
                    alt214=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 214, 2, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 214, 0, input);

                throw nvae;

            }
            switch (alt214) {
                case 1 :
                    // CSharp4.g:1443:5: ( attributes )? ( parameter_modifier )? type IDENTIFIER ( default_argument )?
                    {
                    root_0 = (Object)adaptor.nil();


                    // CSharp4.g:1443:5: ( attributes )?
                    int alt211=2;
                    int LA211_0 = input.LA(1);

                    if ( (LA211_0==OPEN_BRACKET) ) {
                        alt211=1;
                    }
                    switch (alt211) {
                        case 1 :
                            // CSharp4.g:1443:5: attributes
                            {
                            pushFollow(FOLLOW_attributes_in_fixed_parameter6289);
                            attributes956=attributes();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes956.getTree());

                            }
                            break;

                    }


                    // CSharp4.g:1443:17: ( parameter_modifier )?
                    int alt212=2;
                    int LA212_0 = input.LA(1);

                    if ( (LA212_0==OUT||LA212_0==REF||LA212_0==THIS) ) {
                        alt212=1;
                    }
                    switch (alt212) {
                        case 1 :
                            // CSharp4.g:1443:17: parameter_modifier
                            {
                            pushFollow(FOLLOW_parameter_modifier_in_fixed_parameter6292);
                            parameter_modifier957=parameter_modifier();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_modifier957.getTree());

                            }
                            break;

                    }


                    pushFollow(FOLLOW_type_in_fixed_parameter6295);
                    type958=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type958.getTree());

                    IDENTIFIER959=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_fixed_parameter6297); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER959_tree = 
                    (Object)adaptor.create(IDENTIFIER959)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER959_tree);
                    }

                    // CSharp4.g:1443:53: ( default_argument )?
                    int alt213=2;
                    int LA213_0 = input.LA(1);

                    if ( (LA213_0==ASSIGNMENT) ) {
                        alt213=1;
                    }
                    switch (alt213) {
                        case 1 :
                            // CSharp4.g:1443:53: default_argument
                            {
                            pushFollow(FOLLOW_default_argument_in_fixed_parameter6299);
                            default_argument960=default_argument();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, default_argument960.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // CSharp4.g:1444:5: arglist
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_arglist_in_fixed_parameter6306);
                    arglist961=arglist();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, arglist961.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "fixed_parameter"


    public static class default_argument_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "default_argument"
    // CSharp4.g:1446:1: default_argument : ASSIGNMENT expression ;
    public final CSharp4.default_argument_return default_argument() throws RecognitionException {
        CSharp4.default_argument_return retval = new CSharp4.default_argument_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token ASSIGNMENT962=null;
        CSharp4.expression_return expression963 =null;


        Object ASSIGNMENT962_tree=null;

        try {
            // CSharp4.g:1447:2: ( ASSIGNMENT expression )
            // CSharp4.g:1447:4: ASSIGNMENT expression
            {
            root_0 = (Object)adaptor.nil();


            ASSIGNMENT962=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_default_argument6318); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGNMENT962_tree = 
            (Object)adaptor.create(ASSIGNMENT962)
            ;
            adaptor.addChild(root_0, ASSIGNMENT962_tree);
            }

            pushFollow(FOLLOW_expression_in_default_argument6320);
            expression963=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression963.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "default_argument"


    public static class parameter_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "parameter_modifier"
    // CSharp4.g:1449:1: parameter_modifier : ( REF | OUT | THIS );
    public final CSharp4.parameter_modifier_return parameter_modifier() throws RecognitionException {
        CSharp4.parameter_modifier_return retval = new CSharp4.parameter_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set964=null;

        Object set964_tree=null;

        try {
            // CSharp4.g:1450:2: ( REF | OUT | THIS )
            // CSharp4.g:
            {
            root_0 = (Object)adaptor.nil();


            set964=(Token)input.LT(1);

            if ( input.LA(1)==OUT||input.LA(1)==REF||input.LA(1)==THIS ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set964)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "parameter_modifier"


    public static class parameter_array_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "parameter_array"
    // CSharp4.g:1454:1: parameter_array : ( attributes )? PARAMS array_type IDENTIFIER ;
    public final CSharp4.parameter_array_return parameter_array() throws RecognitionException {
        CSharp4.parameter_array_return retval = new CSharp4.parameter_array_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token PARAMS966=null;
        Token IDENTIFIER968=null;
        CSharp4.attributes_return attributes965 =null;

        CSharp4.array_type_return array_type967 =null;


        Object PARAMS966_tree=null;
        Object IDENTIFIER968_tree=null;

        try {
            // CSharp4.g:1455:2: ( ( attributes )? PARAMS array_type IDENTIFIER )
            // CSharp4.g:1455:4: ( attributes )? PARAMS array_type IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1455:4: ( attributes )?
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==OPEN_BRACKET) ) {
                alt215=1;
            }
            switch (alt215) {
                case 1 :
                    // CSharp4.g:1455:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_parameter_array6352);
                    attributes965=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes965.getTree());

                    }
                    break;

            }


            PARAMS966=(Token)match(input,PARAMS,FOLLOW_PARAMS_in_parameter_array6355); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            PARAMS966_tree = 
            (Object)adaptor.create(PARAMS966)
            ;
            adaptor.addChild(root_0, PARAMS966_tree);
            }

            pushFollow(FOLLOW_array_type_in_parameter_array6357);
            array_type967=array_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, array_type967.getTree());

            IDENTIFIER968=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parameter_array6359); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER968_tree = 
            (Object)adaptor.create(IDENTIFIER968)
            ;
            adaptor.addChild(root_0, IDENTIFIER968_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "parameter_array"


    public static class property_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "property_declaration"
    // CSharp4.g:1457:1: property_declaration : ( attributes )? ( property_modifiers )? type member_name OPEN_BRACE accessor_declarations CLOSE_BRACE ;
    public final CSharp4.property_declaration_return property_declaration() throws RecognitionException {
        CSharp4.property_declaration_return retval = new CSharp4.property_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE973=null;
        Token CLOSE_BRACE975=null;
        CSharp4.attributes_return attributes969 =null;

        CSharp4.property_modifiers_return property_modifiers970 =null;

        CSharp4.type_return type971 =null;

        CSharp4.member_name_return member_name972 =null;

        CSharp4.accessor_declarations_return accessor_declarations974 =null;


        Object OPEN_BRACE973_tree=null;
        Object CLOSE_BRACE975_tree=null;

        try {
            // CSharp4.g:1458:2: ( ( attributes )? ( property_modifiers )? type member_name OPEN_BRACE accessor_declarations CLOSE_BRACE )
            // CSharp4.g:1458:4: ( attributes )? ( property_modifiers )? type member_name OPEN_BRACE accessor_declarations CLOSE_BRACE
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1458:4: ( attributes )?
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==OPEN_BRACKET) ) {
                alt216=1;
            }
            switch (alt216) {
                case 1 :
                    // CSharp4.g:1458:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_property_declaration6370);
                    attributes969=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes969.getTree());

                    }
                    break;

            }


            // CSharp4.g:1458:16: ( property_modifiers )?
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==ABSTRACT||LA217_0==EXTERN||LA217_0==INTERNAL||LA217_0==NEW||LA217_0==OVERRIDE||(LA217_0 >= PRIVATE && LA217_0 <= PUBLIC)||LA217_0==SEALED||LA217_0==STATIC||LA217_0==UNSAFE||LA217_0==VIRTUAL) ) {
                alt217=1;
            }
            switch (alt217) {
                case 1 :
                    // CSharp4.g:1458:16: property_modifiers
                    {
                    pushFollow(FOLLOW_property_modifiers_in_property_declaration6373);
                    property_modifiers970=property_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_modifiers970.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_type_in_property_declaration6376);
            type971=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type971.getTree());

            pushFollow(FOLLOW_member_name_in_property_declaration6378);
            member_name972=member_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name972.getTree());

            OPEN_BRACE973=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_property_declaration6380); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACE973_tree = 
            (Object)adaptor.create(OPEN_BRACE973)
            ;
            adaptor.addChild(root_0, OPEN_BRACE973_tree);
            }

            pushFollow(FOLLOW_accessor_declarations_in_property_declaration6382);
            accessor_declarations974=accessor_declarations();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_declarations974.getTree());

            CLOSE_BRACE975=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_property_declaration6384); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACE975_tree = 
            (Object)adaptor.create(CLOSE_BRACE975)
            ;
            adaptor.addChild(root_0, CLOSE_BRACE975_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "property_declaration"


    public static class property_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "property_modifiers"
    // CSharp4.g:1460:1: property_modifiers : ( property_modifier )+ ;
    public final CSharp4.property_modifiers_return property_modifiers() throws RecognitionException {
        CSharp4.property_modifiers_return retval = new CSharp4.property_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.property_modifier_return property_modifier976 =null;



        try {
            // CSharp4.g:1461:2: ( ( property_modifier )+ )
            // CSharp4.g:1461:4: ( property_modifier )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1461:4: ( property_modifier )+
            int cnt218=0;
            loop218:
            do {
                int alt218=2;
                int LA218_0 = input.LA(1);

                if ( (LA218_0==ABSTRACT||LA218_0==EXTERN||LA218_0==INTERNAL||LA218_0==NEW||LA218_0==OVERRIDE||(LA218_0 >= PRIVATE && LA218_0 <= PUBLIC)||LA218_0==SEALED||LA218_0==STATIC||LA218_0==UNSAFE||LA218_0==VIRTUAL) ) {
                    alt218=1;
                }


                switch (alt218) {
            	case 1 :
            	    // CSharp4.g:1461:4: property_modifier
            	    {
            	    pushFollow(FOLLOW_property_modifier_in_property_modifiers6395);
            	    property_modifier976=property_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_modifier976.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt218 >= 1 ) break loop218;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(218, input);
                        throw eee;
                }
                cnt218++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "property_modifiers"


    public static class property_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "property_modifier"
    // CSharp4.g:1463:1: property_modifier : ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | STATIC | VIRTUAL | SEALED | OVERRIDE | ABSTRACT | EXTERN | property_modifier_unsafe );
    public final CSharp4.property_modifier_return property_modifier() throws RecognitionException {
        CSharp4.property_modifier_return retval = new CSharp4.property_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW977=null;
        Token PUBLIC978=null;
        Token PROTECTED979=null;
        Token INTERNAL980=null;
        Token PRIVATE981=null;
        Token STATIC982=null;
        Token VIRTUAL983=null;
        Token SEALED984=null;
        Token OVERRIDE985=null;
        Token ABSTRACT986=null;
        Token EXTERN987=null;
        CSharp4.property_modifier_unsafe_return property_modifier_unsafe988 =null;


        Object NEW977_tree=null;
        Object PUBLIC978_tree=null;
        Object PROTECTED979_tree=null;
        Object INTERNAL980_tree=null;
        Object PRIVATE981_tree=null;
        Object STATIC982_tree=null;
        Object VIRTUAL983_tree=null;
        Object SEALED984_tree=null;
        Object OVERRIDE985_tree=null;
        Object ABSTRACT986_tree=null;
        Object EXTERN987_tree=null;

        try {
            // CSharp4.g:1464:2: ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | STATIC | VIRTUAL | SEALED | OVERRIDE | ABSTRACT | EXTERN | property_modifier_unsafe )
            int alt219=12;
            switch ( input.LA(1) ) {
            case NEW:
                {
                alt219=1;
                }
                break;
            case PUBLIC:
                {
                alt219=2;
                }
                break;
            case PROTECTED:
                {
                alt219=3;
                }
                break;
            case INTERNAL:
                {
                alt219=4;
                }
                break;
            case PRIVATE:
                {
                alt219=5;
                }
                break;
            case STATIC:
                {
                alt219=6;
                }
                break;
            case VIRTUAL:
                {
                alt219=7;
                }
                break;
            case SEALED:
                {
                alt219=8;
                }
                break;
            case OVERRIDE:
                {
                alt219=9;
                }
                break;
            case ABSTRACT:
                {
                alt219=10;
                }
                break;
            case EXTERN:
                {
                alt219=11;
                }
                break;
            case UNSAFE:
                {
                alt219=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 219, 0, input);

                throw nvae;

            }

            switch (alt219) {
                case 1 :
                    // CSharp4.g:1464:4: NEW
                    {
                    root_0 = (Object)adaptor.nil();


                    NEW977=(Token)match(input,NEW,FOLLOW_NEW_in_property_modifier6407); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW977_tree = 
                    (Object)adaptor.create(NEW977)
                    ;
                    adaptor.addChild(root_0, NEW977_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1465:4: PUBLIC
                    {
                    root_0 = (Object)adaptor.nil();


                    PUBLIC978=(Token)match(input,PUBLIC,FOLLOW_PUBLIC_in_property_modifier6412); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PUBLIC978_tree = 
                    (Object)adaptor.create(PUBLIC978)
                    ;
                    adaptor.addChild(root_0, PUBLIC978_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1466:4: PROTECTED
                    {
                    root_0 = (Object)adaptor.nil();


                    PROTECTED979=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_property_modifier6417); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED979_tree = 
                    (Object)adaptor.create(PROTECTED979)
                    ;
                    adaptor.addChild(root_0, PROTECTED979_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1467:4: INTERNAL
                    {
                    root_0 = (Object)adaptor.nil();


                    INTERNAL980=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_property_modifier6422); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL980_tree = 
                    (Object)adaptor.create(INTERNAL980)
                    ;
                    adaptor.addChild(root_0, INTERNAL980_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1468:4: PRIVATE
                    {
                    root_0 = (Object)adaptor.nil();


                    PRIVATE981=(Token)match(input,PRIVATE,FOLLOW_PRIVATE_in_property_modifier6427); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PRIVATE981_tree = 
                    (Object)adaptor.create(PRIVATE981)
                    ;
                    adaptor.addChild(root_0, PRIVATE981_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:1469:4: STATIC
                    {
                    root_0 = (Object)adaptor.nil();


                    STATIC982=(Token)match(input,STATIC,FOLLOW_STATIC_in_property_modifier6432); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC982_tree = 
                    (Object)adaptor.create(STATIC982)
                    ;
                    adaptor.addChild(root_0, STATIC982_tree);
                    }

                    }
                    break;
                case 7 :
                    // CSharp4.g:1470:4: VIRTUAL
                    {
                    root_0 = (Object)adaptor.nil();


                    VIRTUAL983=(Token)match(input,VIRTUAL,FOLLOW_VIRTUAL_in_property_modifier6437); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VIRTUAL983_tree = 
                    (Object)adaptor.create(VIRTUAL983)
                    ;
                    adaptor.addChild(root_0, VIRTUAL983_tree);
                    }

                    }
                    break;
                case 8 :
                    // CSharp4.g:1471:4: SEALED
                    {
                    root_0 = (Object)adaptor.nil();


                    SEALED984=(Token)match(input,SEALED,FOLLOW_SEALED_in_property_modifier6442); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEALED984_tree = 
                    (Object)adaptor.create(SEALED984)
                    ;
                    adaptor.addChild(root_0, SEALED984_tree);
                    }

                    }
                    break;
                case 9 :
                    // CSharp4.g:1472:4: OVERRIDE
                    {
                    root_0 = (Object)adaptor.nil();


                    OVERRIDE985=(Token)match(input,OVERRIDE,FOLLOW_OVERRIDE_in_property_modifier6447); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OVERRIDE985_tree = 
                    (Object)adaptor.create(OVERRIDE985)
                    ;
                    adaptor.addChild(root_0, OVERRIDE985_tree);
                    }

                    }
                    break;
                case 10 :
                    // CSharp4.g:1473:4: ABSTRACT
                    {
                    root_0 = (Object)adaptor.nil();


                    ABSTRACT986=(Token)match(input,ABSTRACT,FOLLOW_ABSTRACT_in_property_modifier6452); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ABSTRACT986_tree = 
                    (Object)adaptor.create(ABSTRACT986)
                    ;
                    adaptor.addChild(root_0, ABSTRACT986_tree);
                    }

                    }
                    break;
                case 11 :
                    // CSharp4.g:1474:4: EXTERN
                    {
                    root_0 = (Object)adaptor.nil();


                    EXTERN987=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_property_modifier6457); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN987_tree = 
                    (Object)adaptor.create(EXTERN987)
                    ;
                    adaptor.addChild(root_0, EXTERN987_tree);
                    }

                    }
                    break;
                case 12 :
                    // CSharp4.g:1475:4: property_modifier_unsafe
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_property_modifier_unsafe_in_property_modifier6462);
                    property_modifier_unsafe988=property_modifier_unsafe();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_modifier_unsafe988.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "property_modifier"


    public static class accessor_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "accessor_declarations"
    // CSharp4.g:1483:1: accessor_declarations : (attrs= attributes )? (mods= accessor_modifier )? ( get_contextual_keyword accessor_body ( set_accessor_declaration )? | set_contextual_keyword accessor_body ( get_accessor_declaration )? ) ;
    public final CSharp4.accessor_declarations_return accessor_declarations() throws RecognitionException {
        CSharp4.accessor_declarations_return retval = new CSharp4.accessor_declarations_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.attributes_return attrs =null;

        CSharp4.accessor_modifier_return mods =null;

        CSharp4.get_contextual_keyword_return get_contextual_keyword989 =null;

        CSharp4.accessor_body_return accessor_body990 =null;

        CSharp4.set_accessor_declaration_return set_accessor_declaration991 =null;

        CSharp4.set_contextual_keyword_return set_contextual_keyword992 =null;

        CSharp4.accessor_body_return accessor_body993 =null;

        CSharp4.get_accessor_declaration_return get_accessor_declaration994 =null;



        try {
            // CSharp4.g:1484:3: ( (attrs= attributes )? (mods= accessor_modifier )? ( get_contextual_keyword accessor_body ( set_accessor_declaration )? | set_contextual_keyword accessor_body ( get_accessor_declaration )? ) )
            // CSharp4.g:1484:5: (attrs= attributes )? (mods= accessor_modifier )? ( get_contextual_keyword accessor_body ( set_accessor_declaration )? | set_contextual_keyword accessor_body ( get_accessor_declaration )? )
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1484:10: (attrs= attributes )?
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( (LA220_0==OPEN_BRACKET) ) {
                alt220=1;
            }
            switch (alt220) {
                case 1 :
                    // CSharp4.g:1484:10: attrs= attributes
                    {
                    pushFollow(FOLLOW_attributes_in_accessor_declarations6478);
                    attrs=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attrs.getTree());

                    }
                    break;

            }


            // CSharp4.g:1485:9: (mods= accessor_modifier )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==INTERNAL||(LA221_0 >= PRIVATE && LA221_0 <= PROTECTED)) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // CSharp4.g:1485:9: mods= accessor_modifier
                    {
                    pushFollow(FOLLOW_accessor_modifier_in_accessor_declarations6487);
                    mods=accessor_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, mods.getTree());

                    }
                    break;

            }


            // CSharp4.g:1486:5: ( get_contextual_keyword accessor_body ( set_accessor_declaration )? | set_contextual_keyword accessor_body ( get_accessor_declaration )? )
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==IDENTIFIER) ) {
                int LA224_1 = input.LA(2);

                if ( ((input.LT(1).getText().equals("get"))) ) {
                    alt224=1;
                }
                else if ( ((input.LT(1).getText().equals("set"))) ) {
                    alt224=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 224, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 224, 0, input);

                throw nvae;

            }
            switch (alt224) {
                case 1 :
                    // CSharp4.g:1486:7: get_contextual_keyword accessor_body ( set_accessor_declaration )?
                    {
                    pushFollow(FOLLOW_get_contextual_keyword_in_accessor_declarations6497);
                    get_contextual_keyword989=get_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, get_contextual_keyword989.getTree());

                    pushFollow(FOLLOW_accessor_body_in_accessor_declarations6499);
                    accessor_body990=accessor_body();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_body990.getTree());

                    // CSharp4.g:1486:44: ( set_accessor_declaration )?
                    int alt222=2;
                    int LA222_0 = input.LA(1);

                    if ( (LA222_0==IDENTIFIER||LA222_0==INTERNAL||LA222_0==OPEN_BRACKET||(LA222_0 >= PRIVATE && LA222_0 <= PROTECTED)) ) {
                        alt222=1;
                    }
                    switch (alt222) {
                        case 1 :
                            // CSharp4.g:1486:44: set_accessor_declaration
                            {
                            pushFollow(FOLLOW_set_accessor_declaration_in_accessor_declarations6501);
                            set_accessor_declaration991=set_accessor_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, set_accessor_declaration991.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // CSharp4.g:1487:7: set_contextual_keyword accessor_body ( get_accessor_declaration )?
                    {
                    pushFollow(FOLLOW_set_contextual_keyword_in_accessor_declarations6510);
                    set_contextual_keyword992=set_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, set_contextual_keyword992.getTree());

                    pushFollow(FOLLOW_accessor_body_in_accessor_declarations6512);
                    accessor_body993=accessor_body();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_body993.getTree());

                    // CSharp4.g:1487:44: ( get_accessor_declaration )?
                    int alt223=2;
                    int LA223_0 = input.LA(1);

                    if ( (LA223_0==IDENTIFIER||LA223_0==INTERNAL||LA223_0==OPEN_BRACKET||(LA223_0 >= PRIVATE && LA223_0 <= PROTECTED)) ) {
                        alt223=1;
                    }
                    switch (alt223) {
                        case 1 :
                            // CSharp4.g:1487:44: get_accessor_declaration
                            {
                            pushFollow(FOLLOW_get_accessor_declaration_in_accessor_declarations6514);
                            get_accessor_declaration994=get_accessor_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, get_accessor_declaration994.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "accessor_declarations"


    public static class get_accessor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "get_accessor_declaration"
    // CSharp4.g:1490:1: get_accessor_declaration : ( attributes )? ( accessor_modifier )? get_contextual_keyword accessor_body ;
    public final CSharp4.get_accessor_declaration_return get_accessor_declaration() throws RecognitionException {
        CSharp4.get_accessor_declaration_return retval = new CSharp4.get_accessor_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.attributes_return attributes995 =null;

        CSharp4.accessor_modifier_return accessor_modifier996 =null;

        CSharp4.get_contextual_keyword_return get_contextual_keyword997 =null;

        CSharp4.accessor_body_return accessor_body998 =null;



        try {
            // CSharp4.g:1491:2: ( ( attributes )? ( accessor_modifier )? get_contextual_keyword accessor_body )
            // CSharp4.g:1491:4: ( attributes )? ( accessor_modifier )? get_contextual_keyword accessor_body
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1491:4: ( attributes )?
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==OPEN_BRACKET) ) {
                alt225=1;
            }
            switch (alt225) {
                case 1 :
                    // CSharp4.g:1491:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_get_accessor_declaration6533);
                    attributes995=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes995.getTree());

                    }
                    break;

            }


            // CSharp4.g:1491:16: ( accessor_modifier )?
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==INTERNAL||(LA226_0 >= PRIVATE && LA226_0 <= PROTECTED)) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    // CSharp4.g:1491:16: accessor_modifier
                    {
                    pushFollow(FOLLOW_accessor_modifier_in_get_accessor_declaration6536);
                    accessor_modifier996=accessor_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_modifier996.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_get_contextual_keyword_in_get_accessor_declaration6539);
            get_contextual_keyword997=get_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, get_contextual_keyword997.getTree());

            pushFollow(FOLLOW_accessor_body_in_get_accessor_declaration6541);
            accessor_body998=accessor_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_body998.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "get_accessor_declaration"


    public static class set_accessor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "set_accessor_declaration"
    // CSharp4.g:1493:1: set_accessor_declaration : ( attributes )? ( accessor_modifier )? set_contextual_keyword accessor_body ;
    public final CSharp4.set_accessor_declaration_return set_accessor_declaration() throws RecognitionException {
        CSharp4.set_accessor_declaration_return retval = new CSharp4.set_accessor_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.attributes_return attributes999 =null;

        CSharp4.accessor_modifier_return accessor_modifier1000 =null;

        CSharp4.set_contextual_keyword_return set_contextual_keyword1001 =null;

        CSharp4.accessor_body_return accessor_body1002 =null;



        try {
            // CSharp4.g:1494:2: ( ( attributes )? ( accessor_modifier )? set_contextual_keyword accessor_body )
            // CSharp4.g:1494:4: ( attributes )? ( accessor_modifier )? set_contextual_keyword accessor_body
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1494:4: ( attributes )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==OPEN_BRACKET) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // CSharp4.g:1494:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_set_accessor_declaration6552);
                    attributes999=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes999.getTree());

                    }
                    break;

            }


            // CSharp4.g:1494:16: ( accessor_modifier )?
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==INTERNAL||(LA228_0 >= PRIVATE && LA228_0 <= PROTECTED)) ) {
                alt228=1;
            }
            switch (alt228) {
                case 1 :
                    // CSharp4.g:1494:16: accessor_modifier
                    {
                    pushFollow(FOLLOW_accessor_modifier_in_set_accessor_declaration6555);
                    accessor_modifier1000=accessor_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_modifier1000.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_set_contextual_keyword_in_set_accessor_declaration6558);
            set_contextual_keyword1001=set_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, set_contextual_keyword1001.getTree());

            pushFollow(FOLLOW_accessor_body_in_set_accessor_declaration6560);
            accessor_body1002=accessor_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_body1002.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "set_accessor_declaration"


    public static class accessor_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "accessor_modifier"
    // CSharp4.g:1496:1: accessor_modifier : ( PROTECTED | INTERNAL | PRIVATE | PROTECTED INTERNAL | INTERNAL PROTECTED );
    public final CSharp4.accessor_modifier_return accessor_modifier() throws RecognitionException {
        CSharp4.accessor_modifier_return retval = new CSharp4.accessor_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token PROTECTED1003=null;
        Token INTERNAL1004=null;
        Token PRIVATE1005=null;
        Token PROTECTED1006=null;
        Token INTERNAL1007=null;
        Token INTERNAL1008=null;
        Token PROTECTED1009=null;

        Object PROTECTED1003_tree=null;
        Object INTERNAL1004_tree=null;
        Object PRIVATE1005_tree=null;
        Object PROTECTED1006_tree=null;
        Object INTERNAL1007_tree=null;
        Object INTERNAL1008_tree=null;
        Object PROTECTED1009_tree=null;

        try {
            // CSharp4.g:1497:2: ( PROTECTED | INTERNAL | PRIVATE | PROTECTED INTERNAL | INTERNAL PROTECTED )
            int alt229=5;
            switch ( input.LA(1) ) {
            case PROTECTED:
                {
                int LA229_1 = input.LA(2);

                if ( (LA229_1==INTERNAL) ) {
                    alt229=4;
                }
                else if ( (LA229_1==IDENTIFIER) ) {
                    alt229=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 229, 1, input);

                    throw nvae;

                }
                }
                break;
            case INTERNAL:
                {
                int LA229_2 = input.LA(2);

                if ( (LA229_2==PROTECTED) ) {
                    alt229=5;
                }
                else if ( (LA229_2==IDENTIFIER) ) {
                    alt229=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 229, 2, input);

                    throw nvae;

                }
                }
                break;
            case PRIVATE:
                {
                alt229=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;

            }

            switch (alt229) {
                case 1 :
                    // CSharp4.g:1497:4: PROTECTED
                    {
                    root_0 = (Object)adaptor.nil();


                    PROTECTED1003=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_accessor_modifier6571); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED1003_tree = 
                    (Object)adaptor.create(PROTECTED1003)
                    ;
                    adaptor.addChild(root_0, PROTECTED1003_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1498:4: INTERNAL
                    {
                    root_0 = (Object)adaptor.nil();


                    INTERNAL1004=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_accessor_modifier6576); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL1004_tree = 
                    (Object)adaptor.create(INTERNAL1004)
                    ;
                    adaptor.addChild(root_0, INTERNAL1004_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1499:4: PRIVATE
                    {
                    root_0 = (Object)adaptor.nil();


                    PRIVATE1005=(Token)match(input,PRIVATE,FOLLOW_PRIVATE_in_accessor_modifier6581); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PRIVATE1005_tree = 
                    (Object)adaptor.create(PRIVATE1005)
                    ;
                    adaptor.addChild(root_0, PRIVATE1005_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1500:4: PROTECTED INTERNAL
                    {
                    root_0 = (Object)adaptor.nil();


                    PROTECTED1006=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_accessor_modifier6586); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED1006_tree = 
                    (Object)adaptor.create(PROTECTED1006)
                    ;
                    adaptor.addChild(root_0, PROTECTED1006_tree);
                    }

                    INTERNAL1007=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_accessor_modifier6588); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL1007_tree = 
                    (Object)adaptor.create(INTERNAL1007)
                    ;
                    adaptor.addChild(root_0, INTERNAL1007_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1501:4: INTERNAL PROTECTED
                    {
                    root_0 = (Object)adaptor.nil();


                    INTERNAL1008=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_accessor_modifier6593); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL1008_tree = 
                    (Object)adaptor.create(INTERNAL1008)
                    ;
                    adaptor.addChild(root_0, INTERNAL1008_tree);
                    }

                    PROTECTED1009=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_accessor_modifier6595); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED1009_tree = 
                    (Object)adaptor.create(PROTECTED1009)
                    ;
                    adaptor.addChild(root_0, PROTECTED1009_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "accessor_modifier"


    public static class accessor_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "accessor_body"
    // CSharp4.g:1503:1: accessor_body : ( block | SEMICOLON );
    public final CSharp4.accessor_body_return accessor_body() throws RecognitionException {
        CSharp4.accessor_body_return retval = new CSharp4.accessor_body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SEMICOLON1011=null;
        CSharp4.block_return block1010 =null;


        Object SEMICOLON1011_tree=null;

        try {
            // CSharp4.g:1504:2: ( block | SEMICOLON )
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==OPEN_BRACE) ) {
                alt230=1;
            }
            else if ( (LA230_0==SEMICOLON) ) {
                alt230=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 230, 0, input);

                throw nvae;

            }
            switch (alt230) {
                case 1 :
                    // CSharp4.g:1504:4: block
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_block_in_accessor_body6606);
                    block1010=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block1010.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1505:4: SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    SEMICOLON1011=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_accessor_body6611); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1011_tree = 
                    (Object)adaptor.create(SEMICOLON1011)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1011_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "accessor_body"


    public static class event_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "event_declaration"
    // CSharp4.g:1513:1: event_declaration : ( attributes )? ( event_modifiers )? EVENT type ( variable_declarators SEMICOLON | member_name OPEN_BRACE event_accessor_declarations CLOSE_BRACE ) ;
    public final CSharp4.event_declaration_return event_declaration() throws RecognitionException {
        CSharp4.event_declaration_return retval = new CSharp4.event_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token EVENT1014=null;
        Token SEMICOLON1017=null;
        Token OPEN_BRACE1019=null;
        Token CLOSE_BRACE1021=null;
        CSharp4.attributes_return attributes1012 =null;

        CSharp4.event_modifiers_return event_modifiers1013 =null;

        CSharp4.type_return type1015 =null;

        CSharp4.variable_declarators_return variable_declarators1016 =null;

        CSharp4.member_name_return member_name1018 =null;

        CSharp4.event_accessor_declarations_return event_accessor_declarations1020 =null;


        Object EVENT1014_tree=null;
        Object SEMICOLON1017_tree=null;
        Object OPEN_BRACE1019_tree=null;
        Object CLOSE_BRACE1021_tree=null;

        try {
            // CSharp4.g:1514:3: ( ( attributes )? ( event_modifiers )? EVENT type ( variable_declarators SEMICOLON | member_name OPEN_BRACE event_accessor_declarations CLOSE_BRACE ) )
            // CSharp4.g:1514:5: ( attributes )? ( event_modifiers )? EVENT type ( variable_declarators SEMICOLON | member_name OPEN_BRACE event_accessor_declarations CLOSE_BRACE )
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1514:5: ( attributes )?
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==OPEN_BRACKET) ) {
                alt231=1;
            }
            switch (alt231) {
                case 1 :
                    // CSharp4.g:1514:5: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_event_declaration6625);
                    attributes1012=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1012.getTree());

                    }
                    break;

            }


            // CSharp4.g:1514:17: ( event_modifiers )?
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==ABSTRACT||LA232_0==EXTERN||LA232_0==INTERNAL||LA232_0==NEW||LA232_0==OVERRIDE||(LA232_0 >= PRIVATE && LA232_0 <= PUBLIC)||LA232_0==SEALED||LA232_0==STATIC||LA232_0==UNSAFE||LA232_0==VIRTUAL) ) {
                alt232=1;
            }
            switch (alt232) {
                case 1 :
                    // CSharp4.g:1514:17: event_modifiers
                    {
                    pushFollow(FOLLOW_event_modifiers_in_event_declaration6628);
                    event_modifiers1013=event_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, event_modifiers1013.getTree());

                    }
                    break;

            }


            EVENT1014=(Token)match(input,EVENT,FOLLOW_EVENT_in_event_declaration6631); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            EVENT1014_tree = 
            (Object)adaptor.create(EVENT1014)
            ;
            adaptor.addChild(root_0, EVENT1014_tree);
            }

            pushFollow(FOLLOW_type_in_event_declaration6633);
            type1015=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1015.getTree());

            // CSharp4.g:1515:5: ( variable_declarators SEMICOLON | member_name OPEN_BRACE event_accessor_declarations CLOSE_BRACE )
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==IDENTIFIER) ) {
                int LA233_1 = input.LA(2);

                if ( (LA233_1==ASSIGNMENT||LA233_1==COMMA||LA233_1==SEMICOLON) ) {
                    alt233=1;
                }
                else if ( (LA233_1==DOT||LA233_1==DOUBLE_COLON||LA233_1==LT||LA233_1==OPEN_BRACE) ) {
                    alt233=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 233, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 233, 0, input);

                throw nvae;

            }
            switch (alt233) {
                case 1 :
                    // CSharp4.g:1515:7: variable_declarators SEMICOLON
                    {
                    pushFollow(FOLLOW_variable_declarators_in_event_declaration6641);
                    variable_declarators1016=variable_declarators();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarators1016.getTree());

                    SEMICOLON1017=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_event_declaration6643); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1017_tree = 
                    (Object)adaptor.create(SEMICOLON1017)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1017_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1516:7: member_name OPEN_BRACE event_accessor_declarations CLOSE_BRACE
                    {
                    pushFollow(FOLLOW_member_name_in_event_declaration6651);
                    member_name1018=member_name();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name1018.getTree());

                    OPEN_BRACE1019=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_event_declaration6653); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACE1019_tree = 
                    (Object)adaptor.create(OPEN_BRACE1019)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACE1019_tree);
                    }

                    pushFollow(FOLLOW_event_accessor_declarations_in_event_declaration6655);
                    event_accessor_declarations1020=event_accessor_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, event_accessor_declarations1020.getTree());

                    CLOSE_BRACE1021=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_event_declaration6657); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACE1021_tree = 
                    (Object)adaptor.create(CLOSE_BRACE1021)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACE1021_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "event_declaration"


    public static class event_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "event_modifiers"
    // CSharp4.g:1519:1: event_modifiers : event_modifier ( event_modifier )* ;
    public final CSharp4.event_modifiers_return event_modifiers() throws RecognitionException {
        CSharp4.event_modifiers_return retval = new CSharp4.event_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.event_modifier_return event_modifier1022 =null;

        CSharp4.event_modifier_return event_modifier1023 =null;



        try {
            // CSharp4.g:1520:2: ( event_modifier ( event_modifier )* )
            // CSharp4.g:1520:4: event_modifier ( event_modifier )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_event_modifier_in_event_modifiers6675);
            event_modifier1022=event_modifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, event_modifier1022.getTree());

            // CSharp4.g:1520:19: ( event_modifier )*
            loop234:
            do {
                int alt234=2;
                int LA234_0 = input.LA(1);

                if ( (LA234_0==ABSTRACT||LA234_0==EXTERN||LA234_0==INTERNAL||LA234_0==NEW||LA234_0==OVERRIDE||(LA234_0 >= PRIVATE && LA234_0 <= PUBLIC)||LA234_0==SEALED||LA234_0==STATIC||LA234_0==UNSAFE||LA234_0==VIRTUAL) ) {
                    alt234=1;
                }


                switch (alt234) {
            	case 1 :
            	    // CSharp4.g:1520:21: event_modifier
            	    {
            	    pushFollow(FOLLOW_event_modifier_in_event_modifiers6679);
            	    event_modifier1023=event_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, event_modifier1023.getTree());

            	    }
            	    break;

            	default :
            	    break loop234;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "event_modifiers"


    public static class event_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "event_modifier"
    // CSharp4.g:1522:1: event_modifier : ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | STATIC | VIRTUAL | SEALED | OVERRIDE | ABSTRACT | EXTERN | event_modifier_unsafe );
    public final CSharp4.event_modifier_return event_modifier() throws RecognitionException {
        CSharp4.event_modifier_return retval = new CSharp4.event_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW1024=null;
        Token PUBLIC1025=null;
        Token PROTECTED1026=null;
        Token INTERNAL1027=null;
        Token PRIVATE1028=null;
        Token STATIC1029=null;
        Token VIRTUAL1030=null;
        Token SEALED1031=null;
        Token OVERRIDE1032=null;
        Token ABSTRACT1033=null;
        Token EXTERN1034=null;
        CSharp4.event_modifier_unsafe_return event_modifier_unsafe1035 =null;


        Object NEW1024_tree=null;
        Object PUBLIC1025_tree=null;
        Object PROTECTED1026_tree=null;
        Object INTERNAL1027_tree=null;
        Object PRIVATE1028_tree=null;
        Object STATIC1029_tree=null;
        Object VIRTUAL1030_tree=null;
        Object SEALED1031_tree=null;
        Object OVERRIDE1032_tree=null;
        Object ABSTRACT1033_tree=null;
        Object EXTERN1034_tree=null;

        try {
            // CSharp4.g:1523:2: ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | STATIC | VIRTUAL | SEALED | OVERRIDE | ABSTRACT | EXTERN | event_modifier_unsafe )
            int alt235=12;
            switch ( input.LA(1) ) {
            case NEW:
                {
                alt235=1;
                }
                break;
            case PUBLIC:
                {
                alt235=2;
                }
                break;
            case PROTECTED:
                {
                alt235=3;
                }
                break;
            case INTERNAL:
                {
                alt235=4;
                }
                break;
            case PRIVATE:
                {
                alt235=5;
                }
                break;
            case STATIC:
                {
                alt235=6;
                }
                break;
            case VIRTUAL:
                {
                alt235=7;
                }
                break;
            case SEALED:
                {
                alt235=8;
                }
                break;
            case OVERRIDE:
                {
                alt235=9;
                }
                break;
            case ABSTRACT:
                {
                alt235=10;
                }
                break;
            case EXTERN:
                {
                alt235=11;
                }
                break;
            case UNSAFE:
                {
                alt235=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 235, 0, input);

                throw nvae;

            }

            switch (alt235) {
                case 1 :
                    // CSharp4.g:1523:4: NEW
                    {
                    root_0 = (Object)adaptor.nil();


                    NEW1024=(Token)match(input,NEW,FOLLOW_NEW_in_event_modifier6693); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW1024_tree = 
                    (Object)adaptor.create(NEW1024)
                    ;
                    adaptor.addChild(root_0, NEW1024_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1524:4: PUBLIC
                    {
                    root_0 = (Object)adaptor.nil();


                    PUBLIC1025=(Token)match(input,PUBLIC,FOLLOW_PUBLIC_in_event_modifier6698); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PUBLIC1025_tree = 
                    (Object)adaptor.create(PUBLIC1025)
                    ;
                    adaptor.addChild(root_0, PUBLIC1025_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1525:4: PROTECTED
                    {
                    root_0 = (Object)adaptor.nil();


                    PROTECTED1026=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_event_modifier6703); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED1026_tree = 
                    (Object)adaptor.create(PROTECTED1026)
                    ;
                    adaptor.addChild(root_0, PROTECTED1026_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1526:4: INTERNAL
                    {
                    root_0 = (Object)adaptor.nil();


                    INTERNAL1027=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_event_modifier6708); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL1027_tree = 
                    (Object)adaptor.create(INTERNAL1027)
                    ;
                    adaptor.addChild(root_0, INTERNAL1027_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1527:4: PRIVATE
                    {
                    root_0 = (Object)adaptor.nil();


                    PRIVATE1028=(Token)match(input,PRIVATE,FOLLOW_PRIVATE_in_event_modifier6713); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PRIVATE1028_tree = 
                    (Object)adaptor.create(PRIVATE1028)
                    ;
                    adaptor.addChild(root_0, PRIVATE1028_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:1528:4: STATIC
                    {
                    root_0 = (Object)adaptor.nil();


                    STATIC1029=(Token)match(input,STATIC,FOLLOW_STATIC_in_event_modifier6718); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC1029_tree = 
                    (Object)adaptor.create(STATIC1029)
                    ;
                    adaptor.addChild(root_0, STATIC1029_tree);
                    }

                    }
                    break;
                case 7 :
                    // CSharp4.g:1529:4: VIRTUAL
                    {
                    root_0 = (Object)adaptor.nil();


                    VIRTUAL1030=(Token)match(input,VIRTUAL,FOLLOW_VIRTUAL_in_event_modifier6723); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VIRTUAL1030_tree = 
                    (Object)adaptor.create(VIRTUAL1030)
                    ;
                    adaptor.addChild(root_0, VIRTUAL1030_tree);
                    }

                    }
                    break;
                case 8 :
                    // CSharp4.g:1530:4: SEALED
                    {
                    root_0 = (Object)adaptor.nil();


                    SEALED1031=(Token)match(input,SEALED,FOLLOW_SEALED_in_event_modifier6728); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEALED1031_tree = 
                    (Object)adaptor.create(SEALED1031)
                    ;
                    adaptor.addChild(root_0, SEALED1031_tree);
                    }

                    }
                    break;
                case 9 :
                    // CSharp4.g:1531:4: OVERRIDE
                    {
                    root_0 = (Object)adaptor.nil();


                    OVERRIDE1032=(Token)match(input,OVERRIDE,FOLLOW_OVERRIDE_in_event_modifier6733); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OVERRIDE1032_tree = 
                    (Object)adaptor.create(OVERRIDE1032)
                    ;
                    adaptor.addChild(root_0, OVERRIDE1032_tree);
                    }

                    }
                    break;
                case 10 :
                    // CSharp4.g:1532:4: ABSTRACT
                    {
                    root_0 = (Object)adaptor.nil();


                    ABSTRACT1033=(Token)match(input,ABSTRACT,FOLLOW_ABSTRACT_in_event_modifier6738); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ABSTRACT1033_tree = 
                    (Object)adaptor.create(ABSTRACT1033)
                    ;
                    adaptor.addChild(root_0, ABSTRACT1033_tree);
                    }

                    }
                    break;
                case 11 :
                    // CSharp4.g:1533:4: EXTERN
                    {
                    root_0 = (Object)adaptor.nil();


                    EXTERN1034=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_event_modifier6743); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN1034_tree = 
                    (Object)adaptor.create(EXTERN1034)
                    ;
                    adaptor.addChild(root_0, EXTERN1034_tree);
                    }

                    }
                    break;
                case 12 :
                    // CSharp4.g:1534:4: event_modifier_unsafe
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_event_modifier_unsafe_in_event_modifier6748);
                    event_modifier_unsafe1035=event_modifier_unsafe();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, event_modifier_unsafe1035.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "event_modifier"


    public static class event_accessor_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "event_accessor_declarations"
    // CSharp4.g:1536:1: event_accessor_declarations : ( attributes )? ( add_contextual_keyword block remove_accessor_declaration | remove_contextual_keyword block add_accessor_declaration ) ;
    public final CSharp4.event_accessor_declarations_return event_accessor_declarations() throws RecognitionException {
        CSharp4.event_accessor_declarations_return retval = new CSharp4.event_accessor_declarations_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.attributes_return attributes1036 =null;

        CSharp4.add_contextual_keyword_return add_contextual_keyword1037 =null;

        CSharp4.block_return block1038 =null;

        CSharp4.remove_accessor_declaration_return remove_accessor_declaration1039 =null;

        CSharp4.remove_contextual_keyword_return remove_contextual_keyword1040 =null;

        CSharp4.block_return block1041 =null;

        CSharp4.add_accessor_declaration_return add_accessor_declaration1042 =null;



        try {
            // CSharp4.g:1537:2: ( ( attributes )? ( add_contextual_keyword block remove_accessor_declaration | remove_contextual_keyword block add_accessor_declaration ) )
            // CSharp4.g:1537:4: ( attributes )? ( add_contextual_keyword block remove_accessor_declaration | remove_contextual_keyword block add_accessor_declaration )
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1537:4: ( attributes )?
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( (LA236_0==OPEN_BRACKET) ) {
                alt236=1;
            }
            switch (alt236) {
                case 1 :
                    // CSharp4.g:1537:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_event_accessor_declarations6759);
                    attributes1036=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1036.getTree());

                    }
                    break;

            }


            // CSharp4.g:1538:4: ( add_contextual_keyword block remove_accessor_declaration | remove_contextual_keyword block add_accessor_declaration )
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==IDENTIFIER) ) {
                int LA237_1 = input.LA(2);

                if ( ((input.LT(1).getText().equals("add"))) ) {
                    alt237=1;
                }
                else if ( ((input.LT(1).getText().equals("remove"))) ) {
                    alt237=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 237, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 237, 0, input);

                throw nvae;

            }
            switch (alt237) {
                case 1 :
                    // CSharp4.g:1538:6: add_contextual_keyword block remove_accessor_declaration
                    {
                    pushFollow(FOLLOW_add_contextual_keyword_in_event_accessor_declarations6767);
                    add_contextual_keyword1037=add_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, add_contextual_keyword1037.getTree());

                    pushFollow(FOLLOW_block_in_event_accessor_declarations6769);
                    block1038=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block1038.getTree());

                    pushFollow(FOLLOW_remove_accessor_declaration_in_event_accessor_declarations6771);
                    remove_accessor_declaration1039=remove_accessor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, remove_accessor_declaration1039.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1539:6: remove_contextual_keyword block add_accessor_declaration
                    {
                    pushFollow(FOLLOW_remove_contextual_keyword_in_event_accessor_declarations6778);
                    remove_contextual_keyword1040=remove_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, remove_contextual_keyword1040.getTree());

                    pushFollow(FOLLOW_block_in_event_accessor_declarations6780);
                    block1041=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block1041.getTree());

                    pushFollow(FOLLOW_add_accessor_declaration_in_event_accessor_declarations6782);
                    add_accessor_declaration1042=add_accessor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, add_accessor_declaration1042.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "event_accessor_declarations"


    public static class add_accessor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "add_accessor_declaration"
    // CSharp4.g:1542:1: add_accessor_declaration : ( attributes )? add_contextual_keyword block ;
    public final CSharp4.add_accessor_declaration_return add_accessor_declaration() throws RecognitionException {
        CSharp4.add_accessor_declaration_return retval = new CSharp4.add_accessor_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.attributes_return attributes1043 =null;

        CSharp4.add_contextual_keyword_return add_contextual_keyword1044 =null;

        CSharp4.block_return block1045 =null;



        try {
            // CSharp4.g:1543:2: ( ( attributes )? add_contextual_keyword block )
            // CSharp4.g:1543:4: ( attributes )? add_contextual_keyword block
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1543:4: ( attributes )?
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==OPEN_BRACKET) ) {
                alt238=1;
            }
            switch (alt238) {
                case 1 :
                    // CSharp4.g:1543:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_add_accessor_declaration6798);
                    attributes1043=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1043.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_add_contextual_keyword_in_add_accessor_declaration6801);
            add_contextual_keyword1044=add_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, add_contextual_keyword1044.getTree());

            pushFollow(FOLLOW_block_in_add_accessor_declaration6803);
            block1045=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block1045.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "add_accessor_declaration"


    public static class remove_accessor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "remove_accessor_declaration"
    // CSharp4.g:1545:1: remove_accessor_declaration : ( attributes )? remove_contextual_keyword block ;
    public final CSharp4.remove_accessor_declaration_return remove_accessor_declaration() throws RecognitionException {
        CSharp4.remove_accessor_declaration_return retval = new CSharp4.remove_accessor_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.attributes_return attributes1046 =null;

        CSharp4.remove_contextual_keyword_return remove_contextual_keyword1047 =null;

        CSharp4.block_return block1048 =null;



        try {
            // CSharp4.g:1546:2: ( ( attributes )? remove_contextual_keyword block )
            // CSharp4.g:1546:4: ( attributes )? remove_contextual_keyword block
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1546:4: ( attributes )?
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==OPEN_BRACKET) ) {
                alt239=1;
            }
            switch (alt239) {
                case 1 :
                    // CSharp4.g:1546:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_remove_accessor_declaration6814);
                    attributes1046=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1046.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_remove_contextual_keyword_in_remove_accessor_declaration6817);
            remove_contextual_keyword1047=remove_contextual_keyword();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, remove_contextual_keyword1047.getTree());

            pushFollow(FOLLOW_block_in_remove_accessor_declaration6819);
            block1048=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block1048.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "remove_accessor_declaration"


    public static class indexer_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "indexer_declaration"
    // CSharp4.g:1548:1: indexer_declaration : ( attributes )? ( indexer_modifiers )? indexer_declarator OPEN_BRACE accessor_declarations CLOSE_BRACE ;
    public final CSharp4.indexer_declaration_return indexer_declaration() throws RecognitionException {
        CSharp4.indexer_declaration_return retval = new CSharp4.indexer_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE1052=null;
        Token CLOSE_BRACE1054=null;
        CSharp4.attributes_return attributes1049 =null;

        CSharp4.indexer_modifiers_return indexer_modifiers1050 =null;

        CSharp4.indexer_declarator_return indexer_declarator1051 =null;

        CSharp4.accessor_declarations_return accessor_declarations1053 =null;


        Object OPEN_BRACE1052_tree=null;
        Object CLOSE_BRACE1054_tree=null;

        try {
            // CSharp4.g:1549:2: ( ( attributes )? ( indexer_modifiers )? indexer_declarator OPEN_BRACE accessor_declarations CLOSE_BRACE )
            // CSharp4.g:1549:4: ( attributes )? ( indexer_modifiers )? indexer_declarator OPEN_BRACE accessor_declarations CLOSE_BRACE
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1549:4: ( attributes )?
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( (LA240_0==OPEN_BRACKET) ) {
                alt240=1;
            }
            switch (alt240) {
                case 1 :
                    // CSharp4.g:1549:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_indexer_declaration6830);
                    attributes1049=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1049.getTree());

                    }
                    break;

            }


            // CSharp4.g:1549:16: ( indexer_modifiers )?
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==ABSTRACT||LA241_0==EXTERN||LA241_0==INTERNAL||LA241_0==NEW||LA241_0==OVERRIDE||(LA241_0 >= PRIVATE && LA241_0 <= PUBLIC)||LA241_0==SEALED||LA241_0==UNSAFE||LA241_0==VIRTUAL) ) {
                alt241=1;
            }
            switch (alt241) {
                case 1 :
                    // CSharp4.g:1549:16: indexer_modifiers
                    {
                    pushFollow(FOLLOW_indexer_modifiers_in_indexer_declaration6833);
                    indexer_modifiers1050=indexer_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_modifiers1050.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_indexer_declarator_in_indexer_declaration6836);
            indexer_declarator1051=indexer_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declarator1051.getTree());

            OPEN_BRACE1052=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_indexer_declaration6838); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACE1052_tree = 
            (Object)adaptor.create(OPEN_BRACE1052)
            ;
            adaptor.addChild(root_0, OPEN_BRACE1052_tree);
            }

            pushFollow(FOLLOW_accessor_declarations_in_indexer_declaration6840);
            accessor_declarations1053=accessor_declarations();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_declarations1053.getTree());

            CLOSE_BRACE1054=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_indexer_declaration6842); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACE1054_tree = 
            (Object)adaptor.create(CLOSE_BRACE1054)
            ;
            adaptor.addChild(root_0, CLOSE_BRACE1054_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "indexer_declaration"


    public static class indexer_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "indexer_modifiers"
    // CSharp4.g:1551:1: indexer_modifiers : indexer_modifier ( indexer_modifier )* ;
    public final CSharp4.indexer_modifiers_return indexer_modifiers() throws RecognitionException {
        CSharp4.indexer_modifiers_return retval = new CSharp4.indexer_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.indexer_modifier_return indexer_modifier1055 =null;

        CSharp4.indexer_modifier_return indexer_modifier1056 =null;



        try {
            // CSharp4.g:1552:2: ( indexer_modifier ( indexer_modifier )* )
            // CSharp4.g:1552:4: indexer_modifier ( indexer_modifier )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_indexer_modifier_in_indexer_modifiers6853);
            indexer_modifier1055=indexer_modifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_modifier1055.getTree());

            // CSharp4.g:1552:21: ( indexer_modifier )*
            loop242:
            do {
                int alt242=2;
                int LA242_0 = input.LA(1);

                if ( (LA242_0==ABSTRACT||LA242_0==EXTERN||LA242_0==INTERNAL||LA242_0==NEW||LA242_0==OVERRIDE||(LA242_0 >= PRIVATE && LA242_0 <= PUBLIC)||LA242_0==SEALED||LA242_0==UNSAFE||LA242_0==VIRTUAL) ) {
                    alt242=1;
                }


                switch (alt242) {
            	case 1 :
            	    // CSharp4.g:1552:23: indexer_modifier
            	    {
            	    pushFollow(FOLLOW_indexer_modifier_in_indexer_modifiers6857);
            	    indexer_modifier1056=indexer_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_modifier1056.getTree());

            	    }
            	    break;

            	default :
            	    break loop242;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "indexer_modifiers"


    public static class indexer_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "indexer_modifier"
    // CSharp4.g:1554:1: indexer_modifier : ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | VIRTUAL | SEALED | OVERRIDE | ABSTRACT | EXTERN | indexer_modifier_unsafe );
    public final CSharp4.indexer_modifier_return indexer_modifier() throws RecognitionException {
        CSharp4.indexer_modifier_return retval = new CSharp4.indexer_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW1057=null;
        Token PUBLIC1058=null;
        Token PROTECTED1059=null;
        Token INTERNAL1060=null;
        Token PRIVATE1061=null;
        Token VIRTUAL1062=null;
        Token SEALED1063=null;
        Token OVERRIDE1064=null;
        Token ABSTRACT1065=null;
        Token EXTERN1066=null;
        CSharp4.indexer_modifier_unsafe_return indexer_modifier_unsafe1067 =null;


        Object NEW1057_tree=null;
        Object PUBLIC1058_tree=null;
        Object PROTECTED1059_tree=null;
        Object INTERNAL1060_tree=null;
        Object PRIVATE1061_tree=null;
        Object VIRTUAL1062_tree=null;
        Object SEALED1063_tree=null;
        Object OVERRIDE1064_tree=null;
        Object ABSTRACT1065_tree=null;
        Object EXTERN1066_tree=null;

        try {
            // CSharp4.g:1555:2: ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | VIRTUAL | SEALED | OVERRIDE | ABSTRACT | EXTERN | indexer_modifier_unsafe )
            int alt243=11;
            switch ( input.LA(1) ) {
            case NEW:
                {
                alt243=1;
                }
                break;
            case PUBLIC:
                {
                alt243=2;
                }
                break;
            case PROTECTED:
                {
                alt243=3;
                }
                break;
            case INTERNAL:
                {
                alt243=4;
                }
                break;
            case PRIVATE:
                {
                alt243=5;
                }
                break;
            case VIRTUAL:
                {
                alt243=6;
                }
                break;
            case SEALED:
                {
                alt243=7;
                }
                break;
            case OVERRIDE:
                {
                alt243=8;
                }
                break;
            case ABSTRACT:
                {
                alt243=9;
                }
                break;
            case EXTERN:
                {
                alt243=10;
                }
                break;
            case UNSAFE:
                {
                alt243=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 243, 0, input);

                throw nvae;

            }

            switch (alt243) {
                case 1 :
                    // CSharp4.g:1555:4: NEW
                    {
                    root_0 = (Object)adaptor.nil();


                    NEW1057=(Token)match(input,NEW,FOLLOW_NEW_in_indexer_modifier6871); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW1057_tree = 
                    (Object)adaptor.create(NEW1057)
                    ;
                    adaptor.addChild(root_0, NEW1057_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1556:4: PUBLIC
                    {
                    root_0 = (Object)adaptor.nil();


                    PUBLIC1058=(Token)match(input,PUBLIC,FOLLOW_PUBLIC_in_indexer_modifier6876); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PUBLIC1058_tree = 
                    (Object)adaptor.create(PUBLIC1058)
                    ;
                    adaptor.addChild(root_0, PUBLIC1058_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1557:4: PROTECTED
                    {
                    root_0 = (Object)adaptor.nil();


                    PROTECTED1059=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_indexer_modifier6881); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED1059_tree = 
                    (Object)adaptor.create(PROTECTED1059)
                    ;
                    adaptor.addChild(root_0, PROTECTED1059_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1558:4: INTERNAL
                    {
                    root_0 = (Object)adaptor.nil();


                    INTERNAL1060=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_indexer_modifier6886); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL1060_tree = 
                    (Object)adaptor.create(INTERNAL1060)
                    ;
                    adaptor.addChild(root_0, INTERNAL1060_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1559:4: PRIVATE
                    {
                    root_0 = (Object)adaptor.nil();


                    PRIVATE1061=(Token)match(input,PRIVATE,FOLLOW_PRIVATE_in_indexer_modifier6891); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PRIVATE1061_tree = 
                    (Object)adaptor.create(PRIVATE1061)
                    ;
                    adaptor.addChild(root_0, PRIVATE1061_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:1560:4: VIRTUAL
                    {
                    root_0 = (Object)adaptor.nil();


                    VIRTUAL1062=(Token)match(input,VIRTUAL,FOLLOW_VIRTUAL_in_indexer_modifier6896); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VIRTUAL1062_tree = 
                    (Object)adaptor.create(VIRTUAL1062)
                    ;
                    adaptor.addChild(root_0, VIRTUAL1062_tree);
                    }

                    }
                    break;
                case 7 :
                    // CSharp4.g:1561:4: SEALED
                    {
                    root_0 = (Object)adaptor.nil();


                    SEALED1063=(Token)match(input,SEALED,FOLLOW_SEALED_in_indexer_modifier6901); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEALED1063_tree = 
                    (Object)adaptor.create(SEALED1063)
                    ;
                    adaptor.addChild(root_0, SEALED1063_tree);
                    }

                    }
                    break;
                case 8 :
                    // CSharp4.g:1562:4: OVERRIDE
                    {
                    root_0 = (Object)adaptor.nil();


                    OVERRIDE1064=(Token)match(input,OVERRIDE,FOLLOW_OVERRIDE_in_indexer_modifier6906); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OVERRIDE1064_tree = 
                    (Object)adaptor.create(OVERRIDE1064)
                    ;
                    adaptor.addChild(root_0, OVERRIDE1064_tree);
                    }

                    }
                    break;
                case 9 :
                    // CSharp4.g:1563:4: ABSTRACT
                    {
                    root_0 = (Object)adaptor.nil();


                    ABSTRACT1065=(Token)match(input,ABSTRACT,FOLLOW_ABSTRACT_in_indexer_modifier6911); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ABSTRACT1065_tree = 
                    (Object)adaptor.create(ABSTRACT1065)
                    ;
                    adaptor.addChild(root_0, ABSTRACT1065_tree);
                    }

                    }
                    break;
                case 10 :
                    // CSharp4.g:1564:4: EXTERN
                    {
                    root_0 = (Object)adaptor.nil();


                    EXTERN1066=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_indexer_modifier6916); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN1066_tree = 
                    (Object)adaptor.create(EXTERN1066)
                    ;
                    adaptor.addChild(root_0, EXTERN1066_tree);
                    }

                    }
                    break;
                case 11 :
                    // CSharp4.g:1565:4: indexer_modifier_unsafe
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_indexer_modifier_unsafe_in_indexer_modifier6921);
                    indexer_modifier_unsafe1067=indexer_modifier_unsafe();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_modifier_unsafe1067.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "indexer_modifier"


    public static class indexer_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "indexer_declarator"
    // CSharp4.g:1573:1: indexer_declarator : type ( interface_type DOT )? THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET ;
    public final CSharp4.indexer_declarator_return indexer_declarator() throws RecognitionException {
        CSharp4.indexer_declarator_return retval = new CSharp4.indexer_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token DOT1070=null;
        Token THIS1071=null;
        Token OPEN_BRACKET1072=null;
        Token CLOSE_BRACKET1074=null;
        CSharp4.type_return type1068 =null;

        CSharp4.interface_type_return interface_type1069 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list1073 =null;


        Object DOT1070_tree=null;
        Object THIS1071_tree=null;
        Object OPEN_BRACKET1072_tree=null;
        Object CLOSE_BRACKET1074_tree=null;

        try {
            // CSharp4.g:1574:3: ( type ( interface_type DOT )? THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET )
            // CSharp4.g:1574:5: type ( interface_type DOT )? THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_in_indexer_declarator6935);
            type1068=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1068.getTree());

            // CSharp4.g:1574:10: ( interface_type DOT )?
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==IDENTIFIER) ) {
                alt244=1;
            }
            switch (alt244) {
                case 1 :
                    // CSharp4.g:1574:11: interface_type DOT
                    {
                    pushFollow(FOLLOW_interface_type_in_indexer_declarator6938);
                    interface_type1069=interface_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type1069.getTree());

                    DOT1070=(Token)match(input,DOT,FOLLOW_DOT_in_indexer_declarator6940); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DOT1070_tree = 
                    (Object)adaptor.create(DOT1070)
                    ;
                    adaptor.addChild(root_0, DOT1070_tree);
                    }

                    }
                    break;

            }


            THIS1071=(Token)match(input,THIS,FOLLOW_THIS_in_indexer_declarator6944); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            THIS1071_tree = 
            (Object)adaptor.create(THIS1071)
            ;
            adaptor.addChild(root_0, THIS1071_tree);
            }

            OPEN_BRACKET1072=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_indexer_declarator6946); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACKET1072_tree = 
            (Object)adaptor.create(OPEN_BRACKET1072)
            ;
            adaptor.addChild(root_0, OPEN_BRACKET1072_tree);
            }

            pushFollow(FOLLOW_formal_parameter_list_in_indexer_declarator6948);
            formal_parameter_list1073=formal_parameter_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list1073.getTree());

            CLOSE_BRACKET1074=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_indexer_declarator6950); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACKET1074_tree = 
            (Object)adaptor.create(CLOSE_BRACKET1074)
            ;
            adaptor.addChild(root_0, CLOSE_BRACKET1074_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "indexer_declarator"


    public static class operator_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "operator_declaration"
    // CSharp4.g:1576:1: operator_declaration : ( attributes )? operator_modifiers operator_declarator operator_body ;
    public final CSharp4.operator_declaration_return operator_declaration() throws RecognitionException {
        CSharp4.operator_declaration_return retval = new CSharp4.operator_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.attributes_return attributes1075 =null;

        CSharp4.operator_modifiers_return operator_modifiers1076 =null;

        CSharp4.operator_declarator_return operator_declarator1077 =null;

        CSharp4.operator_body_return operator_body1078 =null;



        try {
            // CSharp4.g:1577:2: ( ( attributes )? operator_modifiers operator_declarator operator_body )
            // CSharp4.g:1577:4: ( attributes )? operator_modifiers operator_declarator operator_body
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1577:4: ( attributes )?
            int alt245=2;
            int LA245_0 = input.LA(1);

            if ( (LA245_0==OPEN_BRACKET) ) {
                alt245=1;
            }
            switch (alt245) {
                case 1 :
                    // CSharp4.g:1577:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_operator_declaration6962);
                    attributes1075=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1075.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_operator_modifiers_in_operator_declaration6965);
            operator_modifiers1076=operator_modifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_modifiers1076.getTree());

            pushFollow(FOLLOW_operator_declarator_in_operator_declaration6967);
            operator_declarator1077=operator_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_declarator1077.getTree());

            pushFollow(FOLLOW_operator_body_in_operator_declaration6969);
            operator_body1078=operator_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_body1078.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "operator_declaration"


    public static class operator_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "operator_modifiers"
    // CSharp4.g:1579:1: operator_modifiers : operator_modifier ( operator_modifier )* ;
    public final CSharp4.operator_modifiers_return operator_modifiers() throws RecognitionException {
        CSharp4.operator_modifiers_return retval = new CSharp4.operator_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.operator_modifier_return operator_modifier1079 =null;

        CSharp4.operator_modifier_return operator_modifier1080 =null;



        try {
            // CSharp4.g:1580:2: ( operator_modifier ( operator_modifier )* )
            // CSharp4.g:1580:4: operator_modifier ( operator_modifier )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_operator_modifier_in_operator_modifiers6980);
            operator_modifier1079=operator_modifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_modifier1079.getTree());

            // CSharp4.g:1580:22: ( operator_modifier )*
            loop246:
            do {
                int alt246=2;
                int LA246_0 = input.LA(1);

                if ( (LA246_0==EXTERN||LA246_0==PUBLIC||LA246_0==STATIC||LA246_0==UNSAFE) ) {
                    alt246=1;
                }


                switch (alt246) {
            	case 1 :
            	    // CSharp4.g:1580:24: operator_modifier
            	    {
            	    pushFollow(FOLLOW_operator_modifier_in_operator_modifiers6984);
            	    operator_modifier1080=operator_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_modifier1080.getTree());

            	    }
            	    break;

            	default :
            	    break loop246;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "operator_modifiers"


    public static class operator_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "operator_modifier"
    // CSharp4.g:1582:1: operator_modifier : ( PUBLIC | STATIC | EXTERN | operator_modifier_unsafe );
    public final CSharp4.operator_modifier_return operator_modifier() throws RecognitionException {
        CSharp4.operator_modifier_return retval = new CSharp4.operator_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token PUBLIC1081=null;
        Token STATIC1082=null;
        Token EXTERN1083=null;
        CSharp4.operator_modifier_unsafe_return operator_modifier_unsafe1084 =null;


        Object PUBLIC1081_tree=null;
        Object STATIC1082_tree=null;
        Object EXTERN1083_tree=null;

        try {
            // CSharp4.g:1583:2: ( PUBLIC | STATIC | EXTERN | operator_modifier_unsafe )
            int alt247=4;
            switch ( input.LA(1) ) {
            case PUBLIC:
                {
                alt247=1;
                }
                break;
            case STATIC:
                {
                alt247=2;
                }
                break;
            case EXTERN:
                {
                alt247=3;
                }
                break;
            case UNSAFE:
                {
                alt247=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 247, 0, input);

                throw nvae;

            }

            switch (alt247) {
                case 1 :
                    // CSharp4.g:1583:4: PUBLIC
                    {
                    root_0 = (Object)adaptor.nil();


                    PUBLIC1081=(Token)match(input,PUBLIC,FOLLOW_PUBLIC_in_operator_modifier6998); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PUBLIC1081_tree = 
                    (Object)adaptor.create(PUBLIC1081)
                    ;
                    adaptor.addChild(root_0, PUBLIC1081_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1584:4: STATIC
                    {
                    root_0 = (Object)adaptor.nil();


                    STATIC1082=(Token)match(input,STATIC,FOLLOW_STATIC_in_operator_modifier7003); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC1082_tree = 
                    (Object)adaptor.create(STATIC1082)
                    ;
                    adaptor.addChild(root_0, STATIC1082_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1585:4: EXTERN
                    {
                    root_0 = (Object)adaptor.nil();


                    EXTERN1083=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_operator_modifier7008); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN1083_tree = 
                    (Object)adaptor.create(EXTERN1083)
                    ;
                    adaptor.addChild(root_0, EXTERN1083_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1586:4: operator_modifier_unsafe
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_operator_modifier_unsafe_in_operator_modifier7013);
                    operator_modifier_unsafe1084=operator_modifier_unsafe();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_modifier_unsafe1084.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "operator_modifier"


    public static class operator_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "operator_declarator"
    // CSharp4.g:1595:1: operator_declarator : ( ( unary_operator_declarator )=> unary_operator_declarator | binary_operator_declarator | conversion_operator_declarator );
    public final CSharp4.operator_declarator_return operator_declarator() throws RecognitionException {
        CSharp4.operator_declarator_return retval = new CSharp4.operator_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.unary_operator_declarator_return unary_operator_declarator1085 =null;

        CSharp4.binary_operator_declarator_return binary_operator_declarator1086 =null;

        CSharp4.conversion_operator_declarator_return conversion_operator_declarator1087 =null;



        try {
            // CSharp4.g:1596:3: ( ( unary_operator_declarator )=> unary_operator_declarator | binary_operator_declarator | conversion_operator_declarator )
            int alt248=3;
            switch ( input.LA(1) ) {
            case BYTE:
            case CHAR:
            case INT:
            case LONG:
            case SBYTE:
            case SHORT:
            case UINT:
            case ULONG:
            case USHORT:
                {
                int LA248_1 = input.LA(2);

                if ( (synpred26_CSharp4()) ) {
                    alt248=1;
                }
                else if ( (true) ) {
                    alt248=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 248, 1, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE:
            case FLOAT:
                {
                int LA248_2 = input.LA(2);

                if ( (synpred26_CSharp4()) ) {
                    alt248=1;
                }
                else if ( (true) ) {
                    alt248=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 248, 2, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL:
                {
                int LA248_3 = input.LA(2);

                if ( (synpred26_CSharp4()) ) {
                    alt248=1;
                }
                else if ( (true) ) {
                    alt248=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 248, 3, input);

                    throw nvae;

                }
                }
                break;
            case BOOL:
                {
                int LA248_4 = input.LA(2);

                if ( (synpred26_CSharp4()) ) {
                    alt248=1;
                }
                else if ( (true) ) {
                    alt248=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 248, 4, input);

                    throw nvae;

                }
                }
                break;
            case IDENTIFIER:
                {
                int LA248_5 = input.LA(2);

                if ( (synpred26_CSharp4()) ) {
                    alt248=1;
                }
                else if ( (true) ) {
                    alt248=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 248, 5, input);

                    throw nvae;

                }
                }
                break;
            case OBJECT:
                {
                int LA248_6 = input.LA(2);

                if ( (synpred26_CSharp4()) ) {
                    alt248=1;
                }
                else if ( (true) ) {
                    alt248=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 248, 6, input);

                    throw nvae;

                }
                }
                break;
            case STRING:
                {
                int LA248_7 = input.LA(2);

                if ( (synpred26_CSharp4()) ) {
                    alt248=1;
                }
                else if ( (true) ) {
                    alt248=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 248, 7, input);

                    throw nvae;

                }
                }
                break;
            case VOID:
                {
                int LA248_8 = input.LA(2);

                if ( (synpred26_CSharp4()) ) {
                    alt248=1;
                }
                else if ( (true) ) {
                    alt248=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 248, 8, input);

                    throw nvae;

                }
                }
                break;
            case EXPLICIT:
            case IMPLICIT:
                {
                alt248=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 248, 0, input);

                throw nvae;

            }

            switch (alt248) {
                case 1 :
                    // CSharp4.g:1596:5: ( unary_operator_declarator )=> unary_operator_declarator
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_unary_operator_declarator_in_operator_declarator7033);
                    unary_operator_declarator1085=unary_operator_declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_operator_declarator1085.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1597:5: binary_operator_declarator
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_binary_operator_declarator_in_operator_declarator7039);
                    binary_operator_declarator1086=binary_operator_declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, binary_operator_declarator1086.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:1598:5: conversion_operator_declarator
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_conversion_operator_declarator_in_operator_declarator7045);
                    conversion_operator_declarator1087=conversion_operator_declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, conversion_operator_declarator1087.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "operator_declarator"


    public static class unary_operator_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "unary_operator_declarator"
    // CSharp4.g:1600:1: unary_operator_declarator : type OPERATOR overloadable_unary_operator OPEN_PARENS type IDENTIFIER CLOSE_PARENS ;
    public final CSharp4.unary_operator_declarator_return unary_operator_declarator() throws RecognitionException {
        CSharp4.unary_operator_declarator_return retval = new CSharp4.unary_operator_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPERATOR1089=null;
        Token OPEN_PARENS1091=null;
        Token IDENTIFIER1093=null;
        Token CLOSE_PARENS1094=null;
        CSharp4.type_return type1088 =null;

        CSharp4.overloadable_unary_operator_return overloadable_unary_operator1090 =null;

        CSharp4.type_return type1092 =null;


        Object OPERATOR1089_tree=null;
        Object OPEN_PARENS1091_tree=null;
        Object IDENTIFIER1093_tree=null;
        Object CLOSE_PARENS1094_tree=null;

        try {
            // CSharp4.g:1601:2: ( type OPERATOR overloadable_unary_operator OPEN_PARENS type IDENTIFIER CLOSE_PARENS )
            // CSharp4.g:1601:4: type OPERATOR overloadable_unary_operator OPEN_PARENS type IDENTIFIER CLOSE_PARENS
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_in_unary_operator_declarator7057);
            type1088=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1088.getTree());

            OPERATOR1089=(Token)match(input,OPERATOR,FOLLOW_OPERATOR_in_unary_operator_declarator7059); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPERATOR1089_tree = 
            (Object)adaptor.create(OPERATOR1089)
            ;
            adaptor.addChild(root_0, OPERATOR1089_tree);
            }

            pushFollow(FOLLOW_overloadable_unary_operator_in_unary_operator_declarator7061);
            overloadable_unary_operator1090=overloadable_unary_operator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, overloadable_unary_operator1090.getTree());

            OPEN_PARENS1091=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_unary_operator_declarator7063); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1091_tree = 
            (Object)adaptor.create(OPEN_PARENS1091)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1091_tree);
            }

            pushFollow(FOLLOW_type_in_unary_operator_declarator7065);
            type1092=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1092.getTree());

            IDENTIFIER1093=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_unary_operator_declarator7067); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1093_tree = 
            (Object)adaptor.create(IDENTIFIER1093)
            ;
            adaptor.addChild(root_0, IDENTIFIER1093_tree);
            }

            CLOSE_PARENS1094=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_unary_operator_declarator7069); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1094_tree = 
            (Object)adaptor.create(CLOSE_PARENS1094)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1094_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unary_operator_declarator"


    public static class overloadable_unary_operator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "overloadable_unary_operator"
    // CSharp4.g:1603:1: overloadable_unary_operator : ( PLUS | MINUS | BANG | TILDE | OP_INC | OP_DEC | TRUE | FALSE );
    public final CSharp4.overloadable_unary_operator_return overloadable_unary_operator() throws RecognitionException {
        CSharp4.overloadable_unary_operator_return retval = new CSharp4.overloadable_unary_operator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set1095=null;

        Object set1095_tree=null;

        try {
            // CSharp4.g:1604:2: ( PLUS | MINUS | BANG | TILDE | OP_INC | OP_DEC | TRUE | FALSE )
            // CSharp4.g:
            {
            root_0 = (Object)adaptor.nil();


            set1095=(Token)input.LT(1);

            if ( input.LA(1)==BANG||input.LA(1)==FALSE||input.LA(1)==MINUS||input.LA(1)==OP_DEC||input.LA(1)==OP_INC||input.LA(1)==PLUS||(input.LA(1) >= TILDE && input.LA(1) <= TRUE) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set1095)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "overloadable_unary_operator"


    public static class binary_operator_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "binary_operator_declarator"
    // CSharp4.g:1613:1: binary_operator_declarator : type OPERATOR overloadable_binary_operator OPEN_PARENS type IDENTIFIER COMMA type IDENTIFIER CLOSE_PARENS ;
    public final CSharp4.binary_operator_declarator_return binary_operator_declarator() throws RecognitionException {
        CSharp4.binary_operator_declarator_return retval = new CSharp4.binary_operator_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPERATOR1097=null;
        Token OPEN_PARENS1099=null;
        Token IDENTIFIER1101=null;
        Token COMMA1102=null;
        Token IDENTIFIER1104=null;
        Token CLOSE_PARENS1105=null;
        CSharp4.type_return type1096 =null;

        CSharp4.overloadable_binary_operator_return overloadable_binary_operator1098 =null;

        CSharp4.type_return type1100 =null;

        CSharp4.type_return type1103 =null;


        Object OPERATOR1097_tree=null;
        Object OPEN_PARENS1099_tree=null;
        Object IDENTIFIER1101_tree=null;
        Object COMMA1102_tree=null;
        Object IDENTIFIER1104_tree=null;
        Object CLOSE_PARENS1105_tree=null;

        try {
            // CSharp4.g:1614:2: ( type OPERATOR overloadable_binary_operator OPEN_PARENS type IDENTIFIER COMMA type IDENTIFIER CLOSE_PARENS )
            // CSharp4.g:1614:4: type OPERATOR overloadable_binary_operator OPEN_PARENS type IDENTIFIER COMMA type IDENTIFIER CLOSE_PARENS
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_in_binary_operator_declarator7126);
            type1096=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1096.getTree());

            OPERATOR1097=(Token)match(input,OPERATOR,FOLLOW_OPERATOR_in_binary_operator_declarator7128); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPERATOR1097_tree = 
            (Object)adaptor.create(OPERATOR1097)
            ;
            adaptor.addChild(root_0, OPERATOR1097_tree);
            }

            pushFollow(FOLLOW_overloadable_binary_operator_in_binary_operator_declarator7130);
            overloadable_binary_operator1098=overloadable_binary_operator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, overloadable_binary_operator1098.getTree());

            OPEN_PARENS1099=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_binary_operator_declarator7132); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1099_tree = 
            (Object)adaptor.create(OPEN_PARENS1099)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1099_tree);
            }

            pushFollow(FOLLOW_type_in_binary_operator_declarator7134);
            type1100=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1100.getTree());

            IDENTIFIER1101=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_binary_operator_declarator7136); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1101_tree = 
            (Object)adaptor.create(IDENTIFIER1101)
            ;
            adaptor.addChild(root_0, IDENTIFIER1101_tree);
            }

            COMMA1102=(Token)match(input,COMMA,FOLLOW_COMMA_in_binary_operator_declarator7138); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COMMA1102_tree = 
            (Object)adaptor.create(COMMA1102)
            ;
            adaptor.addChild(root_0, COMMA1102_tree);
            }

            pushFollow(FOLLOW_type_in_binary_operator_declarator7140);
            type1103=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1103.getTree());

            IDENTIFIER1104=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_binary_operator_declarator7142); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1104_tree = 
            (Object)adaptor.create(IDENTIFIER1104)
            ;
            adaptor.addChild(root_0, IDENTIFIER1104_tree);
            }

            CLOSE_PARENS1105=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_binary_operator_declarator7144); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1105_tree = 
            (Object)adaptor.create(CLOSE_PARENS1105)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1105_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "binary_operator_declarator"


    public static class overloadable_binary_operator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "overloadable_binary_operator"
    // CSharp4.g:1616:1: overloadable_binary_operator : ( PLUS | MINUS | STAR | DIV | PERCENT | AMP | BITWISE_OR | CARET | OP_LEFT_SHIFT | right_shift | OP_EQ | OP_NE | GT | LT | OP_GE | OP_LE );
    public final CSharp4.overloadable_binary_operator_return overloadable_binary_operator() throws RecognitionException {
        CSharp4.overloadable_binary_operator_return retval = new CSharp4.overloadable_binary_operator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token PLUS1106=null;
        Token MINUS1107=null;
        Token STAR1108=null;
        Token DIV1109=null;
        Token PERCENT1110=null;
        Token AMP1111=null;
        Token BITWISE_OR1112=null;
        Token CARET1113=null;
        Token OP_LEFT_SHIFT1114=null;
        Token OP_EQ1116=null;
        Token OP_NE1117=null;
        Token GT1118=null;
        Token LT1119=null;
        Token OP_GE1120=null;
        Token OP_LE1121=null;
        CSharp4.right_shift_return right_shift1115 =null;


        Object PLUS1106_tree=null;
        Object MINUS1107_tree=null;
        Object STAR1108_tree=null;
        Object DIV1109_tree=null;
        Object PERCENT1110_tree=null;
        Object AMP1111_tree=null;
        Object BITWISE_OR1112_tree=null;
        Object CARET1113_tree=null;
        Object OP_LEFT_SHIFT1114_tree=null;
        Object OP_EQ1116_tree=null;
        Object OP_NE1117_tree=null;
        Object GT1118_tree=null;
        Object LT1119_tree=null;
        Object OP_GE1120_tree=null;
        Object OP_LE1121_tree=null;

        try {
            // CSharp4.g:1617:2: ( PLUS | MINUS | STAR | DIV | PERCENT | AMP | BITWISE_OR | CARET | OP_LEFT_SHIFT | right_shift | OP_EQ | OP_NE | GT | LT | OP_GE | OP_LE )
            int alt249=16;
            switch ( input.LA(1) ) {
            case PLUS:
                {
                alt249=1;
                }
                break;
            case MINUS:
                {
                alt249=2;
                }
                break;
            case STAR:
                {
                alt249=3;
                }
                break;
            case DIV:
                {
                alt249=4;
                }
                break;
            case PERCENT:
                {
                alt249=5;
                }
                break;
            case AMP:
                {
                alt249=6;
                }
                break;
            case BITWISE_OR:
                {
                alt249=7;
                }
                break;
            case CARET:
                {
                alt249=8;
                }
                break;
            case OP_LEFT_SHIFT:
                {
                alt249=9;
                }
                break;
            case GT:
                {
                int LA249_10 = input.LA(2);

                if ( (LA249_10==GT) ) {
                    alt249=10;
                }
                else if ( (LA249_10==OPEN_PARENS) ) {
                    alt249=13;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 249, 10, input);

                    throw nvae;

                }
                }
                break;
            case OP_EQ:
                {
                alt249=11;
                }
                break;
            case OP_NE:
                {
                alt249=12;
                }
                break;
            case LT:
                {
                alt249=14;
                }
                break;
            case OP_GE:
                {
                alt249=15;
                }
                break;
            case OP_LE:
                {
                alt249=16;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 249, 0, input);

                throw nvae;

            }

            switch (alt249) {
                case 1 :
                    // CSharp4.g:1617:4: PLUS
                    {
                    root_0 = (Object)adaptor.nil();


                    PLUS1106=(Token)match(input,PLUS,FOLLOW_PLUS_in_overloadable_binary_operator7155); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PLUS1106_tree = 
                    (Object)adaptor.create(PLUS1106)
                    ;
                    adaptor.addChild(root_0, PLUS1106_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1618:4: MINUS
                    {
                    root_0 = (Object)adaptor.nil();


                    MINUS1107=(Token)match(input,MINUS,FOLLOW_MINUS_in_overloadable_binary_operator7160); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    MINUS1107_tree = 
                    (Object)adaptor.create(MINUS1107)
                    ;
                    adaptor.addChild(root_0, MINUS1107_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1619:4: STAR
                    {
                    root_0 = (Object)adaptor.nil();


                    STAR1108=(Token)match(input,STAR,FOLLOW_STAR_in_overloadable_binary_operator7165); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STAR1108_tree = 
                    (Object)adaptor.create(STAR1108)
                    ;
                    adaptor.addChild(root_0, STAR1108_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1620:4: DIV
                    {
                    root_0 = (Object)adaptor.nil();


                    DIV1109=(Token)match(input,DIV,FOLLOW_DIV_in_overloadable_binary_operator7170); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DIV1109_tree = 
                    (Object)adaptor.create(DIV1109)
                    ;
                    adaptor.addChild(root_0, DIV1109_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1621:4: PERCENT
                    {
                    root_0 = (Object)adaptor.nil();


                    PERCENT1110=(Token)match(input,PERCENT,FOLLOW_PERCENT_in_overloadable_binary_operator7175); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PERCENT1110_tree = 
                    (Object)adaptor.create(PERCENT1110)
                    ;
                    adaptor.addChild(root_0, PERCENT1110_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:1622:4: AMP
                    {
                    root_0 = (Object)adaptor.nil();


                    AMP1111=(Token)match(input,AMP,FOLLOW_AMP_in_overloadable_binary_operator7180); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    AMP1111_tree = 
                    (Object)adaptor.create(AMP1111)
                    ;
                    adaptor.addChild(root_0, AMP1111_tree);
                    }

                    }
                    break;
                case 7 :
                    // CSharp4.g:1623:4: BITWISE_OR
                    {
                    root_0 = (Object)adaptor.nil();


                    BITWISE_OR1112=(Token)match(input,BITWISE_OR,FOLLOW_BITWISE_OR_in_overloadable_binary_operator7185); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BITWISE_OR1112_tree = 
                    (Object)adaptor.create(BITWISE_OR1112)
                    ;
                    adaptor.addChild(root_0, BITWISE_OR1112_tree);
                    }

                    }
                    break;
                case 8 :
                    // CSharp4.g:1624:4: CARET
                    {
                    root_0 = (Object)adaptor.nil();


                    CARET1113=(Token)match(input,CARET,FOLLOW_CARET_in_overloadable_binary_operator7190); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CARET1113_tree = 
                    (Object)adaptor.create(CARET1113)
                    ;
                    adaptor.addChild(root_0, CARET1113_tree);
                    }

                    }
                    break;
                case 9 :
                    // CSharp4.g:1625:4: OP_LEFT_SHIFT
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_LEFT_SHIFT1114=(Token)match(input,OP_LEFT_SHIFT,FOLLOW_OP_LEFT_SHIFT_in_overloadable_binary_operator7195); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_LEFT_SHIFT1114_tree = 
                    (Object)adaptor.create(OP_LEFT_SHIFT1114)
                    ;
                    adaptor.addChild(root_0, OP_LEFT_SHIFT1114_tree);
                    }

                    }
                    break;
                case 10 :
                    // CSharp4.g:1626:4: right_shift
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_right_shift_in_overloadable_binary_operator7200);
                    right_shift1115=right_shift();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, right_shift1115.getTree());

                    }
                    break;
                case 11 :
                    // CSharp4.g:1627:4: OP_EQ
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_EQ1116=(Token)match(input,OP_EQ,FOLLOW_OP_EQ_in_overloadable_binary_operator7205); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_EQ1116_tree = 
                    (Object)adaptor.create(OP_EQ1116)
                    ;
                    adaptor.addChild(root_0, OP_EQ1116_tree);
                    }

                    }
                    break;
                case 12 :
                    // CSharp4.g:1628:4: OP_NE
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_NE1117=(Token)match(input,OP_NE,FOLLOW_OP_NE_in_overloadable_binary_operator7210); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_NE1117_tree = 
                    (Object)adaptor.create(OP_NE1117)
                    ;
                    adaptor.addChild(root_0, OP_NE1117_tree);
                    }

                    }
                    break;
                case 13 :
                    // CSharp4.g:1629:4: GT
                    {
                    root_0 = (Object)adaptor.nil();


                    GT1118=(Token)match(input,GT,FOLLOW_GT_in_overloadable_binary_operator7215); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    GT1118_tree = 
                    (Object)adaptor.create(GT1118)
                    ;
                    adaptor.addChild(root_0, GT1118_tree);
                    }

                    }
                    break;
                case 14 :
                    // CSharp4.g:1630:4: LT
                    {
                    root_0 = (Object)adaptor.nil();


                    LT1119=(Token)match(input,LT,FOLLOW_LT_in_overloadable_binary_operator7220); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LT1119_tree = 
                    (Object)adaptor.create(LT1119)
                    ;
                    adaptor.addChild(root_0, LT1119_tree);
                    }

                    }
                    break;
                case 15 :
                    // CSharp4.g:1631:4: OP_GE
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_GE1120=(Token)match(input,OP_GE,FOLLOW_OP_GE_in_overloadable_binary_operator7225); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_GE1120_tree = 
                    (Object)adaptor.create(OP_GE1120)
                    ;
                    adaptor.addChild(root_0, OP_GE1120_tree);
                    }

                    }
                    break;
                case 16 :
                    // CSharp4.g:1632:4: OP_LE
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_LE1121=(Token)match(input,OP_LE,FOLLOW_OP_LE_in_overloadable_binary_operator7230); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_LE1121_tree = 
                    (Object)adaptor.create(OP_LE1121)
                    ;
                    adaptor.addChild(root_0, OP_LE1121_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "overloadable_binary_operator"


    public static class overloadable_operator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "overloadable_operator"
    // CSharp4.g:1636:1: overloadable_operator : ( PLUS | MINUS | BANG | TILDE | OP_INC | OP_DEC | TRUE | FALSE | STAR | DIV | PERCENT | AMP | BITWISE_OR | CARET | OP_LEFT_SHIFT | right_shift | OP_EQ | OP_NE | GT | LT | OP_GE | OP_LE );
    public final CSharp4.overloadable_operator_return overloadable_operator() throws RecognitionException {
        CSharp4.overloadable_operator_return retval = new CSharp4.overloadable_operator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token PLUS1122=null;
        Token MINUS1123=null;
        Token BANG1124=null;
        Token TILDE1125=null;
        Token OP_INC1126=null;
        Token OP_DEC1127=null;
        Token TRUE1128=null;
        Token FALSE1129=null;
        Token STAR1130=null;
        Token DIV1131=null;
        Token PERCENT1132=null;
        Token AMP1133=null;
        Token BITWISE_OR1134=null;
        Token CARET1135=null;
        Token OP_LEFT_SHIFT1136=null;
        Token OP_EQ1138=null;
        Token OP_NE1139=null;
        Token GT1140=null;
        Token LT1141=null;
        Token OP_GE1142=null;
        Token OP_LE1143=null;
        CSharp4.right_shift_return right_shift1137 =null;


        Object PLUS1122_tree=null;
        Object MINUS1123_tree=null;
        Object BANG1124_tree=null;
        Object TILDE1125_tree=null;
        Object OP_INC1126_tree=null;
        Object OP_DEC1127_tree=null;
        Object TRUE1128_tree=null;
        Object FALSE1129_tree=null;
        Object STAR1130_tree=null;
        Object DIV1131_tree=null;
        Object PERCENT1132_tree=null;
        Object AMP1133_tree=null;
        Object BITWISE_OR1134_tree=null;
        Object CARET1135_tree=null;
        Object OP_LEFT_SHIFT1136_tree=null;
        Object OP_EQ1138_tree=null;
        Object OP_NE1139_tree=null;
        Object GT1140_tree=null;
        Object LT1141_tree=null;
        Object OP_GE1142_tree=null;
        Object OP_LE1143_tree=null;

        try {
            // CSharp4.g:1637:3: ( PLUS | MINUS | BANG | TILDE | OP_INC | OP_DEC | TRUE | FALSE | STAR | DIV | PERCENT | AMP | BITWISE_OR | CARET | OP_LEFT_SHIFT | right_shift | OP_EQ | OP_NE | GT | LT | OP_GE | OP_LE )
            int alt250=22;
            switch ( input.LA(1) ) {
            case PLUS:
                {
                alt250=1;
                }
                break;
            case MINUS:
                {
                alt250=2;
                }
                break;
            case BANG:
                {
                alt250=3;
                }
                break;
            case TILDE:
                {
                alt250=4;
                }
                break;
            case OP_INC:
                {
                alt250=5;
                }
                break;
            case OP_DEC:
                {
                alt250=6;
                }
                break;
            case TRUE:
                {
                alt250=7;
                }
                break;
            case FALSE:
                {
                alt250=8;
                }
                break;
            case STAR:
                {
                alt250=9;
                }
                break;
            case DIV:
                {
                alt250=10;
                }
                break;
            case PERCENT:
                {
                alt250=11;
                }
                break;
            case AMP:
                {
                alt250=12;
                }
                break;
            case BITWISE_OR:
                {
                alt250=13;
                }
                break;
            case CARET:
                {
                alt250=14;
                }
                break;
            case OP_LEFT_SHIFT:
                {
                alt250=15;
                }
                break;
            case GT:
                {
                int LA250_16 = input.LA(2);

                if ( (LA250_16==GT) ) {
                    alt250=16;
                }
                else if ( (LA250_16==OPEN_PARENS) ) {
                    alt250=19;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 250, 16, input);

                    throw nvae;

                }
                }
                break;
            case OP_EQ:
                {
                alt250=17;
                }
                break;
            case OP_NE:
                {
                alt250=18;
                }
                break;
            case LT:
                {
                alt250=20;
                }
                break;
            case OP_GE:
                {
                alt250=21;
                }
                break;
            case OP_LE:
                {
                alt250=22;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 250, 0, input);

                throw nvae;

            }

            switch (alt250) {
                case 1 :
                    // CSharp4.g:1637:5: PLUS
                    {
                    root_0 = (Object)adaptor.nil();


                    PLUS1122=(Token)match(input,PLUS,FOLLOW_PLUS_in_overloadable_operator7244); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PLUS1122_tree = 
                    (Object)adaptor.create(PLUS1122)
                    ;
                    adaptor.addChild(root_0, PLUS1122_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1638:5: MINUS
                    {
                    root_0 = (Object)adaptor.nil();


                    MINUS1123=(Token)match(input,MINUS,FOLLOW_MINUS_in_overloadable_operator7250); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    MINUS1123_tree = 
                    (Object)adaptor.create(MINUS1123)
                    ;
                    adaptor.addChild(root_0, MINUS1123_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1639:5: BANG
                    {
                    root_0 = (Object)adaptor.nil();


                    BANG1124=(Token)match(input,BANG,FOLLOW_BANG_in_overloadable_operator7256); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BANG1124_tree = 
                    (Object)adaptor.create(BANG1124)
                    ;
                    adaptor.addChild(root_0, BANG1124_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1640:5: TILDE
                    {
                    root_0 = (Object)adaptor.nil();


                    TILDE1125=(Token)match(input,TILDE,FOLLOW_TILDE_in_overloadable_operator7262); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    TILDE1125_tree = 
                    (Object)adaptor.create(TILDE1125)
                    ;
                    adaptor.addChild(root_0, TILDE1125_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1641:5: OP_INC
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_INC1126=(Token)match(input,OP_INC,FOLLOW_OP_INC_in_overloadable_operator7268); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_INC1126_tree = 
                    (Object)adaptor.create(OP_INC1126)
                    ;
                    adaptor.addChild(root_0, OP_INC1126_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:1642:5: OP_DEC
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_DEC1127=(Token)match(input,OP_DEC,FOLLOW_OP_DEC_in_overloadable_operator7274); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_DEC1127_tree = 
                    (Object)adaptor.create(OP_DEC1127)
                    ;
                    adaptor.addChild(root_0, OP_DEC1127_tree);
                    }

                    }
                    break;
                case 7 :
                    // CSharp4.g:1643:5: TRUE
                    {
                    root_0 = (Object)adaptor.nil();


                    TRUE1128=(Token)match(input,TRUE,FOLLOW_TRUE_in_overloadable_operator7280); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    TRUE1128_tree = 
                    (Object)adaptor.create(TRUE1128)
                    ;
                    adaptor.addChild(root_0, TRUE1128_tree);
                    }

                    }
                    break;
                case 8 :
                    // CSharp4.g:1644:5: FALSE
                    {
                    root_0 = (Object)adaptor.nil();


                    FALSE1129=(Token)match(input,FALSE,FOLLOW_FALSE_in_overloadable_operator7286); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    FALSE1129_tree = 
                    (Object)adaptor.create(FALSE1129)
                    ;
                    adaptor.addChild(root_0, FALSE1129_tree);
                    }

                    }
                    break;
                case 9 :
                    // CSharp4.g:1645:5: STAR
                    {
                    root_0 = (Object)adaptor.nil();


                    STAR1130=(Token)match(input,STAR,FOLLOW_STAR_in_overloadable_operator7292); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STAR1130_tree = 
                    (Object)adaptor.create(STAR1130)
                    ;
                    adaptor.addChild(root_0, STAR1130_tree);
                    }

                    }
                    break;
                case 10 :
                    // CSharp4.g:1646:5: DIV
                    {
                    root_0 = (Object)adaptor.nil();


                    DIV1131=(Token)match(input,DIV,FOLLOW_DIV_in_overloadable_operator7298); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DIV1131_tree = 
                    (Object)adaptor.create(DIV1131)
                    ;
                    adaptor.addChild(root_0, DIV1131_tree);
                    }

                    }
                    break;
                case 11 :
                    // CSharp4.g:1647:5: PERCENT
                    {
                    root_0 = (Object)adaptor.nil();


                    PERCENT1132=(Token)match(input,PERCENT,FOLLOW_PERCENT_in_overloadable_operator7304); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PERCENT1132_tree = 
                    (Object)adaptor.create(PERCENT1132)
                    ;
                    adaptor.addChild(root_0, PERCENT1132_tree);
                    }

                    }
                    break;
                case 12 :
                    // CSharp4.g:1648:5: AMP
                    {
                    root_0 = (Object)adaptor.nil();


                    AMP1133=(Token)match(input,AMP,FOLLOW_AMP_in_overloadable_operator7310); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    AMP1133_tree = 
                    (Object)adaptor.create(AMP1133)
                    ;
                    adaptor.addChild(root_0, AMP1133_tree);
                    }

                    }
                    break;
                case 13 :
                    // CSharp4.g:1649:5: BITWISE_OR
                    {
                    root_0 = (Object)adaptor.nil();


                    BITWISE_OR1134=(Token)match(input,BITWISE_OR,FOLLOW_BITWISE_OR_in_overloadable_operator7316); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BITWISE_OR1134_tree = 
                    (Object)adaptor.create(BITWISE_OR1134)
                    ;
                    adaptor.addChild(root_0, BITWISE_OR1134_tree);
                    }

                    }
                    break;
                case 14 :
                    // CSharp4.g:1650:5: CARET
                    {
                    root_0 = (Object)adaptor.nil();


                    CARET1135=(Token)match(input,CARET,FOLLOW_CARET_in_overloadable_operator7322); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CARET1135_tree = 
                    (Object)adaptor.create(CARET1135)
                    ;
                    adaptor.addChild(root_0, CARET1135_tree);
                    }

                    }
                    break;
                case 15 :
                    // CSharp4.g:1651:5: OP_LEFT_SHIFT
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_LEFT_SHIFT1136=(Token)match(input,OP_LEFT_SHIFT,FOLLOW_OP_LEFT_SHIFT_in_overloadable_operator7328); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_LEFT_SHIFT1136_tree = 
                    (Object)adaptor.create(OP_LEFT_SHIFT1136)
                    ;
                    adaptor.addChild(root_0, OP_LEFT_SHIFT1136_tree);
                    }

                    }
                    break;
                case 16 :
                    // CSharp4.g:1652:5: right_shift
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_right_shift_in_overloadable_operator7334);
                    right_shift1137=right_shift();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, right_shift1137.getTree());

                    }
                    break;
                case 17 :
                    // CSharp4.g:1653:5: OP_EQ
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_EQ1138=(Token)match(input,OP_EQ,FOLLOW_OP_EQ_in_overloadable_operator7340); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_EQ1138_tree = 
                    (Object)adaptor.create(OP_EQ1138)
                    ;
                    adaptor.addChild(root_0, OP_EQ1138_tree);
                    }

                    }
                    break;
                case 18 :
                    // CSharp4.g:1654:5: OP_NE
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_NE1139=(Token)match(input,OP_NE,FOLLOW_OP_NE_in_overloadable_operator7346); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_NE1139_tree = 
                    (Object)adaptor.create(OP_NE1139)
                    ;
                    adaptor.addChild(root_0, OP_NE1139_tree);
                    }

                    }
                    break;
                case 19 :
                    // CSharp4.g:1655:5: GT
                    {
                    root_0 = (Object)adaptor.nil();


                    GT1140=(Token)match(input,GT,FOLLOW_GT_in_overloadable_operator7352); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    GT1140_tree = 
                    (Object)adaptor.create(GT1140)
                    ;
                    adaptor.addChild(root_0, GT1140_tree);
                    }

                    }
                    break;
                case 20 :
                    // CSharp4.g:1656:5: LT
                    {
                    root_0 = (Object)adaptor.nil();


                    LT1141=(Token)match(input,LT,FOLLOW_LT_in_overloadable_operator7358); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LT1141_tree = 
                    (Object)adaptor.create(LT1141)
                    ;
                    adaptor.addChild(root_0, LT1141_tree);
                    }

                    }
                    break;
                case 21 :
                    // CSharp4.g:1657:5: OP_GE
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_GE1142=(Token)match(input,OP_GE,FOLLOW_OP_GE_in_overloadable_operator7364); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_GE1142_tree = 
                    (Object)adaptor.create(OP_GE1142)
                    ;
                    adaptor.addChild(root_0, OP_GE1142_tree);
                    }

                    }
                    break;
                case 22 :
                    // CSharp4.g:1658:5: OP_LE
                    {
                    root_0 = (Object)adaptor.nil();


                    OP_LE1143=(Token)match(input,OP_LE,FOLLOW_OP_LE_in_overloadable_operator7370); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OP_LE1143_tree = 
                    (Object)adaptor.create(OP_LE1143)
                    ;
                    adaptor.addChild(root_0, OP_LE1143_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "overloadable_operator"


    public static class conversion_operator_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "conversion_operator_declarator"
    // CSharp4.g:1661:1: conversion_operator_declarator : ( IMPLICIT OPERATOR type OPEN_PARENS type IDENTIFIER CLOSE_PARENS | EXPLICIT OPERATOR type OPEN_PARENS type IDENTIFIER CLOSE_PARENS );
    public final CSharp4.conversion_operator_declarator_return conversion_operator_declarator() throws RecognitionException {
        CSharp4.conversion_operator_declarator_return retval = new CSharp4.conversion_operator_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IMPLICIT1144=null;
        Token OPERATOR1145=null;
        Token OPEN_PARENS1147=null;
        Token IDENTIFIER1149=null;
        Token CLOSE_PARENS1150=null;
        Token EXPLICIT1151=null;
        Token OPERATOR1152=null;
        Token OPEN_PARENS1154=null;
        Token IDENTIFIER1156=null;
        Token CLOSE_PARENS1157=null;
        CSharp4.type_return type1146 =null;

        CSharp4.type_return type1148 =null;

        CSharp4.type_return type1153 =null;

        CSharp4.type_return type1155 =null;


        Object IMPLICIT1144_tree=null;
        Object OPERATOR1145_tree=null;
        Object OPEN_PARENS1147_tree=null;
        Object IDENTIFIER1149_tree=null;
        Object CLOSE_PARENS1150_tree=null;
        Object EXPLICIT1151_tree=null;
        Object OPERATOR1152_tree=null;
        Object OPEN_PARENS1154_tree=null;
        Object IDENTIFIER1156_tree=null;
        Object CLOSE_PARENS1157_tree=null;

        try {
            // CSharp4.g:1662:2: ( IMPLICIT OPERATOR type OPEN_PARENS type IDENTIFIER CLOSE_PARENS | EXPLICIT OPERATOR type OPEN_PARENS type IDENTIFIER CLOSE_PARENS )
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==IMPLICIT) ) {
                alt251=1;
            }
            else if ( (LA251_0==EXPLICIT) ) {
                alt251=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 251, 0, input);

                throw nvae;

            }
            switch (alt251) {
                case 1 :
                    // CSharp4.g:1662:4: IMPLICIT OPERATOR type OPEN_PARENS type IDENTIFIER CLOSE_PARENS
                    {
                    root_0 = (Object)adaptor.nil();


                    IMPLICIT1144=(Token)match(input,IMPLICIT,FOLLOW_IMPLICIT_in_conversion_operator_declarator7383); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IMPLICIT1144_tree = 
                    (Object)adaptor.create(IMPLICIT1144)
                    ;
                    adaptor.addChild(root_0, IMPLICIT1144_tree);
                    }

                    OPERATOR1145=(Token)match(input,OPERATOR,FOLLOW_OPERATOR_in_conversion_operator_declarator7385); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPERATOR1145_tree = 
                    (Object)adaptor.create(OPERATOR1145)
                    ;
                    adaptor.addChild(root_0, OPERATOR1145_tree);
                    }

                    pushFollow(FOLLOW_type_in_conversion_operator_declarator7387);
                    type1146=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type1146.getTree());

                    OPEN_PARENS1147=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_conversion_operator_declarator7389); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS1147_tree = 
                    (Object)adaptor.create(OPEN_PARENS1147)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS1147_tree);
                    }

                    pushFollow(FOLLOW_type_in_conversion_operator_declarator7391);
                    type1148=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type1148.getTree());

                    IDENTIFIER1149=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_conversion_operator_declarator7393); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER1149_tree = 
                    (Object)adaptor.create(IDENTIFIER1149)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER1149_tree);
                    }

                    CLOSE_PARENS1150=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_conversion_operator_declarator7395); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS1150_tree = 
                    (Object)adaptor.create(CLOSE_PARENS1150)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS1150_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1663:4: EXPLICIT OPERATOR type OPEN_PARENS type IDENTIFIER CLOSE_PARENS
                    {
                    root_0 = (Object)adaptor.nil();


                    EXPLICIT1151=(Token)match(input,EXPLICIT,FOLLOW_EXPLICIT_in_conversion_operator_declarator7400); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXPLICIT1151_tree = 
                    (Object)adaptor.create(EXPLICIT1151)
                    ;
                    adaptor.addChild(root_0, EXPLICIT1151_tree);
                    }

                    OPERATOR1152=(Token)match(input,OPERATOR,FOLLOW_OPERATOR_in_conversion_operator_declarator7402); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPERATOR1152_tree = 
                    (Object)adaptor.create(OPERATOR1152)
                    ;
                    adaptor.addChild(root_0, OPERATOR1152_tree);
                    }

                    pushFollow(FOLLOW_type_in_conversion_operator_declarator7404);
                    type1153=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type1153.getTree());

                    OPEN_PARENS1154=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_conversion_operator_declarator7406); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS1154_tree = 
                    (Object)adaptor.create(OPEN_PARENS1154)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS1154_tree);
                    }

                    pushFollow(FOLLOW_type_in_conversion_operator_declarator7408);
                    type1155=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type1155.getTree());

                    IDENTIFIER1156=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_conversion_operator_declarator7410); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER1156_tree = 
                    (Object)adaptor.create(IDENTIFIER1156)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER1156_tree);
                    }

                    CLOSE_PARENS1157=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_conversion_operator_declarator7412); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS1157_tree = 
                    (Object)adaptor.create(CLOSE_PARENS1157)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS1157_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "conversion_operator_declarator"


    public static class operator_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "operator_body"
    // CSharp4.g:1665:1: operator_body : ( block | SEMICOLON );
    public final CSharp4.operator_body_return operator_body() throws RecognitionException {
        CSharp4.operator_body_return retval = new CSharp4.operator_body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SEMICOLON1159=null;
        CSharp4.block_return block1158 =null;


        Object SEMICOLON1159_tree=null;

        try {
            // CSharp4.g:1666:2: ( block | SEMICOLON )
            int alt252=2;
            int LA252_0 = input.LA(1);

            if ( (LA252_0==OPEN_BRACE) ) {
                alt252=1;
            }
            else if ( (LA252_0==SEMICOLON) ) {
                alt252=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 252, 0, input);

                throw nvae;

            }
            switch (alt252) {
                case 1 :
                    // CSharp4.g:1666:4: block
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_block_in_operator_body7423);
                    block1158=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block1158.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1667:4: SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    SEMICOLON1159=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_operator_body7428); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1159_tree = 
                    (Object)adaptor.create(SEMICOLON1159)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1159_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "operator_body"


    public static class constructor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constructor_declaration"
    // CSharp4.g:1669:1: constructor_declaration : ( attributes )? ( constructor_modifiers )? constructor_declarator constructor_body ;
    public final CSharp4.constructor_declaration_return constructor_declaration() throws RecognitionException {
        CSharp4.constructor_declaration_return retval = new CSharp4.constructor_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.attributes_return attributes1160 =null;

        CSharp4.constructor_modifiers_return constructor_modifiers1161 =null;

        CSharp4.constructor_declarator_return constructor_declarator1162 =null;

        CSharp4.constructor_body_return constructor_body1163 =null;



        try {
            // CSharp4.g:1670:2: ( ( attributes )? ( constructor_modifiers )? constructor_declarator constructor_body )
            // CSharp4.g:1670:4: ( attributes )? ( constructor_modifiers )? constructor_declarator constructor_body
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1670:4: ( attributes )?
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==OPEN_BRACKET) ) {
                alt253=1;
            }
            switch (alt253) {
                case 1 :
                    // CSharp4.g:1670:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_constructor_declaration7439);
                    attributes1160=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1160.getTree());

                    }
                    break;

            }


            // CSharp4.g:1670:16: ( constructor_modifiers )?
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==EXTERN||LA254_0==INTERNAL||(LA254_0 >= PRIVATE && LA254_0 <= PUBLIC)||LA254_0==UNSAFE) ) {
                alt254=1;
            }
            switch (alt254) {
                case 1 :
                    // CSharp4.g:1670:16: constructor_modifiers
                    {
                    pushFollow(FOLLOW_constructor_modifiers_in_constructor_declaration7442);
                    constructor_modifiers1161=constructor_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_modifiers1161.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_constructor_declarator_in_constructor_declaration7445);
            constructor_declarator1162=constructor_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declarator1162.getTree());

            pushFollow(FOLLOW_constructor_body_in_constructor_declaration7447);
            constructor_body1163=constructor_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_body1163.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constructor_declaration"


    public static class constructor_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constructor_modifiers"
    // CSharp4.g:1672:1: constructor_modifiers : ( constructor_modifier )+ ;
    public final CSharp4.constructor_modifiers_return constructor_modifiers() throws RecognitionException {
        CSharp4.constructor_modifiers_return retval = new CSharp4.constructor_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.constructor_modifier_return constructor_modifier1164 =null;



        try {
            // CSharp4.g:1673:2: ( ( constructor_modifier )+ )
            // CSharp4.g:1673:4: ( constructor_modifier )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1673:4: ( constructor_modifier )+
            int cnt255=0;
            loop255:
            do {
                int alt255=2;
                int LA255_0 = input.LA(1);

                if ( (LA255_0==EXTERN||LA255_0==INTERNAL||(LA255_0 >= PRIVATE && LA255_0 <= PUBLIC)||LA255_0==UNSAFE) ) {
                    alt255=1;
                }


                switch (alt255) {
            	case 1 :
            	    // CSharp4.g:1673:4: constructor_modifier
            	    {
            	    pushFollow(FOLLOW_constructor_modifier_in_constructor_modifiers7458);
            	    constructor_modifier1164=constructor_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_modifier1164.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt255 >= 1 ) break loop255;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(255, input);
                        throw eee;
                }
                cnt255++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constructor_modifiers"


    public static class constructor_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constructor_modifier"
    // CSharp4.g:1675:1: constructor_modifier : ( PUBLIC | PROTECTED | INTERNAL | PRIVATE | EXTERN | constructor_modifier_unsafe );
    public final CSharp4.constructor_modifier_return constructor_modifier() throws RecognitionException {
        CSharp4.constructor_modifier_return retval = new CSharp4.constructor_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token PUBLIC1165=null;
        Token PROTECTED1166=null;
        Token INTERNAL1167=null;
        Token PRIVATE1168=null;
        Token EXTERN1169=null;
        CSharp4.constructor_modifier_unsafe_return constructor_modifier_unsafe1170 =null;


        Object PUBLIC1165_tree=null;
        Object PROTECTED1166_tree=null;
        Object INTERNAL1167_tree=null;
        Object PRIVATE1168_tree=null;
        Object EXTERN1169_tree=null;

        try {
            // CSharp4.g:1676:2: ( PUBLIC | PROTECTED | INTERNAL | PRIVATE | EXTERN | constructor_modifier_unsafe )
            int alt256=6;
            switch ( input.LA(1) ) {
            case PUBLIC:
                {
                alt256=1;
                }
                break;
            case PROTECTED:
                {
                alt256=2;
                }
                break;
            case INTERNAL:
                {
                alt256=3;
                }
                break;
            case PRIVATE:
                {
                alt256=4;
                }
                break;
            case EXTERN:
                {
                alt256=5;
                }
                break;
            case UNSAFE:
                {
                alt256=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 256, 0, input);

                throw nvae;

            }

            switch (alt256) {
                case 1 :
                    // CSharp4.g:1676:4: PUBLIC
                    {
                    root_0 = (Object)adaptor.nil();


                    PUBLIC1165=(Token)match(input,PUBLIC,FOLLOW_PUBLIC_in_constructor_modifier7470); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PUBLIC1165_tree = 
                    (Object)adaptor.create(PUBLIC1165)
                    ;
                    adaptor.addChild(root_0, PUBLIC1165_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1677:4: PROTECTED
                    {
                    root_0 = (Object)adaptor.nil();


                    PROTECTED1166=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_constructor_modifier7475); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED1166_tree = 
                    (Object)adaptor.create(PROTECTED1166)
                    ;
                    adaptor.addChild(root_0, PROTECTED1166_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1678:4: INTERNAL
                    {
                    root_0 = (Object)adaptor.nil();


                    INTERNAL1167=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_constructor_modifier7480); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL1167_tree = 
                    (Object)adaptor.create(INTERNAL1167)
                    ;
                    adaptor.addChild(root_0, INTERNAL1167_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1679:4: PRIVATE
                    {
                    root_0 = (Object)adaptor.nil();


                    PRIVATE1168=(Token)match(input,PRIVATE,FOLLOW_PRIVATE_in_constructor_modifier7485); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PRIVATE1168_tree = 
                    (Object)adaptor.create(PRIVATE1168)
                    ;
                    adaptor.addChild(root_0, PRIVATE1168_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1680:4: EXTERN
                    {
                    root_0 = (Object)adaptor.nil();


                    EXTERN1169=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_constructor_modifier7490); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN1169_tree = 
                    (Object)adaptor.create(EXTERN1169)
                    ;
                    adaptor.addChild(root_0, EXTERN1169_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:1681:4: constructor_modifier_unsafe
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_constructor_modifier_unsafe_in_constructor_modifier7495);
                    constructor_modifier_unsafe1170=constructor_modifier_unsafe();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_modifier_unsafe1170.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constructor_modifier"


    public static class constructor_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constructor_declarator"
    // CSharp4.g:1683:1: constructor_declarator : IDENTIFIER OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( constructor_initializer )? ;
    public final CSharp4.constructor_declarator_return constructor_declarator() throws RecognitionException {
        CSharp4.constructor_declarator_return retval = new CSharp4.constructor_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1171=null;
        Token OPEN_PARENS1172=null;
        Token CLOSE_PARENS1174=null;
        CSharp4.formal_parameter_list_return formal_parameter_list1173 =null;

        CSharp4.constructor_initializer_return constructor_initializer1175 =null;


        Object IDENTIFIER1171_tree=null;
        Object OPEN_PARENS1172_tree=null;
        Object CLOSE_PARENS1174_tree=null;

        try {
            // CSharp4.g:1684:2: ( IDENTIFIER OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( constructor_initializer )? )
            // CSharp4.g:1684:4: IDENTIFIER OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( constructor_initializer )?
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER1171=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_constructor_declarator7506); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1171_tree = 
            (Object)adaptor.create(IDENTIFIER1171)
            ;
            adaptor.addChild(root_0, IDENTIFIER1171_tree);
            }

            OPEN_PARENS1172=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_constructor_declarator7508); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1172_tree = 
            (Object)adaptor.create(OPEN_PARENS1172)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1172_tree);
            }

            // CSharp4.g:1684:27: ( formal_parameter_list )?
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==BOOL||LA257_0==BYTE||LA257_0==CHAR||LA257_0==DECIMAL||LA257_0==DOUBLE||LA257_0==FLOAT||LA257_0==IDENTIFIER||LA257_0==INT||LA257_0==LONG||LA257_0==OBJECT||LA257_0==OPEN_BRACKET||LA257_0==OUT||LA257_0==PARAMS||LA257_0==REF||LA257_0==SBYTE||LA257_0==SHORT||LA257_0==STRING||LA257_0==THIS||(LA257_0 >= UINT && LA257_0 <= ULONG)||LA257_0==USHORT||LA257_0==VOID) ) {
                alt257=1;
            }
            switch (alt257) {
                case 1 :
                    // CSharp4.g:1684:27: formal_parameter_list
                    {
                    pushFollow(FOLLOW_formal_parameter_list_in_constructor_declarator7510);
                    formal_parameter_list1173=formal_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list1173.getTree());

                    }
                    break;

            }


            CLOSE_PARENS1174=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_constructor_declarator7513); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1174_tree = 
            (Object)adaptor.create(CLOSE_PARENS1174)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1174_tree);
            }

            // CSharp4.g:1684:63: ( constructor_initializer )?
            int alt258=2;
            int LA258_0 = input.LA(1);

            if ( (LA258_0==COLON) ) {
                alt258=1;
            }
            switch (alt258) {
                case 1 :
                    // CSharp4.g:1684:63: constructor_initializer
                    {
                    pushFollow(FOLLOW_constructor_initializer_in_constructor_declarator7515);
                    constructor_initializer1175=constructor_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_initializer1175.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constructor_declarator"


    public static class constructor_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constructor_initializer"
    // CSharp4.g:1686:1: constructor_initializer : ( COLON BASE OPEN_PARENS ( argument_list )? CLOSE_PARENS | COLON THIS OPEN_PARENS ( argument_list )? CLOSE_PARENS );
    public final CSharp4.constructor_initializer_return constructor_initializer() throws RecognitionException {
        CSharp4.constructor_initializer_return retval = new CSharp4.constructor_initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COLON1176=null;
        Token BASE1177=null;
        Token OPEN_PARENS1178=null;
        Token CLOSE_PARENS1180=null;
        Token COLON1181=null;
        Token THIS1182=null;
        Token OPEN_PARENS1183=null;
        Token CLOSE_PARENS1185=null;
        CSharp4.argument_list_return argument_list1179 =null;

        CSharp4.argument_list_return argument_list1184 =null;


        Object COLON1176_tree=null;
        Object BASE1177_tree=null;
        Object OPEN_PARENS1178_tree=null;
        Object CLOSE_PARENS1180_tree=null;
        Object COLON1181_tree=null;
        Object THIS1182_tree=null;
        Object OPEN_PARENS1183_tree=null;
        Object CLOSE_PARENS1185_tree=null;

        try {
            // CSharp4.g:1687:2: ( COLON BASE OPEN_PARENS ( argument_list )? CLOSE_PARENS | COLON THIS OPEN_PARENS ( argument_list )? CLOSE_PARENS )
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==COLON) ) {
                int LA261_1 = input.LA(2);

                if ( (LA261_1==BASE) ) {
                    alt261=1;
                }
                else if ( (LA261_1==THIS) ) {
                    alt261=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 261, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 261, 0, input);

                throw nvae;

            }
            switch (alt261) {
                case 1 :
                    // CSharp4.g:1687:4: COLON BASE OPEN_PARENS ( argument_list )? CLOSE_PARENS
                    {
                    root_0 = (Object)adaptor.nil();


                    COLON1176=(Token)match(input,COLON,FOLLOW_COLON_in_constructor_initializer7527); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON1176_tree = 
                    (Object)adaptor.create(COLON1176)
                    ;
                    adaptor.addChild(root_0, COLON1176_tree);
                    }

                    BASE1177=(Token)match(input,BASE,FOLLOW_BASE_in_constructor_initializer7529); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BASE1177_tree = 
                    (Object)adaptor.create(BASE1177)
                    ;
                    adaptor.addChild(root_0, BASE1177_tree);
                    }

                    OPEN_PARENS1178=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_constructor_initializer7531); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS1178_tree = 
                    (Object)adaptor.create(OPEN_PARENS1178)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS1178_tree);
                    }

                    // CSharp4.g:1687:27: ( argument_list )?
                    int alt259=2;
                    int LA259_0 = input.LA(1);

                    if ( (LA259_0==AMP||(LA259_0 >= BANG && LA259_0 <= BASE)||LA259_0==BOOL||LA259_0==BYTE||(LA259_0 >= CHAR && LA259_0 <= CHECKED)||LA259_0==DECIMAL||(LA259_0 >= DEFAULT && LA259_0 <= DELEGATE)||LA259_0==DOUBLE||LA259_0==FALSE||LA259_0==FLOAT||LA259_0==IDENTIFIER||(LA259_0 >= INT && LA259_0 <= INTEGER_LITERAL)||LA259_0==LONG||LA259_0==MINUS||LA259_0==NEW||LA259_0==NULL||LA259_0==OBJECT||LA259_0==OPEN_PARENS||LA259_0==OP_DEC||LA259_0==OP_INC||LA259_0==OUT||LA259_0==PLUS||(LA259_0 >= REAL_LITERAL && LA259_0 <= REF)||LA259_0==SBYTE||LA259_0==SHORT||LA259_0==SIZEOF||LA259_0==STAR||(LA259_0 >= STRING && LA259_0 <= STRING_LITERAL)||LA259_0==THIS||(LA259_0 >= TILDE && LA259_0 <= TRUE)||(LA259_0 >= TYPEOF && LA259_0 <= UNCHECKED)||LA259_0==USHORT) ) {
                        alt259=1;
                    }
                    switch (alt259) {
                        case 1 :
                            // CSharp4.g:1687:27: argument_list
                            {
                            pushFollow(FOLLOW_argument_list_in_constructor_initializer7533);
                            argument_list1179=argument_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list1179.getTree());

                            }
                            break;

                    }


                    CLOSE_PARENS1180=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_constructor_initializer7536); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS1180_tree = 
                    (Object)adaptor.create(CLOSE_PARENS1180)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS1180_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1688:4: COLON THIS OPEN_PARENS ( argument_list )? CLOSE_PARENS
                    {
                    root_0 = (Object)adaptor.nil();


                    COLON1181=(Token)match(input,COLON,FOLLOW_COLON_in_constructor_initializer7541); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON1181_tree = 
                    (Object)adaptor.create(COLON1181)
                    ;
                    adaptor.addChild(root_0, COLON1181_tree);
                    }

                    THIS1182=(Token)match(input,THIS,FOLLOW_THIS_in_constructor_initializer7543); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    THIS1182_tree = 
                    (Object)adaptor.create(THIS1182)
                    ;
                    adaptor.addChild(root_0, THIS1182_tree);
                    }

                    OPEN_PARENS1183=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_constructor_initializer7545); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS1183_tree = 
                    (Object)adaptor.create(OPEN_PARENS1183)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS1183_tree);
                    }

                    // CSharp4.g:1688:27: ( argument_list )?
                    int alt260=2;
                    int LA260_0 = input.LA(1);

                    if ( (LA260_0==AMP||(LA260_0 >= BANG && LA260_0 <= BASE)||LA260_0==BOOL||LA260_0==BYTE||(LA260_0 >= CHAR && LA260_0 <= CHECKED)||LA260_0==DECIMAL||(LA260_0 >= DEFAULT && LA260_0 <= DELEGATE)||LA260_0==DOUBLE||LA260_0==FALSE||LA260_0==FLOAT||LA260_0==IDENTIFIER||(LA260_0 >= INT && LA260_0 <= INTEGER_LITERAL)||LA260_0==LONG||LA260_0==MINUS||LA260_0==NEW||LA260_0==NULL||LA260_0==OBJECT||LA260_0==OPEN_PARENS||LA260_0==OP_DEC||LA260_0==OP_INC||LA260_0==OUT||LA260_0==PLUS||(LA260_0 >= REAL_LITERAL && LA260_0 <= REF)||LA260_0==SBYTE||LA260_0==SHORT||LA260_0==SIZEOF||LA260_0==STAR||(LA260_0 >= STRING && LA260_0 <= STRING_LITERAL)||LA260_0==THIS||(LA260_0 >= TILDE && LA260_0 <= TRUE)||(LA260_0 >= TYPEOF && LA260_0 <= UNCHECKED)||LA260_0==USHORT) ) {
                        alt260=1;
                    }
                    switch (alt260) {
                        case 1 :
                            // CSharp4.g:1688:27: argument_list
                            {
                            pushFollow(FOLLOW_argument_list_in_constructor_initializer7547);
                            argument_list1184=argument_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list1184.getTree());

                            }
                            break;

                    }


                    CLOSE_PARENS1185=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_constructor_initializer7550); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS1185_tree = 
                    (Object)adaptor.create(CLOSE_PARENS1185)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS1185_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constructor_initializer"


    public static class constructor_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constructor_body"
    // CSharp4.g:1690:1: constructor_body : ( block | SEMICOLON );
    public final CSharp4.constructor_body_return constructor_body() throws RecognitionException {
        CSharp4.constructor_body_return retval = new CSharp4.constructor_body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SEMICOLON1187=null;
        CSharp4.block_return block1186 =null;


        Object SEMICOLON1187_tree=null;

        try {
            // CSharp4.g:1691:2: ( block | SEMICOLON )
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( (LA262_0==OPEN_BRACE) ) {
                alt262=1;
            }
            else if ( (LA262_0==SEMICOLON) ) {
                alt262=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 262, 0, input);

                throw nvae;

            }
            switch (alt262) {
                case 1 :
                    // CSharp4.g:1691:4: block
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_block_in_constructor_body7561);
                    block1186=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block1186.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1692:4: SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    SEMICOLON1187=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_constructor_body7566); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1187_tree = 
                    (Object)adaptor.create(SEMICOLON1187)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1187_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constructor_body"


    public static class static_constructor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "static_constructor_declaration"
    // CSharp4.g:1694:1: static_constructor_declaration : ( attributes )? static_constructor_modifiers IDENTIFIER OPEN_PARENS CLOSE_PARENS static_constructor_body ;
    public final CSharp4.static_constructor_declaration_return static_constructor_declaration() throws RecognitionException {
        CSharp4.static_constructor_declaration_return retval = new CSharp4.static_constructor_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1190=null;
        Token OPEN_PARENS1191=null;
        Token CLOSE_PARENS1192=null;
        CSharp4.attributes_return attributes1188 =null;

        CSharp4.static_constructor_modifiers_return static_constructor_modifiers1189 =null;

        CSharp4.static_constructor_body_return static_constructor_body1193 =null;


        Object IDENTIFIER1190_tree=null;
        Object OPEN_PARENS1191_tree=null;
        Object CLOSE_PARENS1192_tree=null;

        try {
            // CSharp4.g:1695:2: ( ( attributes )? static_constructor_modifiers IDENTIFIER OPEN_PARENS CLOSE_PARENS static_constructor_body )
            // CSharp4.g:1695:4: ( attributes )? static_constructor_modifiers IDENTIFIER OPEN_PARENS CLOSE_PARENS static_constructor_body
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1695:4: ( attributes )?
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==OPEN_BRACKET) ) {
                alt263=1;
            }
            switch (alt263) {
                case 1 :
                    // CSharp4.g:1695:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_static_constructor_declaration7577);
                    attributes1188=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1188.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_static_constructor_modifiers_in_static_constructor_declaration7580);
            static_constructor_modifiers1189=static_constructor_modifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, static_constructor_modifiers1189.getTree());

            IDENTIFIER1190=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_static_constructor_declaration7582); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1190_tree = 
            (Object)adaptor.create(IDENTIFIER1190)
            ;
            adaptor.addChild(root_0, IDENTIFIER1190_tree);
            }

            OPEN_PARENS1191=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_static_constructor_declaration7584); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1191_tree = 
            (Object)adaptor.create(OPEN_PARENS1191)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1191_tree);
            }

            CLOSE_PARENS1192=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_static_constructor_declaration7586); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1192_tree = 
            (Object)adaptor.create(CLOSE_PARENS1192)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1192_tree);
            }

            pushFollow(FOLLOW_static_constructor_body_in_static_constructor_declaration7588);
            static_constructor_body1193=static_constructor_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, static_constructor_body1193.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "static_constructor_declaration"


    public static class static_constructor_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "static_constructor_modifiers"
    // CSharp4.g:1704:1: static_constructor_modifiers : static_constructor_modifiers_unsafe ;
    public final CSharp4.static_constructor_modifiers_return static_constructor_modifiers() throws RecognitionException {
        CSharp4.static_constructor_modifiers_return retval = new CSharp4.static_constructor_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.static_constructor_modifiers_unsafe_return static_constructor_modifiers_unsafe1194 =null;



        try {
            // CSharp4.g:1705:3: ( static_constructor_modifiers_unsafe )
            // CSharp4.g:1705:5: static_constructor_modifiers_unsafe
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_static_constructor_modifiers_unsafe_in_static_constructor_modifiers7602);
            static_constructor_modifiers_unsafe1194=static_constructor_modifiers_unsafe();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, static_constructor_modifiers_unsafe1194.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "static_constructor_modifiers"


    public static class static_constructor_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "static_constructor_body"
    // CSharp4.g:1707:1: static_constructor_body : ( block | SEMICOLON );
    public final CSharp4.static_constructor_body_return static_constructor_body() throws RecognitionException {
        CSharp4.static_constructor_body_return retval = new CSharp4.static_constructor_body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SEMICOLON1196=null;
        CSharp4.block_return block1195 =null;


        Object SEMICOLON1196_tree=null;

        try {
            // CSharp4.g:1708:2: ( block | SEMICOLON )
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==OPEN_BRACE) ) {
                alt264=1;
            }
            else if ( (LA264_0==SEMICOLON) ) {
                alt264=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 264, 0, input);

                throw nvae;

            }
            switch (alt264) {
                case 1 :
                    // CSharp4.g:1708:4: block
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_block_in_static_constructor_body7614);
                    block1195=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block1195.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1709:4: SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    SEMICOLON1196=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_static_constructor_body7619); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1196_tree = 
                    (Object)adaptor.create(SEMICOLON1196)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1196_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "static_constructor_body"


    public static class destructor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "destructor_declaration"
    // CSharp4.g:1717:1: destructor_declaration : destructor_declaration_unsafe ;
    public final CSharp4.destructor_declaration_return destructor_declaration() throws RecognitionException {
        CSharp4.destructor_declaration_return retval = new CSharp4.destructor_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.destructor_declaration_unsafe_return destructor_declaration_unsafe1197 =null;



        try {
            // CSharp4.g:1718:2: ( destructor_declaration_unsafe )
            // CSharp4.g:1718:4: destructor_declaration_unsafe
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_destructor_declaration_unsafe_in_destructor_declaration7632);
            destructor_declaration_unsafe1197=destructor_declaration_unsafe();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, destructor_declaration_unsafe1197.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "destructor_declaration"


    public static class destructor_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "destructor_body"
    // CSharp4.g:1720:1: destructor_body : ( block | SEMICOLON );
    public final CSharp4.destructor_body_return destructor_body() throws RecognitionException {
        CSharp4.destructor_body_return retval = new CSharp4.destructor_body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SEMICOLON1199=null;
        CSharp4.block_return block1198 =null;


        Object SEMICOLON1199_tree=null;

        try {
            // CSharp4.g:1721:2: ( block | SEMICOLON )
            int alt265=2;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==OPEN_BRACE) ) {
                alt265=1;
            }
            else if ( (LA265_0==SEMICOLON) ) {
                alt265=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 265, 0, input);

                throw nvae;

            }
            switch (alt265) {
                case 1 :
                    // CSharp4.g:1721:4: block
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_block_in_destructor_body7643);
                    block1198=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block1198.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1722:4: SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    SEMICOLON1199=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_destructor_body7648); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1199_tree = 
                    (Object)adaptor.create(SEMICOLON1199)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1199_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "destructor_body"


    public static class body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "body"
    // CSharp4.g:1725:1: body : ( block | SEMICOLON );
    public final CSharp4.body_return body() throws RecognitionException {
        CSharp4.body_return retval = new CSharp4.body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SEMICOLON1201=null;
        CSharp4.block_return block1200 =null;


        Object SEMICOLON1201_tree=null;

        try {
            // CSharp4.g:1726:3: ( block | SEMICOLON )
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==OPEN_BRACE) ) {
                alt266=1;
            }
            else if ( (LA266_0==SEMICOLON) ) {
                alt266=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 266, 0, input);

                throw nvae;

            }
            switch (alt266) {
                case 1 :
                    // CSharp4.g:1726:5: block
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_block_in_body7660);
                    block1200=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block1200.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1727:5: SEMICOLON
                    {
                    root_0 = (Object)adaptor.nil();


                    SEMICOLON1201=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_body7666); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1201_tree = 
                    (Object)adaptor.create(SEMICOLON1201)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1201_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "body"


    public static class struct_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_declaration"
    // CSharp4.g:1731:1: struct_declaration : ( attributes )? ( struct_modifiers )? ( partial_contextual_keyword )? STRUCT IDENTIFIER ( type_parameter_list )? ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( SEMICOLON )? ;
    public final CSharp4.struct_declaration_return struct_declaration() throws RecognitionException {
        CSharp4.struct_declaration_return retval = new CSharp4.struct_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token STRUCT1205=null;
        Token IDENTIFIER1206=null;
        Token SEMICOLON1211=null;
        CSharp4.attributes_return attributes1202 =null;

        CSharp4.struct_modifiers_return struct_modifiers1203 =null;

        CSharp4.partial_contextual_keyword_return partial_contextual_keyword1204 =null;

        CSharp4.type_parameter_list_return type_parameter_list1207 =null;

        CSharp4.struct_interfaces_return struct_interfaces1208 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses1209 =null;

        CSharp4.struct_body_return struct_body1210 =null;


        Object STRUCT1205_tree=null;
        Object IDENTIFIER1206_tree=null;
        Object SEMICOLON1211_tree=null;

        try {
            // CSharp4.g:1732:2: ( ( attributes )? ( struct_modifiers )? ( partial_contextual_keyword )? STRUCT IDENTIFIER ( type_parameter_list )? ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( SEMICOLON )? )
            // CSharp4.g:1732:4: ( attributes )? ( struct_modifiers )? ( partial_contextual_keyword )? STRUCT IDENTIFIER ( type_parameter_list )? ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( SEMICOLON )?
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1732:4: ( attributes )?
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==OPEN_BRACKET) ) {
                alt267=1;
            }
            switch (alt267) {
                case 1 :
                    // CSharp4.g:1732:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_struct_declaration7680);
                    attributes1202=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1202.getTree());

                    }
                    break;

            }


            // CSharp4.g:1732:16: ( struct_modifiers )?
            int alt268=2;
            int LA268_0 = input.LA(1);

            if ( (LA268_0==INTERNAL||LA268_0==NEW||(LA268_0 >= PRIVATE && LA268_0 <= PUBLIC)||LA268_0==UNSAFE) ) {
                alt268=1;
            }
            switch (alt268) {
                case 1 :
                    // CSharp4.g:1732:16: struct_modifiers
                    {
                    pushFollow(FOLLOW_struct_modifiers_in_struct_declaration7683);
                    struct_modifiers1203=struct_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_modifiers1203.getTree());

                    }
                    break;

            }


            // CSharp4.g:1732:34: ( partial_contextual_keyword )?
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==IDENTIFIER) ) {
                alt269=1;
            }
            switch (alt269) {
                case 1 :
                    // CSharp4.g:1732:34: partial_contextual_keyword
                    {
                    pushFollow(FOLLOW_partial_contextual_keyword_in_struct_declaration7686);
                    partial_contextual_keyword1204=partial_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, partial_contextual_keyword1204.getTree());

                    }
                    break;

            }


            STRUCT1205=(Token)match(input,STRUCT,FOLLOW_STRUCT_in_struct_declaration7689); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            STRUCT1205_tree = 
            (Object)adaptor.create(STRUCT1205)
            ;
            adaptor.addChild(root_0, STRUCT1205_tree);
            }

            IDENTIFIER1206=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_struct_declaration7691); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1206_tree = 
            (Object)adaptor.create(IDENTIFIER1206)
            ;
            adaptor.addChild(root_0, IDENTIFIER1206_tree);
            }

            // CSharp4.g:1732:80: ( type_parameter_list )?
            int alt270=2;
            int LA270_0 = input.LA(1);

            if ( (LA270_0==LT) ) {
                alt270=1;
            }
            switch (alt270) {
                case 1 :
                    // CSharp4.g:1732:80: type_parameter_list
                    {
                    pushFollow(FOLLOW_type_parameter_list_in_struct_declaration7693);
                    type_parameter_list1207=type_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_list1207.getTree());

                    }
                    break;

            }


            // CSharp4.g:1732:101: ( struct_interfaces )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==COLON) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // CSharp4.g:1732:101: struct_interfaces
                    {
                    pushFollow(FOLLOW_struct_interfaces_in_struct_declaration7696);
                    struct_interfaces1208=struct_interfaces();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_interfaces1208.getTree());

                    }
                    break;

            }


            // CSharp4.g:1732:120: ( type_parameter_constraints_clauses )?
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==IDENTIFIER) ) {
                alt272=1;
            }
            switch (alt272) {
                case 1 :
                    // CSharp4.g:1732:120: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_struct_declaration7699);
                    type_parameter_constraints_clauses1209=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses1209.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_struct_body_in_struct_declaration7702);
            struct_body1210=struct_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_body1210.getTree());

            // CSharp4.g:1732:168: ( SEMICOLON )?
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==SEMICOLON) ) {
                alt273=1;
            }
            switch (alt273) {
                case 1 :
                    // CSharp4.g:1732:168: SEMICOLON
                    {
                    SEMICOLON1211=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_struct_declaration7704); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1211_tree = 
                    (Object)adaptor.create(SEMICOLON1211)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1211_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_declaration"


    public static class struct_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_modifiers"
    // CSharp4.g:1734:1: struct_modifiers : struct_modifier ( struct_modifier )* ;
    public final CSharp4.struct_modifiers_return struct_modifiers() throws RecognitionException {
        CSharp4.struct_modifiers_return retval = new CSharp4.struct_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.struct_modifier_return struct_modifier1212 =null;

        CSharp4.struct_modifier_return struct_modifier1213 =null;



        try {
            // CSharp4.g:1735:2: ( struct_modifier ( struct_modifier )* )
            // CSharp4.g:1735:4: struct_modifier ( struct_modifier )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_struct_modifier_in_struct_modifiers7716);
            struct_modifier1212=struct_modifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_modifier1212.getTree());

            // CSharp4.g:1735:20: ( struct_modifier )*
            loop274:
            do {
                int alt274=2;
                int LA274_0 = input.LA(1);

                if ( (LA274_0==INTERNAL||LA274_0==NEW||(LA274_0 >= PRIVATE && LA274_0 <= PUBLIC)||LA274_0==UNSAFE) ) {
                    alt274=1;
                }


                switch (alt274) {
            	case 1 :
            	    // CSharp4.g:1735:22: struct_modifier
            	    {
            	    pushFollow(FOLLOW_struct_modifier_in_struct_modifiers7720);
            	    struct_modifier1213=struct_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_modifier1213.getTree());

            	    }
            	    break;

            	default :
            	    break loop274;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_modifiers"


    public static class struct_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_modifier"
    // CSharp4.g:1737:1: struct_modifier : ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | struct_modifier_unsafe );
    public final CSharp4.struct_modifier_return struct_modifier() throws RecognitionException {
        CSharp4.struct_modifier_return retval = new CSharp4.struct_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW1214=null;
        Token PUBLIC1215=null;
        Token PROTECTED1216=null;
        Token INTERNAL1217=null;
        Token PRIVATE1218=null;
        CSharp4.struct_modifier_unsafe_return struct_modifier_unsafe1219 =null;


        Object NEW1214_tree=null;
        Object PUBLIC1215_tree=null;
        Object PROTECTED1216_tree=null;
        Object INTERNAL1217_tree=null;
        Object PRIVATE1218_tree=null;

        try {
            // CSharp4.g:1738:2: ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | struct_modifier_unsafe )
            int alt275=6;
            switch ( input.LA(1) ) {
            case NEW:
                {
                alt275=1;
                }
                break;
            case PUBLIC:
                {
                alt275=2;
                }
                break;
            case PROTECTED:
                {
                alt275=3;
                }
                break;
            case INTERNAL:
                {
                alt275=4;
                }
                break;
            case PRIVATE:
                {
                alt275=5;
                }
                break;
            case UNSAFE:
                {
                alt275=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 275, 0, input);

                throw nvae;

            }

            switch (alt275) {
                case 1 :
                    // CSharp4.g:1738:4: NEW
                    {
                    root_0 = (Object)adaptor.nil();


                    NEW1214=(Token)match(input,NEW,FOLLOW_NEW_in_struct_modifier7734); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW1214_tree = 
                    (Object)adaptor.create(NEW1214)
                    ;
                    adaptor.addChild(root_0, NEW1214_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1739:4: PUBLIC
                    {
                    root_0 = (Object)adaptor.nil();


                    PUBLIC1215=(Token)match(input,PUBLIC,FOLLOW_PUBLIC_in_struct_modifier7739); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PUBLIC1215_tree = 
                    (Object)adaptor.create(PUBLIC1215)
                    ;
                    adaptor.addChild(root_0, PUBLIC1215_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1740:4: PROTECTED
                    {
                    root_0 = (Object)adaptor.nil();


                    PROTECTED1216=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_struct_modifier7744); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED1216_tree = 
                    (Object)adaptor.create(PROTECTED1216)
                    ;
                    adaptor.addChild(root_0, PROTECTED1216_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1741:4: INTERNAL
                    {
                    root_0 = (Object)adaptor.nil();


                    INTERNAL1217=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_struct_modifier7749); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL1217_tree = 
                    (Object)adaptor.create(INTERNAL1217)
                    ;
                    adaptor.addChild(root_0, INTERNAL1217_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1742:4: PRIVATE
                    {
                    root_0 = (Object)adaptor.nil();


                    PRIVATE1218=(Token)match(input,PRIVATE,FOLLOW_PRIVATE_in_struct_modifier7754); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PRIVATE1218_tree = 
                    (Object)adaptor.create(PRIVATE1218)
                    ;
                    adaptor.addChild(root_0, PRIVATE1218_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:1743:4: struct_modifier_unsafe
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_struct_modifier_unsafe_in_struct_modifier7759);
                    struct_modifier_unsafe1219=struct_modifier_unsafe();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_modifier_unsafe1219.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_modifier"


    public static class struct_interfaces_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_interfaces"
    // CSharp4.g:1745:1: struct_interfaces : COLON interface_type_list ;
    public final CSharp4.struct_interfaces_return struct_interfaces() throws RecognitionException {
        CSharp4.struct_interfaces_return retval = new CSharp4.struct_interfaces_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COLON1220=null;
        CSharp4.interface_type_list_return interface_type_list1221 =null;


        Object COLON1220_tree=null;

        try {
            // CSharp4.g:1746:2: ( COLON interface_type_list )
            // CSharp4.g:1746:4: COLON interface_type_list
            {
            root_0 = (Object)adaptor.nil();


            COLON1220=(Token)match(input,COLON,FOLLOW_COLON_in_struct_interfaces7770); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COLON1220_tree = 
            (Object)adaptor.create(COLON1220)
            ;
            adaptor.addChild(root_0, COLON1220_tree);
            }

            pushFollow(FOLLOW_interface_type_list_in_struct_interfaces7772);
            interface_type_list1221=interface_type_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type_list1221.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_interfaces"


    public static class struct_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_body"
    // CSharp4.g:1748:1: struct_body : OPEN_BRACE ( struct_member_declarations )? CLOSE_BRACE ;
    public final CSharp4.struct_body_return struct_body() throws RecognitionException {
        CSharp4.struct_body_return retval = new CSharp4.struct_body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE1222=null;
        Token CLOSE_BRACE1224=null;
        CSharp4.struct_member_declarations_return struct_member_declarations1223 =null;


        Object OPEN_BRACE1222_tree=null;
        Object CLOSE_BRACE1224_tree=null;

        try {
            // CSharp4.g:1749:2: ( OPEN_BRACE ( struct_member_declarations )? CLOSE_BRACE )
            // CSharp4.g:1749:4: OPEN_BRACE ( struct_member_declarations )? CLOSE_BRACE
            {
            root_0 = (Object)adaptor.nil();


            OPEN_BRACE1222=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_struct_body7783); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACE1222_tree = 
            (Object)adaptor.create(OPEN_BRACE1222)
            ;
            adaptor.addChild(root_0, OPEN_BRACE1222_tree);
            }

            // CSharp4.g:1749:15: ( struct_member_declarations )?
            int alt276=2;
            int LA276_0 = input.LA(1);

            if ( (LA276_0==ABSTRACT||LA276_0==BOOL||LA276_0==BYTE||LA276_0==CHAR||LA276_0==CLASS||LA276_0==CONST||LA276_0==DECIMAL||LA276_0==DELEGATE||LA276_0==DOUBLE||(LA276_0 >= ENUM && LA276_0 <= EXTERN)||(LA276_0 >= FIXED && LA276_0 <= FLOAT)||LA276_0==IDENTIFIER||LA276_0==IMPLICIT||LA276_0==INT||(LA276_0 >= INTERFACE && LA276_0 <= INTERNAL)||LA276_0==LONG||LA276_0==NEW||LA276_0==OBJECT||LA276_0==OPEN_BRACKET||LA276_0==OVERRIDE||(LA276_0 >= PRIVATE && LA276_0 <= PUBLIC)||LA276_0==READONLY||(LA276_0 >= SBYTE && LA276_0 <= SEALED)||LA276_0==SHORT||(LA276_0 >= STATIC && LA276_0 <= STRING)||LA276_0==STRUCT||(LA276_0 >= UINT && LA276_0 <= ULONG)||(LA276_0 >= UNSAFE && LA276_0 <= USHORT)||(LA276_0 >= VIRTUAL && LA276_0 <= VOLATILE)) ) {
                alt276=1;
            }
            switch (alt276) {
                case 1 :
                    // CSharp4.g:1749:15: struct_member_declarations
                    {
                    pushFollow(FOLLOW_struct_member_declarations_in_struct_body7785);
                    struct_member_declarations1223=struct_member_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_member_declarations1223.getTree());

                    }
                    break;

            }


            CLOSE_BRACE1224=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_struct_body7788); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACE1224_tree = 
            (Object)adaptor.create(CLOSE_BRACE1224)
            ;
            adaptor.addChild(root_0, CLOSE_BRACE1224_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_body"


    public static class struct_member_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_member_declarations"
    // CSharp4.g:1751:1: struct_member_declarations : struct_member_declaration ( struct_member_declaration )* ;
    public final CSharp4.struct_member_declarations_return struct_member_declarations() throws RecognitionException {
        CSharp4.struct_member_declarations_return retval = new CSharp4.struct_member_declarations_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.struct_member_declaration_return struct_member_declaration1225 =null;

        CSharp4.struct_member_declaration_return struct_member_declaration1226 =null;



        try {
            // CSharp4.g:1752:2: ( struct_member_declaration ( struct_member_declaration )* )
            // CSharp4.g:1752:4: struct_member_declaration ( struct_member_declaration )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_struct_member_declaration_in_struct_member_declarations7799);
            struct_member_declaration1225=struct_member_declaration();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_member_declaration1225.getTree());

            // CSharp4.g:1752:30: ( struct_member_declaration )*
            loop277:
            do {
                int alt277=2;
                int LA277_0 = input.LA(1);

                if ( (LA277_0==ABSTRACT||LA277_0==BOOL||LA277_0==BYTE||LA277_0==CHAR||LA277_0==CLASS||LA277_0==CONST||LA277_0==DECIMAL||LA277_0==DELEGATE||LA277_0==DOUBLE||(LA277_0 >= ENUM && LA277_0 <= EXTERN)||(LA277_0 >= FIXED && LA277_0 <= FLOAT)||LA277_0==IDENTIFIER||LA277_0==IMPLICIT||LA277_0==INT||(LA277_0 >= INTERFACE && LA277_0 <= INTERNAL)||LA277_0==LONG||LA277_0==NEW||LA277_0==OBJECT||LA277_0==OPEN_BRACKET||LA277_0==OVERRIDE||(LA277_0 >= PRIVATE && LA277_0 <= PUBLIC)||LA277_0==READONLY||(LA277_0 >= SBYTE && LA277_0 <= SEALED)||LA277_0==SHORT||(LA277_0 >= STATIC && LA277_0 <= STRING)||LA277_0==STRUCT||(LA277_0 >= UINT && LA277_0 <= ULONG)||(LA277_0 >= UNSAFE && LA277_0 <= USHORT)||(LA277_0 >= VIRTUAL && LA277_0 <= VOLATILE)) ) {
                    alt277=1;
                }


                switch (alt277) {
            	case 1 :
            	    // CSharp4.g:1752:32: struct_member_declaration
            	    {
            	    pushFollow(FOLLOW_struct_member_declaration_in_struct_member_declarations7803);
            	    struct_member_declaration1226=struct_member_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_member_declaration1226.getTree());

            	    }
            	    break;

            	default :
            	    break loop277;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_member_declarations"


    public static class struct_member_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_member_declaration"
    // CSharp4.g:1769:1: struct_member_declaration : ( attributes )? ( all_member_modifiers )? ( common_member_declaration | FIXED buffer_element_type fixed_size_buffer_declarators SEMICOLON ) ;
    public final CSharp4.struct_member_declaration_return struct_member_declaration() throws RecognitionException {
        CSharp4.struct_member_declaration_return retval = new CSharp4.struct_member_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token FIXED1230=null;
        Token SEMICOLON1233=null;
        CSharp4.attributes_return attributes1227 =null;

        CSharp4.all_member_modifiers_return all_member_modifiers1228 =null;

        CSharp4.common_member_declaration_return common_member_declaration1229 =null;

        CSharp4.buffer_element_type_return buffer_element_type1231 =null;

        CSharp4.fixed_size_buffer_declarators_return fixed_size_buffer_declarators1232 =null;


        Object FIXED1230_tree=null;
        Object SEMICOLON1233_tree=null;

        try {
            // CSharp4.g:1770:2: ( ( attributes )? ( all_member_modifiers )? ( common_member_declaration | FIXED buffer_element_type fixed_size_buffer_declarators SEMICOLON ) )
            // CSharp4.g:1770:4: ( attributes )? ( all_member_modifiers )? ( common_member_declaration | FIXED buffer_element_type fixed_size_buffer_declarators SEMICOLON )
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1770:4: ( attributes )?
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==OPEN_BRACKET) ) {
                alt278=1;
            }
            switch (alt278) {
                case 1 :
                    // CSharp4.g:1770:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_struct_member_declaration7819);
                    attributes1227=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1227.getTree());

                    }
                    break;

            }


            // CSharp4.g:1770:16: ( all_member_modifiers )?
            int alt279=2;
            int LA279_0 = input.LA(1);

            if ( (LA279_0==ABSTRACT||LA279_0==EXTERN||LA279_0==INTERNAL||LA279_0==NEW||LA279_0==OVERRIDE||(LA279_0 >= PRIVATE && LA279_0 <= PUBLIC)||LA279_0==READONLY||LA279_0==SEALED||LA279_0==STATIC||LA279_0==UNSAFE||LA279_0==VIRTUAL||LA279_0==VOLATILE) ) {
                alt279=1;
            }
            else if ( (LA279_0==IDENTIFIER) ) {
                int LA279_15 = input.LA(2);

                if ( ((input.LT(1).getText().equals("partial"))) ) {
                    alt279=1;
                }
            }
            switch (alt279) {
                case 1 :
                    // CSharp4.g:1770:16: all_member_modifiers
                    {
                    pushFollow(FOLLOW_all_member_modifiers_in_struct_member_declaration7822);
                    all_member_modifiers1228=all_member_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, all_member_modifiers1228.getTree());

                    }
                    break;

            }


            // CSharp4.g:1771:3: ( common_member_declaration | FIXED buffer_element_type fixed_size_buffer_declarators SEMICOLON )
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==BOOL||LA280_0==BYTE||LA280_0==CHAR||LA280_0==CLASS||LA280_0==CONST||LA280_0==DECIMAL||LA280_0==DELEGATE||LA280_0==DOUBLE||(LA280_0 >= ENUM && LA280_0 <= EXPLICIT)||LA280_0==FLOAT||LA280_0==IDENTIFIER||LA280_0==IMPLICIT||LA280_0==INT||LA280_0==INTERFACE||LA280_0==LONG||LA280_0==OBJECT||LA280_0==SBYTE||LA280_0==SHORT||LA280_0==STRING||LA280_0==STRUCT||(LA280_0 >= UINT && LA280_0 <= ULONG)||LA280_0==USHORT||LA280_0==VOID) ) {
                alt280=1;
            }
            else if ( (LA280_0==FIXED) ) {
                alt280=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 280, 0, input);

                throw nvae;

            }
            switch (alt280) {
                case 1 :
                    // CSharp4.g:1771:5: common_member_declaration
                    {
                    pushFollow(FOLLOW_common_member_declaration_in_struct_member_declaration7829);
                    common_member_declaration1229=common_member_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, common_member_declaration1229.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1772:5: FIXED buffer_element_type fixed_size_buffer_declarators SEMICOLON
                    {
                    FIXED1230=(Token)match(input,FIXED,FOLLOW_FIXED_in_struct_member_declaration7835); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    FIXED1230_tree = 
                    (Object)adaptor.create(FIXED1230)
                    ;
                    adaptor.addChild(root_0, FIXED1230_tree);
                    }

                    pushFollow(FOLLOW_buffer_element_type_in_struct_member_declaration7837);
                    buffer_element_type1231=buffer_element_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, buffer_element_type1231.getTree());

                    pushFollow(FOLLOW_fixed_size_buffer_declarators_in_struct_member_declaration7839);
                    fixed_size_buffer_declarators1232=fixed_size_buffer_declarators();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_size_buffer_declarators1232.getTree());

                    SEMICOLON1233=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_struct_member_declaration7841); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1233_tree = 
                    (Object)adaptor.create(SEMICOLON1233)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1233_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_member_declaration"


    public static class array_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "array_type"
    // CSharp4.g:1782:1: array_type : base_type ( ( STAR | INTERR )* rank_specifier )+ ;
    public final CSharp4.array_type_return array_type() throws RecognitionException {
        CSharp4.array_type_return retval = new CSharp4.array_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set1235=null;
        CSharp4.base_type_return base_type1234 =null;

        CSharp4.rank_specifier_return rank_specifier1236 =null;


        Object set1235_tree=null;

        try {
            // CSharp4.g:1783:2: ( base_type ( ( STAR | INTERR )* rank_specifier )+ )
            // CSharp4.g:1783:4: base_type ( ( STAR | INTERR )* rank_specifier )+
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_base_type_in_array_type7861);
            base_type1234=base_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, base_type1234.getTree());

            // CSharp4.g:1783:14: ( ( STAR | INTERR )* rank_specifier )+
            int cnt282=0;
            loop282:
            do {
                int alt282=2;
                int LA282_0 = input.LA(1);

                if ( (LA282_0==OPEN_BRACKET) ) {
                    int LA282_2 = input.LA(2);

                    if ( (LA282_2==CLOSE_BRACKET||LA282_2==COMMA) ) {
                        alt282=1;
                    }


                }
                else if ( (LA282_0==INTERR||LA282_0==STAR) ) {
                    alt282=1;
                }


                switch (alt282) {
            	case 1 :
            	    // CSharp4.g:1783:15: ( STAR | INTERR )* rank_specifier
            	    {
            	    // CSharp4.g:1783:15: ( STAR | INTERR )*
            	    loop281:
            	    do {
            	        int alt281=2;
            	        int LA281_0 = input.LA(1);

            	        if ( (LA281_0==INTERR||LA281_0==STAR) ) {
            	            alt281=1;
            	        }


            	        switch (alt281) {
            	    	case 1 :
            	    	    // CSharp4.g:
            	    	    {
            	    	    set1235=(Token)input.LT(1);

            	    	    if ( input.LA(1)==INTERR||input.LA(1)==STAR ) {
            	    	        input.consume();
            	    	        if ( state.backtracking==0 ) adaptor.addChild(root_0, 
            	    	        (Object)adaptor.create(set1235)
            	    	        );
            	    	        state.errorRecovery=false;
            	    	        state.failed=false;
            	    	    }
            	    	    else {
            	    	        if (state.backtracking>0) {state.failed=true; return retval;}
            	    	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	    	        throw mse;
            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop281;
            	        }
            	    } while (true);


            	    pushFollow(FOLLOW_rank_specifier_in_array_type7873);
            	    rank_specifier1236=rank_specifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier1236.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt282 >= 1 ) break loop282;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(282, input);
                        throw eee;
                }
                cnt282++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "array_type"


    public static class non_array_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "non_array_type"
    // CSharp4.g:1791:1: non_array_type : base_type ( rank_specifier | INTERR | STAR )* ;
    public final CSharp4.non_array_type_return non_array_type() throws RecognitionException {
        CSharp4.non_array_type_return retval = new CSharp4.non_array_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token INTERR1239=null;
        Token STAR1240=null;
        CSharp4.base_type_return base_type1237 =null;

        CSharp4.rank_specifier_return rank_specifier1238 =null;


        Object INTERR1239_tree=null;
        Object STAR1240_tree=null;

        try {
            // CSharp4.g:1792:2: ( base_type ( rank_specifier | INTERR | STAR )* )
            // CSharp4.g:1792:4: base_type ( rank_specifier | INTERR | STAR )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_base_type_in_non_array_type7890);
            base_type1237=base_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, base_type1237.getTree());

            // CSharp4.g:1792:14: ( rank_specifier | INTERR | STAR )*
            loop283:
            do {
                int alt283=4;
                switch ( input.LA(1) ) {
                case OPEN_BRACKET:
                    {
                    int LA283_1 = input.LA(2);

                    if ( (LA283_1==CLOSE_BRACKET||LA283_1==COMMA) ) {
                        alt283=1;
                    }


                    }
                    break;
                case INTERR:
                    {
                    alt283=2;
                    }
                    break;
                case STAR:
                    {
                    alt283=3;
                    }
                    break;

                }

                switch (alt283) {
            	case 1 :
            	    // CSharp4.g:1792:15: rank_specifier
            	    {
            	    pushFollow(FOLLOW_rank_specifier_in_non_array_type7893);
            	    rank_specifier1238=rank_specifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier1238.getTree());

            	    }
            	    break;
            	case 2 :
            	    // CSharp4.g:1792:32: INTERR
            	    {
            	    INTERR1239=(Token)match(input,INTERR,FOLLOW_INTERR_in_non_array_type7897); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    INTERR1239_tree = 
            	    (Object)adaptor.create(INTERR1239)
            	    ;
            	    adaptor.addChild(root_0, INTERR1239_tree);
            	    }

            	    }
            	    break;
            	case 3 :
            	    // CSharp4.g:1792:41: STAR
            	    {
            	    STAR1240=(Token)match(input,STAR,FOLLOW_STAR_in_non_array_type7901); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    STAR1240_tree = 
            	    (Object)adaptor.create(STAR1240)
            	    ;
            	    adaptor.addChild(root_0, STAR1240_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop283;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "non_array_type"


    public static class rank_specifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "rank_specifiers"
    // CSharp4.g:1800:1: rank_specifiers : ( rank_specifier )+ ;
    public final CSharp4.rank_specifiers_return rank_specifiers() throws RecognitionException {
        CSharp4.rank_specifiers_return retval = new CSharp4.rank_specifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.rank_specifier_return rank_specifier1241 =null;



        try {
            // CSharp4.g:1801:3: ( ( rank_specifier )+ )
            // CSharp4.g:1801:5: ( rank_specifier )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1801:5: ( rank_specifier )+
            int cnt284=0;
            loop284:
            do {
                int alt284=2;
                int LA284_0 = input.LA(1);

                if ( (LA284_0==OPEN_BRACKET) ) {
                    int LA284_2 = input.LA(2);

                    if ( (LA284_2==CLOSE_BRACKET||LA284_2==COMMA) ) {
                        alt284=1;
                    }


                }


                switch (alt284) {
            	case 1 :
            	    // CSharp4.g:1801:5: rank_specifier
            	    {
            	    pushFollow(FOLLOW_rank_specifier_in_rank_specifiers7919);
            	    rank_specifier1241=rank_specifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier1241.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt284 >= 1 ) break loop284;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(284, input);
                        throw eee;
                }
                cnt284++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "rank_specifiers"


    public static class rank_specifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "rank_specifier"
    // CSharp4.g:1804:1: rank_specifier : OPEN_BRACKET ( dim_separators )? CLOSE_BRACKET ;
    public final CSharp4.rank_specifier_return rank_specifier() throws RecognitionException {
        CSharp4.rank_specifier_return retval = new CSharp4.rank_specifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACKET1242=null;
        Token CLOSE_BRACKET1244=null;
        CSharp4.dim_separators_return dim_separators1243 =null;


        Object OPEN_BRACKET1242_tree=null;
        Object CLOSE_BRACKET1244_tree=null;

        try {
            // CSharp4.g:1805:2: ( OPEN_BRACKET ( dim_separators )? CLOSE_BRACKET )
            // CSharp4.g:1805:4: OPEN_BRACKET ( dim_separators )? CLOSE_BRACKET
            {
            root_0 = (Object)adaptor.nil();


            OPEN_BRACKET1242=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_rank_specifier7934); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACKET1242_tree = 
            (Object)adaptor.create(OPEN_BRACKET1242)
            ;
            adaptor.addChild(root_0, OPEN_BRACKET1242_tree);
            }

            // CSharp4.g:1805:17: ( dim_separators )?
            int alt285=2;
            int LA285_0 = input.LA(1);

            if ( (LA285_0==COMMA) ) {
                alt285=1;
            }
            switch (alt285) {
                case 1 :
                    // CSharp4.g:1805:17: dim_separators
                    {
                    pushFollow(FOLLOW_dim_separators_in_rank_specifier7936);
                    dim_separators1243=dim_separators();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, dim_separators1243.getTree());

                    }
                    break;

            }


            CLOSE_BRACKET1244=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_rank_specifier7939); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACKET1244_tree = 
            (Object)adaptor.create(CLOSE_BRACKET1244)
            ;
            adaptor.addChild(root_0, CLOSE_BRACKET1244_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "rank_specifier"


    public static class dim_separators_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "dim_separators"
    // CSharp4.g:1807:1: dim_separators : COMMA ( COMMA )* ;
    public final CSharp4.dim_separators_return dim_separators() throws RecognitionException {
        CSharp4.dim_separators_return retval = new CSharp4.dim_separators_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA1245=null;
        Token COMMA1246=null;

        Object COMMA1245_tree=null;
        Object COMMA1246_tree=null;

        try {
            // CSharp4.g:1808:2: ( COMMA ( COMMA )* )
            // CSharp4.g:1808:4: COMMA ( COMMA )*
            {
            root_0 = (Object)adaptor.nil();


            COMMA1245=(Token)match(input,COMMA,FOLLOW_COMMA_in_dim_separators7950); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COMMA1245_tree = 
            (Object)adaptor.create(COMMA1245)
            ;
            adaptor.addChild(root_0, COMMA1245_tree);
            }

            // CSharp4.g:1808:10: ( COMMA )*
            loop286:
            do {
                int alt286=2;
                int LA286_0 = input.LA(1);

                if ( (LA286_0==COMMA) ) {
                    alt286=1;
                }


                switch (alt286) {
            	case 1 :
            	    // CSharp4.g:1808:12: COMMA
            	    {
            	    COMMA1246=(Token)match(input,COMMA,FOLLOW_COMMA_in_dim_separators7954); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA1246_tree = 
            	    (Object)adaptor.create(COMMA1246)
            	    ;
            	    adaptor.addChild(root_0, COMMA1246_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop286;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "dim_separators"


    public static class array_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "array_initializer"
    // CSharp4.g:1817:1: array_initializer : ( OPEN_BRACE CLOSE_BRACE | OPEN_BRACE variable_initializer_list ( COMMA )? CLOSE_BRACE );
    public final CSharp4.array_initializer_return array_initializer() throws RecognitionException {
        CSharp4.array_initializer_return retval = new CSharp4.array_initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE1247=null;
        Token CLOSE_BRACE1248=null;
        Token OPEN_BRACE1249=null;
        Token COMMA1251=null;
        Token CLOSE_BRACE1252=null;
        CSharp4.variable_initializer_list_return variable_initializer_list1250 =null;


        Object OPEN_BRACE1247_tree=null;
        Object CLOSE_BRACE1248_tree=null;
        Object OPEN_BRACE1249_tree=null;
        Object COMMA1251_tree=null;
        Object CLOSE_BRACE1252_tree=null;

        try {
            // CSharp4.g:1818:3: ( OPEN_BRACE CLOSE_BRACE | OPEN_BRACE variable_initializer_list ( COMMA )? CLOSE_BRACE )
            int alt288=2;
            int LA288_0 = input.LA(1);

            if ( (LA288_0==OPEN_BRACE) ) {
                int LA288_1 = input.LA(2);

                if ( (LA288_1==CLOSE_BRACE) ) {
                    alt288=1;
                }
                else if ( (LA288_1==AMP||(LA288_1 >= BANG && LA288_1 <= BASE)||LA288_1==BOOL||LA288_1==BYTE||(LA288_1 >= CHAR && LA288_1 <= CHECKED)||LA288_1==DECIMAL||(LA288_1 >= DEFAULT && LA288_1 <= DELEGATE)||LA288_1==DOUBLE||LA288_1==FALSE||LA288_1==FLOAT||LA288_1==IDENTIFIER||(LA288_1 >= INT && LA288_1 <= INTEGER_LITERAL)||LA288_1==LONG||LA288_1==MINUS||LA288_1==NEW||LA288_1==NULL||(LA288_1 >= OBJECT && LA288_1 <= OPEN_BRACE)||LA288_1==OPEN_PARENS||LA288_1==OP_DEC||LA288_1==OP_INC||LA288_1==PLUS||LA288_1==REAL_LITERAL||LA288_1==SBYTE||LA288_1==SHORT||LA288_1==SIZEOF||LA288_1==STAR||(LA288_1 >= STRING && LA288_1 <= STRING_LITERAL)||LA288_1==THIS||(LA288_1 >= TILDE && LA288_1 <= TRUE)||(LA288_1 >= TYPEOF && LA288_1 <= UNCHECKED)||LA288_1==USHORT) ) {
                    alt288=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 288, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 288, 0, input);

                throw nvae;

            }
            switch (alt288) {
                case 1 :
                    // CSharp4.g:1818:5: OPEN_BRACE CLOSE_BRACE
                    {
                    root_0 = (Object)adaptor.nil();


                    OPEN_BRACE1247=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_array_initializer7973); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACE1247_tree = 
                    (Object)adaptor.create(OPEN_BRACE1247)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACE1247_tree);
                    }

                    CLOSE_BRACE1248=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_array_initializer7975); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACE1248_tree = 
                    (Object)adaptor.create(CLOSE_BRACE1248)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACE1248_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1819:5: OPEN_BRACE variable_initializer_list ( COMMA )? CLOSE_BRACE
                    {
                    root_0 = (Object)adaptor.nil();


                    OPEN_BRACE1249=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_array_initializer7981); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACE1249_tree = 
                    (Object)adaptor.create(OPEN_BRACE1249)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACE1249_tree);
                    }

                    pushFollow(FOLLOW_variable_initializer_list_in_array_initializer7983);
                    variable_initializer_list1250=variable_initializer_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer_list1250.getTree());

                    // CSharp4.g:1819:42: ( COMMA )?
                    int alt287=2;
                    int LA287_0 = input.LA(1);

                    if ( (LA287_0==COMMA) ) {
                        alt287=1;
                    }
                    switch (alt287) {
                        case 1 :
                            // CSharp4.g:1819:42: COMMA
                            {
                            COMMA1251=(Token)match(input,COMMA,FOLLOW_COMMA_in_array_initializer7985); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA1251_tree = 
                            (Object)adaptor.create(COMMA1251)
                            ;
                            adaptor.addChild(root_0, COMMA1251_tree);
                            }

                            }
                            break;

                    }


                    CLOSE_BRACE1252=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_array_initializer7988); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACE1252_tree = 
                    (Object)adaptor.create(CLOSE_BRACE1252)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACE1252_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "array_initializer"


    public static class variable_initializer_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "variable_initializer_list"
    // CSharp4.g:1821:1: variable_initializer_list : variable_initializer ( COMMA variable_initializer )* ;
    public final CSharp4.variable_initializer_list_return variable_initializer_list() throws RecognitionException {
        CSharp4.variable_initializer_list_return retval = new CSharp4.variable_initializer_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA1254=null;
        CSharp4.variable_initializer_return variable_initializer1253 =null;

        CSharp4.variable_initializer_return variable_initializer1255 =null;


        Object COMMA1254_tree=null;

        try {
            // CSharp4.g:1822:2: ( variable_initializer ( COMMA variable_initializer )* )
            // CSharp4.g:1822:4: variable_initializer ( COMMA variable_initializer )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_variable_initializer_in_variable_initializer_list8000);
            variable_initializer1253=variable_initializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer1253.getTree());

            // CSharp4.g:1822:25: ( COMMA variable_initializer )*
            loop289:
            do {
                int alt289=2;
                int LA289_0 = input.LA(1);

                if ( (LA289_0==COMMA) ) {
                    int LA289_1 = input.LA(2);

                    if ( (LA289_1==AMP||(LA289_1 >= BANG && LA289_1 <= BASE)||LA289_1==BOOL||LA289_1==BYTE||(LA289_1 >= CHAR && LA289_1 <= CHECKED)||LA289_1==DECIMAL||(LA289_1 >= DEFAULT && LA289_1 <= DELEGATE)||LA289_1==DOUBLE||LA289_1==FALSE||LA289_1==FLOAT||LA289_1==IDENTIFIER||(LA289_1 >= INT && LA289_1 <= INTEGER_LITERAL)||LA289_1==LONG||LA289_1==MINUS||LA289_1==NEW||LA289_1==NULL||(LA289_1 >= OBJECT && LA289_1 <= OPEN_BRACE)||LA289_1==OPEN_PARENS||LA289_1==OP_DEC||LA289_1==OP_INC||LA289_1==PLUS||LA289_1==REAL_LITERAL||LA289_1==SBYTE||LA289_1==SHORT||LA289_1==SIZEOF||LA289_1==STAR||(LA289_1 >= STRING && LA289_1 <= STRING_LITERAL)||LA289_1==THIS||(LA289_1 >= TILDE && LA289_1 <= TRUE)||(LA289_1 >= TYPEOF && LA289_1 <= UNCHECKED)||LA289_1==USHORT) ) {
                        alt289=1;
                    }


                }


                switch (alt289) {
            	case 1 :
            	    // CSharp4.g:1822:27: COMMA variable_initializer
            	    {
            	    COMMA1254=(Token)match(input,COMMA,FOLLOW_COMMA_in_variable_initializer_list8004); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA1254_tree = 
            	    (Object)adaptor.create(COMMA1254)
            	    ;
            	    adaptor.addChild(root_0, COMMA1254_tree);
            	    }

            	    pushFollow(FOLLOW_variable_initializer_in_variable_initializer_list8007);
            	    variable_initializer1255=variable_initializer();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer1255.getTree());

            	    }
            	    break;

            	default :
            	    break loop289;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "variable_initializer_list"


    public static class interface_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_declaration"
    // CSharp4.g:1825:1: interface_declaration : ( attributes )? ( interface_modifiers )? ( partial_contextual_keyword )? INTERFACE IDENTIFIER ( variant_type_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( SEMICOLON )? ;
    public final CSharp4.interface_declaration_return interface_declaration() throws RecognitionException {
        CSharp4.interface_declaration_return retval = new CSharp4.interface_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token INTERFACE1259=null;
        Token IDENTIFIER1260=null;
        Token SEMICOLON1265=null;
        CSharp4.attributes_return attributes1256 =null;

        CSharp4.interface_modifiers_return interface_modifiers1257 =null;

        CSharp4.partial_contextual_keyword_return partial_contextual_keyword1258 =null;

        CSharp4.variant_type_parameter_list_return variant_type_parameter_list1261 =null;

        CSharp4.interface_base_return interface_base1262 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses1263 =null;

        CSharp4.interface_body_return interface_body1264 =null;


        Object INTERFACE1259_tree=null;
        Object IDENTIFIER1260_tree=null;
        Object SEMICOLON1265_tree=null;

        try {
            // CSharp4.g:1826:2: ( ( attributes )? ( interface_modifiers )? ( partial_contextual_keyword )? INTERFACE IDENTIFIER ( variant_type_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( SEMICOLON )? )
            // CSharp4.g:1826:4: ( attributes )? ( interface_modifiers )? ( partial_contextual_keyword )? INTERFACE IDENTIFIER ( variant_type_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( SEMICOLON )?
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1826:4: ( attributes )?
            int alt290=2;
            int LA290_0 = input.LA(1);

            if ( (LA290_0==OPEN_BRACKET) ) {
                alt290=1;
            }
            switch (alt290) {
                case 1 :
                    // CSharp4.g:1826:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_interface_declaration8022);
                    attributes1256=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1256.getTree());

                    }
                    break;

            }


            // CSharp4.g:1826:16: ( interface_modifiers )?
            int alt291=2;
            int LA291_0 = input.LA(1);

            if ( (LA291_0==INTERNAL||LA291_0==NEW||(LA291_0 >= PRIVATE && LA291_0 <= PUBLIC)||LA291_0==UNSAFE) ) {
                alt291=1;
            }
            switch (alt291) {
                case 1 :
                    // CSharp4.g:1826:16: interface_modifiers
                    {
                    pushFollow(FOLLOW_interface_modifiers_in_interface_declaration8025);
                    interface_modifiers1257=interface_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_modifiers1257.getTree());

                    }
                    break;

            }


            // CSharp4.g:1826:37: ( partial_contextual_keyword )?
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( (LA292_0==IDENTIFIER) ) {
                alt292=1;
            }
            switch (alt292) {
                case 1 :
                    // CSharp4.g:1826:37: partial_contextual_keyword
                    {
                    pushFollow(FOLLOW_partial_contextual_keyword_in_interface_declaration8028);
                    partial_contextual_keyword1258=partial_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, partial_contextual_keyword1258.getTree());

                    }
                    break;

            }


            INTERFACE1259=(Token)match(input,INTERFACE,FOLLOW_INTERFACE_in_interface_declaration8031); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            INTERFACE1259_tree = 
            (Object)adaptor.create(INTERFACE1259)
            ;
            adaptor.addChild(root_0, INTERFACE1259_tree);
            }

            IDENTIFIER1260=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_interface_declaration8033); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1260_tree = 
            (Object)adaptor.create(IDENTIFIER1260)
            ;
            adaptor.addChild(root_0, IDENTIFIER1260_tree);
            }

            // CSharp4.g:1826:86: ( variant_type_parameter_list )?
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( (LA293_0==LT) ) {
                alt293=1;
            }
            switch (alt293) {
                case 1 :
                    // CSharp4.g:1826:86: variant_type_parameter_list
                    {
                    pushFollow(FOLLOW_variant_type_parameter_list_in_interface_declaration8035);
                    variant_type_parameter_list1261=variant_type_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_parameter_list1261.getTree());

                    }
                    break;

            }


            // CSharp4.g:1826:115: ( interface_base )?
            int alt294=2;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==COLON) ) {
                alt294=1;
            }
            switch (alt294) {
                case 1 :
                    // CSharp4.g:1826:115: interface_base
                    {
                    pushFollow(FOLLOW_interface_base_in_interface_declaration8038);
                    interface_base1262=interface_base();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_base1262.getTree());

                    }
                    break;

            }


            // CSharp4.g:1826:131: ( type_parameter_constraints_clauses )?
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( (LA295_0==IDENTIFIER) ) {
                alt295=1;
            }
            switch (alt295) {
                case 1 :
                    // CSharp4.g:1826:131: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_declaration8041);
                    type_parameter_constraints_clauses1263=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses1263.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_interface_body_in_interface_declaration8044);
            interface_body1264=interface_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_body1264.getTree());

            // CSharp4.g:1826:182: ( SEMICOLON )?
            int alt296=2;
            int LA296_0 = input.LA(1);

            if ( (LA296_0==SEMICOLON) ) {
                alt296=1;
            }
            switch (alt296) {
                case 1 :
                    // CSharp4.g:1826:182: SEMICOLON
                    {
                    SEMICOLON1265=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interface_declaration8046); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1265_tree = 
                    (Object)adaptor.create(SEMICOLON1265)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1265_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_declaration"


    public static class interface_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_modifiers"
    // CSharp4.g:1828:1: interface_modifiers : interface_modifier ( interface_modifier )* ;
    public final CSharp4.interface_modifiers_return interface_modifiers() throws RecognitionException {
        CSharp4.interface_modifiers_return retval = new CSharp4.interface_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.interface_modifier_return interface_modifier1266 =null;

        CSharp4.interface_modifier_return interface_modifier1267 =null;



        try {
            // CSharp4.g:1829:2: ( interface_modifier ( interface_modifier )* )
            // CSharp4.g:1829:4: interface_modifier ( interface_modifier )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_interface_modifier_in_interface_modifiers8058);
            interface_modifier1266=interface_modifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_modifier1266.getTree());

            // CSharp4.g:1829:23: ( interface_modifier )*
            loop297:
            do {
                int alt297=2;
                int LA297_0 = input.LA(1);

                if ( (LA297_0==INTERNAL||LA297_0==NEW||(LA297_0 >= PRIVATE && LA297_0 <= PUBLIC)||LA297_0==UNSAFE) ) {
                    alt297=1;
                }


                switch (alt297) {
            	case 1 :
            	    // CSharp4.g:1829:25: interface_modifier
            	    {
            	    pushFollow(FOLLOW_interface_modifier_in_interface_modifiers8062);
            	    interface_modifier1267=interface_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_modifier1267.getTree());

            	    }
            	    break;

            	default :
            	    break loop297;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_modifiers"


    public static class interface_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_modifier"
    // CSharp4.g:1831:1: interface_modifier : ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | interface_modifier_unsafe );
    public final CSharp4.interface_modifier_return interface_modifier() throws RecognitionException {
        CSharp4.interface_modifier_return retval = new CSharp4.interface_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW1268=null;
        Token PUBLIC1269=null;
        Token PROTECTED1270=null;
        Token INTERNAL1271=null;
        Token PRIVATE1272=null;
        CSharp4.interface_modifier_unsafe_return interface_modifier_unsafe1273 =null;


        Object NEW1268_tree=null;
        Object PUBLIC1269_tree=null;
        Object PROTECTED1270_tree=null;
        Object INTERNAL1271_tree=null;
        Object PRIVATE1272_tree=null;

        try {
            // CSharp4.g:1832:2: ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | interface_modifier_unsafe )
            int alt298=6;
            switch ( input.LA(1) ) {
            case NEW:
                {
                alt298=1;
                }
                break;
            case PUBLIC:
                {
                alt298=2;
                }
                break;
            case PROTECTED:
                {
                alt298=3;
                }
                break;
            case INTERNAL:
                {
                alt298=4;
                }
                break;
            case PRIVATE:
                {
                alt298=5;
                }
                break;
            case UNSAFE:
                {
                alt298=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 298, 0, input);

                throw nvae;

            }

            switch (alt298) {
                case 1 :
                    // CSharp4.g:1832:4: NEW
                    {
                    root_0 = (Object)adaptor.nil();


                    NEW1268=(Token)match(input,NEW,FOLLOW_NEW_in_interface_modifier8076); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW1268_tree = 
                    (Object)adaptor.create(NEW1268)
                    ;
                    adaptor.addChild(root_0, NEW1268_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1833:4: PUBLIC
                    {
                    root_0 = (Object)adaptor.nil();


                    PUBLIC1269=(Token)match(input,PUBLIC,FOLLOW_PUBLIC_in_interface_modifier8081); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PUBLIC1269_tree = 
                    (Object)adaptor.create(PUBLIC1269)
                    ;
                    adaptor.addChild(root_0, PUBLIC1269_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1834:4: PROTECTED
                    {
                    root_0 = (Object)adaptor.nil();


                    PROTECTED1270=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_interface_modifier8086); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED1270_tree = 
                    (Object)adaptor.create(PROTECTED1270)
                    ;
                    adaptor.addChild(root_0, PROTECTED1270_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1835:4: INTERNAL
                    {
                    root_0 = (Object)adaptor.nil();


                    INTERNAL1271=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_interface_modifier8091); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL1271_tree = 
                    (Object)adaptor.create(INTERNAL1271)
                    ;
                    adaptor.addChild(root_0, INTERNAL1271_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1836:4: PRIVATE
                    {
                    root_0 = (Object)adaptor.nil();


                    PRIVATE1272=(Token)match(input,PRIVATE,FOLLOW_PRIVATE_in_interface_modifier8096); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PRIVATE1272_tree = 
                    (Object)adaptor.create(PRIVATE1272)
                    ;
                    adaptor.addChild(root_0, PRIVATE1272_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:1837:4: interface_modifier_unsafe
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_interface_modifier_unsafe_in_interface_modifier8101);
                    interface_modifier_unsafe1273=interface_modifier_unsafe();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_modifier_unsafe1273.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_modifier"


    public static class variant_type_parameter_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "variant_type_parameter_list"
    // CSharp4.g:1839:1: variant_type_parameter_list : LT variant_type_parameters GT ;
    public final CSharp4.variant_type_parameter_list_return variant_type_parameter_list() throws RecognitionException {
        CSharp4.variant_type_parameter_list_return retval = new CSharp4.variant_type_parameter_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token LT1274=null;
        Token GT1276=null;
        CSharp4.variant_type_parameters_return variant_type_parameters1275 =null;


        Object LT1274_tree=null;
        Object GT1276_tree=null;

        try {
            // CSharp4.g:1840:2: ( LT variant_type_parameters GT )
            // CSharp4.g:1840:4: LT variant_type_parameters GT
            {
            root_0 = (Object)adaptor.nil();


            LT1274=(Token)match(input,LT,FOLLOW_LT_in_variant_type_parameter_list8112); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LT1274_tree = 
            (Object)adaptor.create(LT1274)
            ;
            adaptor.addChild(root_0, LT1274_tree);
            }

            pushFollow(FOLLOW_variant_type_parameters_in_variant_type_parameter_list8114);
            variant_type_parameters1275=variant_type_parameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_parameters1275.getTree());

            GT1276=(Token)match(input,GT,FOLLOW_GT_in_variant_type_parameter_list8116); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            GT1276_tree = 
            (Object)adaptor.create(GT1276)
            ;
            adaptor.addChild(root_0, GT1276_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "variant_type_parameter_list"


    public static class variant_type_parameters_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "variant_type_parameters"
    // CSharp4.g:1842:1: variant_type_parameters : ( attributes )? ( variance_annotation )? type_parameter ( COMMA ( attributes )? ( variance_annotation )? type_parameter )* ;
    public final CSharp4.variant_type_parameters_return variant_type_parameters() throws RecognitionException {
        CSharp4.variant_type_parameters_return retval = new CSharp4.variant_type_parameters_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA1280=null;
        CSharp4.attributes_return attributes1277 =null;

        CSharp4.variance_annotation_return variance_annotation1278 =null;

        CSharp4.type_parameter_return type_parameter1279 =null;

        CSharp4.attributes_return attributes1281 =null;

        CSharp4.variance_annotation_return variance_annotation1282 =null;

        CSharp4.type_parameter_return type_parameter1283 =null;


        Object COMMA1280_tree=null;

        try {
            // CSharp4.g:1843:2: ( ( attributes )? ( variance_annotation )? type_parameter ( COMMA ( attributes )? ( variance_annotation )? type_parameter )* )
            // CSharp4.g:1843:4: ( attributes )? ( variance_annotation )? type_parameter ( COMMA ( attributes )? ( variance_annotation )? type_parameter )*
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1843:4: ( attributes )?
            int alt299=2;
            int LA299_0 = input.LA(1);

            if ( (LA299_0==OPEN_BRACKET) ) {
                alt299=1;
            }
            switch (alt299) {
                case 1 :
                    // CSharp4.g:1843:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_variant_type_parameters8127);
                    attributes1277=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1277.getTree());

                    }
                    break;

            }


            // CSharp4.g:1843:16: ( variance_annotation )?
            int alt300=2;
            int LA300_0 = input.LA(1);

            if ( (LA300_0==IN||LA300_0==OUT) ) {
                alt300=1;
            }
            switch (alt300) {
                case 1 :
                    // CSharp4.g:1843:16: variance_annotation
                    {
                    pushFollow(FOLLOW_variance_annotation_in_variant_type_parameters8130);
                    variance_annotation1278=variance_annotation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variance_annotation1278.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_type_parameter_in_variant_type_parameters8133);
            type_parameter1279=type_parameter();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter1279.getTree());

            // CSharp4.g:1843:52: ( COMMA ( attributes )? ( variance_annotation )? type_parameter )*
            loop303:
            do {
                int alt303=2;
                int LA303_0 = input.LA(1);

                if ( (LA303_0==COMMA) ) {
                    alt303=1;
                }


                switch (alt303) {
            	case 1 :
            	    // CSharp4.g:1843:54: COMMA ( attributes )? ( variance_annotation )? type_parameter
            	    {
            	    COMMA1280=(Token)match(input,COMMA,FOLLOW_COMMA_in_variant_type_parameters8137); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA1280_tree = 
            	    (Object)adaptor.create(COMMA1280)
            	    ;
            	    adaptor.addChild(root_0, COMMA1280_tree);
            	    }

            	    // CSharp4.g:1843:61: ( attributes )?
            	    int alt301=2;
            	    int LA301_0 = input.LA(1);

            	    if ( (LA301_0==OPEN_BRACKET) ) {
            	        alt301=1;
            	    }
            	    switch (alt301) {
            	        case 1 :
            	            // CSharp4.g:1843:61: attributes
            	            {
            	            pushFollow(FOLLOW_attributes_in_variant_type_parameters8140);
            	            attributes1281=attributes();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1281.getTree());

            	            }
            	            break;

            	    }


            	    // CSharp4.g:1843:74: ( variance_annotation )?
            	    int alt302=2;
            	    int LA302_0 = input.LA(1);

            	    if ( (LA302_0==IN||LA302_0==OUT) ) {
            	        alt302=1;
            	    }
            	    switch (alt302) {
            	        case 1 :
            	            // CSharp4.g:1843:74: variance_annotation
            	            {
            	            pushFollow(FOLLOW_variance_annotation_in_variant_type_parameters8144);
            	            variance_annotation1282=variance_annotation();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, variance_annotation1282.getTree());

            	            }
            	            break;

            	    }


            	    pushFollow(FOLLOW_type_parameter_in_variant_type_parameters8148);
            	    type_parameter1283=type_parameter();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter1283.getTree());

            	    }
            	    break;

            	default :
            	    break loop303;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "variant_type_parameters"


    public static class variance_annotation_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "variance_annotation"
    // CSharp4.g:1845:1: variance_annotation : ( IN | OUT );
    public final CSharp4.variance_annotation_return variance_annotation() throws RecognitionException {
        CSharp4.variance_annotation_return retval = new CSharp4.variance_annotation_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set1284=null;

        Object set1284_tree=null;

        try {
            // CSharp4.g:1846:2: ( IN | OUT )
            // CSharp4.g:
            {
            root_0 = (Object)adaptor.nil();


            set1284=(Token)input.LT(1);

            if ( input.LA(1)==IN||input.LA(1)==OUT ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set1284)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "variance_annotation"


    public static class interface_base_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_base"
    // CSharp4.g:1849:1: interface_base : COLON interface_type_list ;
    public final CSharp4.interface_base_return interface_base() throws RecognitionException {
        CSharp4.interface_base_return retval = new CSharp4.interface_base_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COLON1285=null;
        CSharp4.interface_type_list_return interface_type_list1286 =null;


        Object COLON1285_tree=null;

        try {
            // CSharp4.g:1850:2: ( COLON interface_type_list )
            // CSharp4.g:1850:4: COLON interface_type_list
            {
            root_0 = (Object)adaptor.nil();


            COLON1285=(Token)match(input,COLON,FOLLOW_COLON_in_interface_base8178); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COLON1285_tree = 
            (Object)adaptor.create(COLON1285)
            ;
            adaptor.addChild(root_0, COLON1285_tree);
            }

            pushFollow(FOLLOW_interface_type_list_in_interface_base8180);
            interface_type_list1286=interface_type_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type_list1286.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_base"


    public static class interface_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_body"
    // CSharp4.g:1852:1: interface_body : OPEN_BRACE ( interface_member_declarations )? CLOSE_BRACE ;
    public final CSharp4.interface_body_return interface_body() throws RecognitionException {
        CSharp4.interface_body_return retval = new CSharp4.interface_body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE1287=null;
        Token CLOSE_BRACE1289=null;
        CSharp4.interface_member_declarations_return interface_member_declarations1288 =null;


        Object OPEN_BRACE1287_tree=null;
        Object CLOSE_BRACE1289_tree=null;

        try {
            // CSharp4.g:1853:2: ( OPEN_BRACE ( interface_member_declarations )? CLOSE_BRACE )
            // CSharp4.g:1853:4: OPEN_BRACE ( interface_member_declarations )? CLOSE_BRACE
            {
            root_0 = (Object)adaptor.nil();


            OPEN_BRACE1287=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_interface_body8191); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACE1287_tree = 
            (Object)adaptor.create(OPEN_BRACE1287)
            ;
            adaptor.addChild(root_0, OPEN_BRACE1287_tree);
            }

            // CSharp4.g:1853:15: ( interface_member_declarations )?
            int alt304=2;
            int LA304_0 = input.LA(1);

            if ( (LA304_0==BOOL||LA304_0==BYTE||LA304_0==CHAR||LA304_0==DECIMAL||LA304_0==DOUBLE||LA304_0==EVENT||LA304_0==FLOAT||LA304_0==IDENTIFIER||LA304_0==INT||LA304_0==LONG||LA304_0==NEW||LA304_0==OBJECT||LA304_0==OPEN_BRACKET||LA304_0==SBYTE||LA304_0==SHORT||LA304_0==STRING||(LA304_0 >= UINT && LA304_0 <= ULONG)||LA304_0==USHORT||LA304_0==VOID) ) {
                alt304=1;
            }
            switch (alt304) {
                case 1 :
                    // CSharp4.g:1853:15: interface_member_declarations
                    {
                    pushFollow(FOLLOW_interface_member_declarations_in_interface_body8193);
                    interface_member_declarations1288=interface_member_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_member_declarations1288.getTree());

                    }
                    break;

            }


            CLOSE_BRACE1289=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_interface_body8196); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACE1289_tree = 
            (Object)adaptor.create(CLOSE_BRACE1289)
            ;
            adaptor.addChild(root_0, CLOSE_BRACE1289_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_body"


    public static class interface_member_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_member_declarations"
    // CSharp4.g:1855:1: interface_member_declarations : ( interface_member_declaration )+ ;
    public final CSharp4.interface_member_declarations_return interface_member_declarations() throws RecognitionException {
        CSharp4.interface_member_declarations_return retval = new CSharp4.interface_member_declarations_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.interface_member_declaration_return interface_member_declaration1290 =null;



        try {
            // CSharp4.g:1856:2: ( ( interface_member_declaration )+ )
            // CSharp4.g:1856:4: ( interface_member_declaration )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1856:4: ( interface_member_declaration )+
            int cnt305=0;
            loop305:
            do {
                int alt305=2;
                int LA305_0 = input.LA(1);

                if ( (LA305_0==BOOL||LA305_0==BYTE||LA305_0==CHAR||LA305_0==DECIMAL||LA305_0==DOUBLE||LA305_0==EVENT||LA305_0==FLOAT||LA305_0==IDENTIFIER||LA305_0==INT||LA305_0==LONG||LA305_0==NEW||LA305_0==OBJECT||LA305_0==OPEN_BRACKET||LA305_0==SBYTE||LA305_0==SHORT||LA305_0==STRING||(LA305_0 >= UINT && LA305_0 <= ULONG)||LA305_0==USHORT||LA305_0==VOID) ) {
                    alt305=1;
                }


                switch (alt305) {
            	case 1 :
            	    // CSharp4.g:1856:4: interface_member_declaration
            	    {
            	    pushFollow(FOLLOW_interface_member_declaration_in_interface_member_declarations8207);
            	    interface_member_declaration1290=interface_member_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_member_declaration1290.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt305 >= 1 ) break loop305;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(305, input);
                        throw eee;
                }
                cnt305++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_member_declarations"


    public static class interface_member_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_member_declaration"
    // CSharp4.g:1866:1: interface_member_declaration : ( attributes )? ( NEW )? ( type ( IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON | IDENTIFIER OPEN_BRACE interface_accessors CLOSE_BRACE | THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE interface_accessors CLOSE_BRACE ) | VOID IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON | EVENT type IDENTIFIER SEMICOLON ) ;
    public final CSharp4.interface_member_declaration_return interface_member_declaration() throws RecognitionException {
        CSharp4.interface_member_declaration_return retval = new CSharp4.interface_member_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW1292=null;
        Token IDENTIFIER1294=null;
        Token OPEN_PARENS1296=null;
        Token CLOSE_PARENS1298=null;
        Token SEMICOLON1300=null;
        Token IDENTIFIER1301=null;
        Token OPEN_BRACE1302=null;
        Token CLOSE_BRACE1304=null;
        Token THIS1305=null;
        Token OPEN_BRACKET1306=null;
        Token CLOSE_BRACKET1308=null;
        Token OPEN_BRACE1309=null;
        Token CLOSE_BRACE1311=null;
        Token VOID1312=null;
        Token IDENTIFIER1313=null;
        Token OPEN_PARENS1315=null;
        Token CLOSE_PARENS1317=null;
        Token SEMICOLON1319=null;
        Token EVENT1320=null;
        Token IDENTIFIER1322=null;
        Token SEMICOLON1323=null;
        CSharp4.attributes_return attributes1291 =null;

        CSharp4.type_return type1293 =null;

        CSharp4.type_parameter_list_return type_parameter_list1295 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list1297 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses1299 =null;

        CSharp4.interface_accessors_return interface_accessors1303 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list1307 =null;

        CSharp4.interface_accessors_return interface_accessors1310 =null;

        CSharp4.type_parameter_list_return type_parameter_list1314 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list1316 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses1318 =null;

        CSharp4.type_return type1321 =null;


        Object NEW1292_tree=null;
        Object IDENTIFIER1294_tree=null;
        Object OPEN_PARENS1296_tree=null;
        Object CLOSE_PARENS1298_tree=null;
        Object SEMICOLON1300_tree=null;
        Object IDENTIFIER1301_tree=null;
        Object OPEN_BRACE1302_tree=null;
        Object CLOSE_BRACE1304_tree=null;
        Object THIS1305_tree=null;
        Object OPEN_BRACKET1306_tree=null;
        Object CLOSE_BRACKET1308_tree=null;
        Object OPEN_BRACE1309_tree=null;
        Object CLOSE_BRACE1311_tree=null;
        Object VOID1312_tree=null;
        Object IDENTIFIER1313_tree=null;
        Object OPEN_PARENS1315_tree=null;
        Object CLOSE_PARENS1317_tree=null;
        Object SEMICOLON1319_tree=null;
        Object EVENT1320_tree=null;
        Object IDENTIFIER1322_tree=null;
        Object SEMICOLON1323_tree=null;

        try {
            // CSharp4.g:1867:3: ( ( attributes )? ( NEW )? ( type ( IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON | IDENTIFIER OPEN_BRACE interface_accessors CLOSE_BRACE | THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE interface_accessors CLOSE_BRACE ) | VOID IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON | EVENT type IDENTIFIER SEMICOLON ) )
            // CSharp4.g:1867:5: ( attributes )? ( NEW )? ( type ( IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON | IDENTIFIER OPEN_BRACE interface_accessors CLOSE_BRACE | THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE interface_accessors CLOSE_BRACE ) | VOID IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON | EVENT type IDENTIFIER SEMICOLON )
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1867:5: ( attributes )?
            int alt306=2;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==OPEN_BRACKET) ) {
                alt306=1;
            }
            switch (alt306) {
                case 1 :
                    // CSharp4.g:1867:5: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_interface_member_declaration8222);
                    attributes1291=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1291.getTree());

                    }
                    break;

            }


            // CSharp4.g:1867:17: ( NEW )?
            int alt307=2;
            int LA307_0 = input.LA(1);

            if ( (LA307_0==NEW) ) {
                alt307=1;
            }
            switch (alt307) {
                case 1 :
                    // CSharp4.g:1867:17: NEW
                    {
                    NEW1292=(Token)match(input,NEW,FOLLOW_NEW_in_interface_member_declaration8225); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW1292_tree = 
                    (Object)adaptor.create(NEW1292)
                    ;
                    adaptor.addChild(root_0, NEW1292_tree);
                    }

                    }
                    break;

            }


            // CSharp4.g:1868:5: ( type ( IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON | IDENTIFIER OPEN_BRACE interface_accessors CLOSE_BRACE | THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE interface_accessors CLOSE_BRACE ) | VOID IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON | EVENT type IDENTIFIER SEMICOLON )
            int alt315=3;
            switch ( input.LA(1) ) {
            case BOOL:
            case BYTE:
            case CHAR:
            case DECIMAL:
            case DOUBLE:
            case FLOAT:
            case IDENTIFIER:
            case INT:
            case LONG:
            case OBJECT:
            case SBYTE:
            case SHORT:
            case STRING:
            case UINT:
            case ULONG:
            case USHORT:
                {
                alt315=1;
                }
                break;
            case VOID:
                {
                int LA315_2 = input.LA(2);

                if ( (LA315_2==STAR) ) {
                    alt315=1;
                }
                else if ( (LA315_2==IDENTIFIER) ) {
                    alt315=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 315, 2, input);

                    throw nvae;

                }
                }
                break;
            case EVENT:
                {
                alt315=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 315, 0, input);

                throw nvae;

            }

            switch (alt315) {
                case 1 :
                    // CSharp4.g:1868:7: type ( IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON | IDENTIFIER OPEN_BRACE interface_accessors CLOSE_BRACE | THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE interface_accessors CLOSE_BRACE )
                    {
                    pushFollow(FOLLOW_type_in_interface_member_declaration8234);
                    type1293=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type1293.getTree());

                    // CSharp4.g:1869:7: ( IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON | IDENTIFIER OPEN_BRACE interface_accessors CLOSE_BRACE | THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE interface_accessors CLOSE_BRACE )
                    int alt311=3;
                    int LA311_0 = input.LA(1);

                    if ( (LA311_0==IDENTIFIER) ) {
                        int LA311_1 = input.LA(2);

                        if ( (LA311_1==OPEN_BRACE) ) {
                            alt311=2;
                        }
                        else if ( (LA311_1==LT||LA311_1==OPEN_PARENS) ) {
                            alt311=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 311, 1, input);

                            throw nvae;

                        }
                    }
                    else if ( (LA311_0==THIS) ) {
                        alt311=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 311, 0, input);

                        throw nvae;

                    }
                    switch (alt311) {
                        case 1 :
                            // CSharp4.g:1869:9: IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON
                            {
                            IDENTIFIER1294=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_interface_member_declaration8244); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            IDENTIFIER1294_tree = 
                            (Object)adaptor.create(IDENTIFIER1294)
                            ;
                            adaptor.addChild(root_0, IDENTIFIER1294_tree);
                            }

                            // CSharp4.g:1869:20: ( type_parameter_list )?
                            int alt308=2;
                            int LA308_0 = input.LA(1);

                            if ( (LA308_0==LT) ) {
                                alt308=1;
                            }
                            switch (alt308) {
                                case 1 :
                                    // CSharp4.g:1869:20: type_parameter_list
                                    {
                                    pushFollow(FOLLOW_type_parameter_list_in_interface_member_declaration8246);
                                    type_parameter_list1295=type_parameter_list();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_list1295.getTree());

                                    }
                                    break;

                            }


                            OPEN_PARENS1296=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_interface_member_declaration8249); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            OPEN_PARENS1296_tree = 
                            (Object)adaptor.create(OPEN_PARENS1296)
                            ;
                            adaptor.addChild(root_0, OPEN_PARENS1296_tree);
                            }

                            // CSharp4.g:1869:53: ( formal_parameter_list )?
                            int alt309=2;
                            int LA309_0 = input.LA(1);

                            if ( (LA309_0==BOOL||LA309_0==BYTE||LA309_0==CHAR||LA309_0==DECIMAL||LA309_0==DOUBLE||LA309_0==FLOAT||LA309_0==IDENTIFIER||LA309_0==INT||LA309_0==LONG||LA309_0==OBJECT||LA309_0==OPEN_BRACKET||LA309_0==OUT||LA309_0==PARAMS||LA309_0==REF||LA309_0==SBYTE||LA309_0==SHORT||LA309_0==STRING||LA309_0==THIS||(LA309_0 >= UINT && LA309_0 <= ULONG)||LA309_0==USHORT||LA309_0==VOID) ) {
                                alt309=1;
                            }
                            switch (alt309) {
                                case 1 :
                                    // CSharp4.g:1869:53: formal_parameter_list
                                    {
                                    pushFollow(FOLLOW_formal_parameter_list_in_interface_member_declaration8251);
                                    formal_parameter_list1297=formal_parameter_list();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list1297.getTree());

                                    }
                                    break;

                            }


                            CLOSE_PARENS1298=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_interface_member_declaration8254); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            CLOSE_PARENS1298_tree = 
                            (Object)adaptor.create(CLOSE_PARENS1298)
                            ;
                            adaptor.addChild(root_0, CLOSE_PARENS1298_tree);
                            }

                            // CSharp4.g:1869:89: ( type_parameter_constraints_clauses )?
                            int alt310=2;
                            int LA310_0 = input.LA(1);

                            if ( (LA310_0==IDENTIFIER) ) {
                                alt310=1;
                            }
                            switch (alt310) {
                                case 1 :
                                    // CSharp4.g:1869:89: type_parameter_constraints_clauses
                                    {
                                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_member_declaration8256);
                                    type_parameter_constraints_clauses1299=type_parameter_constraints_clauses();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses1299.getTree());

                                    }
                                    break;

                            }


                            SEMICOLON1300=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interface_member_declaration8259); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            SEMICOLON1300_tree = 
                            (Object)adaptor.create(SEMICOLON1300)
                            ;
                            adaptor.addChild(root_0, SEMICOLON1300_tree);
                            }

                            }
                            break;
                        case 2 :
                            // CSharp4.g:1870:9: IDENTIFIER OPEN_BRACE interface_accessors CLOSE_BRACE
                            {
                            IDENTIFIER1301=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_interface_member_declaration8269); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            IDENTIFIER1301_tree = 
                            (Object)adaptor.create(IDENTIFIER1301)
                            ;
                            adaptor.addChild(root_0, IDENTIFIER1301_tree);
                            }

                            OPEN_BRACE1302=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_interface_member_declaration8271); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            OPEN_BRACE1302_tree = 
                            (Object)adaptor.create(OPEN_BRACE1302)
                            ;
                            adaptor.addChild(root_0, OPEN_BRACE1302_tree);
                            }

                            pushFollow(FOLLOW_interface_accessors_in_interface_member_declaration8273);
                            interface_accessors1303=interface_accessors();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_accessors1303.getTree());

                            CLOSE_BRACE1304=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_interface_member_declaration8275); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            CLOSE_BRACE1304_tree = 
                            (Object)adaptor.create(CLOSE_BRACE1304)
                            ;
                            adaptor.addChild(root_0, CLOSE_BRACE1304_tree);
                            }

                            }
                            break;
                        case 3 :
                            // CSharp4.g:1871:9: THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE interface_accessors CLOSE_BRACE
                            {
                            THIS1305=(Token)match(input,THIS,FOLLOW_THIS_in_interface_member_declaration8285); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            THIS1305_tree = 
                            (Object)adaptor.create(THIS1305)
                            ;
                            adaptor.addChild(root_0, THIS1305_tree);
                            }

                            OPEN_BRACKET1306=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_interface_member_declaration8287); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            OPEN_BRACKET1306_tree = 
                            (Object)adaptor.create(OPEN_BRACKET1306)
                            ;
                            adaptor.addChild(root_0, OPEN_BRACKET1306_tree);
                            }

                            pushFollow(FOLLOW_formal_parameter_list_in_interface_member_declaration8289);
                            formal_parameter_list1307=formal_parameter_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list1307.getTree());

                            CLOSE_BRACKET1308=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_interface_member_declaration8291); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            CLOSE_BRACKET1308_tree = 
                            (Object)adaptor.create(CLOSE_BRACKET1308)
                            ;
                            adaptor.addChild(root_0, CLOSE_BRACKET1308_tree);
                            }

                            OPEN_BRACE1309=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_interface_member_declaration8293); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            OPEN_BRACE1309_tree = 
                            (Object)adaptor.create(OPEN_BRACE1309)
                            ;
                            adaptor.addChild(root_0, OPEN_BRACE1309_tree);
                            }

                            pushFollow(FOLLOW_interface_accessors_in_interface_member_declaration8295);
                            interface_accessors1310=interface_accessors();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_accessors1310.getTree());

                            CLOSE_BRACE1311=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_interface_member_declaration8297); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            CLOSE_BRACE1311_tree = 
                            (Object)adaptor.create(CLOSE_BRACE1311)
                            ;
                            adaptor.addChild(root_0, CLOSE_BRACE1311_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // CSharp4.g:1873:7: VOID IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON
                    {
                    VOID1312=(Token)match(input,VOID,FOLLOW_VOID_in_interface_member_declaration8313); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VOID1312_tree = 
                    (Object)adaptor.create(VOID1312)
                    ;
                    adaptor.addChild(root_0, VOID1312_tree);
                    }

                    IDENTIFIER1313=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_interface_member_declaration8315); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER1313_tree = 
                    (Object)adaptor.create(IDENTIFIER1313)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER1313_tree);
                    }

                    // CSharp4.g:1873:23: ( type_parameter_list )?
                    int alt312=2;
                    int LA312_0 = input.LA(1);

                    if ( (LA312_0==LT) ) {
                        alt312=1;
                    }
                    switch (alt312) {
                        case 1 :
                            // CSharp4.g:1873:23: type_parameter_list
                            {
                            pushFollow(FOLLOW_type_parameter_list_in_interface_member_declaration8317);
                            type_parameter_list1314=type_parameter_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_list1314.getTree());

                            }
                            break;

                    }


                    OPEN_PARENS1315=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_interface_member_declaration8320); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_PARENS1315_tree = 
                    (Object)adaptor.create(OPEN_PARENS1315)
                    ;
                    adaptor.addChild(root_0, OPEN_PARENS1315_tree);
                    }

                    // CSharp4.g:1873:56: ( formal_parameter_list )?
                    int alt313=2;
                    int LA313_0 = input.LA(1);

                    if ( (LA313_0==BOOL||LA313_0==BYTE||LA313_0==CHAR||LA313_0==DECIMAL||LA313_0==DOUBLE||LA313_0==FLOAT||LA313_0==IDENTIFIER||LA313_0==INT||LA313_0==LONG||LA313_0==OBJECT||LA313_0==OPEN_BRACKET||LA313_0==OUT||LA313_0==PARAMS||LA313_0==REF||LA313_0==SBYTE||LA313_0==SHORT||LA313_0==STRING||LA313_0==THIS||(LA313_0 >= UINT && LA313_0 <= ULONG)||LA313_0==USHORT||LA313_0==VOID) ) {
                        alt313=1;
                    }
                    switch (alt313) {
                        case 1 :
                            // CSharp4.g:1873:56: formal_parameter_list
                            {
                            pushFollow(FOLLOW_formal_parameter_list_in_interface_member_declaration8322);
                            formal_parameter_list1316=formal_parameter_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list1316.getTree());

                            }
                            break;

                    }


                    CLOSE_PARENS1317=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_interface_member_declaration8325); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_PARENS1317_tree = 
                    (Object)adaptor.create(CLOSE_PARENS1317)
                    ;
                    adaptor.addChild(root_0, CLOSE_PARENS1317_tree);
                    }

                    // CSharp4.g:1873:92: ( type_parameter_constraints_clauses )?
                    int alt314=2;
                    int LA314_0 = input.LA(1);

                    if ( (LA314_0==IDENTIFIER) ) {
                        alt314=1;
                    }
                    switch (alt314) {
                        case 1 :
                            // CSharp4.g:1873:92: type_parameter_constraints_clauses
                            {
                            pushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_member_declaration8327);
                            type_parameter_constraints_clauses1318=type_parameter_constraints_clauses();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses1318.getTree());

                            }
                            break;

                    }


                    SEMICOLON1319=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interface_member_declaration8330); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1319_tree = 
                    (Object)adaptor.create(SEMICOLON1319)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1319_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1874:7: EVENT type IDENTIFIER SEMICOLON
                    {
                    EVENT1320=(Token)match(input,EVENT,FOLLOW_EVENT_in_interface_member_declaration8338); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EVENT1320_tree = 
                    (Object)adaptor.create(EVENT1320)
                    ;
                    adaptor.addChild(root_0, EVENT1320_tree);
                    }

                    pushFollow(FOLLOW_type_in_interface_member_declaration8340);
                    type1321=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type1321.getTree());

                    IDENTIFIER1322=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_interface_member_declaration8342); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER1322_tree = 
                    (Object)adaptor.create(IDENTIFIER1322)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER1322_tree);
                    }

                    SEMICOLON1323=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interface_member_declaration8344); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1323_tree = 
                    (Object)adaptor.create(SEMICOLON1323)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1323_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_member_declaration"


    public static class interface_method_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_method_declaration"
    // CSharp4.g:1877:1: interface_method_declaration : ( attributes )? ( NEW )? return_type IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON ;
    public final CSharp4.interface_method_declaration_return interface_method_declaration() throws RecognitionException {
        CSharp4.interface_method_declaration_return retval = new CSharp4.interface_method_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW1325=null;
        Token IDENTIFIER1327=null;
        Token OPEN_PARENS1329=null;
        Token CLOSE_PARENS1331=null;
        Token SEMICOLON1333=null;
        CSharp4.attributes_return attributes1324 =null;

        CSharp4.return_type_return return_type1326 =null;

        CSharp4.type_parameter_list_return type_parameter_list1328 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list1330 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses1332 =null;


        Object NEW1325_tree=null;
        Object IDENTIFIER1327_tree=null;
        Object OPEN_PARENS1329_tree=null;
        Object CLOSE_PARENS1331_tree=null;
        Object SEMICOLON1333_tree=null;

        try {
            // CSharp4.g:1878:2: ( ( attributes )? ( NEW )? return_type IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON )
            // CSharp4.g:1878:4: ( attributes )? ( NEW )? return_type IDENTIFIER ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1878:4: ( attributes )?
            int alt316=2;
            int LA316_0 = input.LA(1);

            if ( (LA316_0==OPEN_BRACKET) ) {
                alt316=1;
            }
            switch (alt316) {
                case 1 :
                    // CSharp4.g:1878:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_interface_method_declaration8362);
                    attributes1324=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1324.getTree());

                    }
                    break;

            }


            // CSharp4.g:1878:16: ( NEW )?
            int alt317=2;
            int LA317_0 = input.LA(1);

            if ( (LA317_0==NEW) ) {
                alt317=1;
            }
            switch (alt317) {
                case 1 :
                    // CSharp4.g:1878:16: NEW
                    {
                    NEW1325=(Token)match(input,NEW,FOLLOW_NEW_in_interface_method_declaration8365); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW1325_tree = 
                    (Object)adaptor.create(NEW1325)
                    ;
                    adaptor.addChild(root_0, NEW1325_tree);
                    }

                    }
                    break;

            }


            pushFollow(FOLLOW_return_type_in_interface_method_declaration8368);
            return_type1326=return_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, return_type1326.getTree());

            IDENTIFIER1327=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_interface_method_declaration8370); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1327_tree = 
            (Object)adaptor.create(IDENTIFIER1327)
            ;
            adaptor.addChild(root_0, IDENTIFIER1327_tree);
            }

            // CSharp4.g:1878:44: ( type_parameter_list )?
            int alt318=2;
            int LA318_0 = input.LA(1);

            if ( (LA318_0==LT) ) {
                alt318=1;
            }
            switch (alt318) {
                case 1 :
                    // CSharp4.g:1878:44: type_parameter_list
                    {
                    pushFollow(FOLLOW_type_parameter_list_in_interface_method_declaration8372);
                    type_parameter_list1328=type_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_list1328.getTree());

                    }
                    break;

            }


            OPEN_PARENS1329=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_interface_method_declaration8375); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1329_tree = 
            (Object)adaptor.create(OPEN_PARENS1329)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1329_tree);
            }

            // CSharp4.g:1878:77: ( formal_parameter_list )?
            int alt319=2;
            int LA319_0 = input.LA(1);

            if ( (LA319_0==BOOL||LA319_0==BYTE||LA319_0==CHAR||LA319_0==DECIMAL||LA319_0==DOUBLE||LA319_0==FLOAT||LA319_0==IDENTIFIER||LA319_0==INT||LA319_0==LONG||LA319_0==OBJECT||LA319_0==OPEN_BRACKET||LA319_0==OUT||LA319_0==PARAMS||LA319_0==REF||LA319_0==SBYTE||LA319_0==SHORT||LA319_0==STRING||LA319_0==THIS||(LA319_0 >= UINT && LA319_0 <= ULONG)||LA319_0==USHORT||LA319_0==VOID) ) {
                alt319=1;
            }
            switch (alt319) {
                case 1 :
                    // CSharp4.g:1878:77: formal_parameter_list
                    {
                    pushFollow(FOLLOW_formal_parameter_list_in_interface_method_declaration8377);
                    formal_parameter_list1330=formal_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list1330.getTree());

                    }
                    break;

            }


            CLOSE_PARENS1331=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_interface_method_declaration8380); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1331_tree = 
            (Object)adaptor.create(CLOSE_PARENS1331)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1331_tree);
            }

            // CSharp4.g:1878:113: ( type_parameter_constraints_clauses )?
            int alt320=2;
            int LA320_0 = input.LA(1);

            if ( (LA320_0==IDENTIFIER) ) {
                alt320=1;
            }
            switch (alt320) {
                case 1 :
                    // CSharp4.g:1878:113: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_method_declaration8382);
                    type_parameter_constraints_clauses1332=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses1332.getTree());

                    }
                    break;

            }


            SEMICOLON1333=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interface_method_declaration8385); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON1333_tree = 
            (Object)adaptor.create(SEMICOLON1333)
            ;
            adaptor.addChild(root_0, SEMICOLON1333_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_method_declaration"


    public static class interface_property_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_property_declaration"
    // CSharp4.g:1880:1: interface_property_declaration : ( attributes )? ( NEW )? type IDENTIFIER OPEN_BRACE interface_accessors CLOSE_BRACE ;
    public final CSharp4.interface_property_declaration_return interface_property_declaration() throws RecognitionException {
        CSharp4.interface_property_declaration_return retval = new CSharp4.interface_property_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW1335=null;
        Token IDENTIFIER1337=null;
        Token OPEN_BRACE1338=null;
        Token CLOSE_BRACE1340=null;
        CSharp4.attributes_return attributes1334 =null;

        CSharp4.type_return type1336 =null;

        CSharp4.interface_accessors_return interface_accessors1339 =null;


        Object NEW1335_tree=null;
        Object IDENTIFIER1337_tree=null;
        Object OPEN_BRACE1338_tree=null;
        Object CLOSE_BRACE1340_tree=null;

        try {
            // CSharp4.g:1881:2: ( ( attributes )? ( NEW )? type IDENTIFIER OPEN_BRACE interface_accessors CLOSE_BRACE )
            // CSharp4.g:1881:4: ( attributes )? ( NEW )? type IDENTIFIER OPEN_BRACE interface_accessors CLOSE_BRACE
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1881:4: ( attributes )?
            int alt321=2;
            int LA321_0 = input.LA(1);

            if ( (LA321_0==OPEN_BRACKET) ) {
                alt321=1;
            }
            switch (alt321) {
                case 1 :
                    // CSharp4.g:1881:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_interface_property_declaration8396);
                    attributes1334=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1334.getTree());

                    }
                    break;

            }


            // CSharp4.g:1881:16: ( NEW )?
            int alt322=2;
            int LA322_0 = input.LA(1);

            if ( (LA322_0==NEW) ) {
                alt322=1;
            }
            switch (alt322) {
                case 1 :
                    // CSharp4.g:1881:16: NEW
                    {
                    NEW1335=(Token)match(input,NEW,FOLLOW_NEW_in_interface_property_declaration8399); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW1335_tree = 
                    (Object)adaptor.create(NEW1335)
                    ;
                    adaptor.addChild(root_0, NEW1335_tree);
                    }

                    }
                    break;

            }


            pushFollow(FOLLOW_type_in_interface_property_declaration8402);
            type1336=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1336.getTree());

            IDENTIFIER1337=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_interface_property_declaration8404); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1337_tree = 
            (Object)adaptor.create(IDENTIFIER1337)
            ;
            adaptor.addChild(root_0, IDENTIFIER1337_tree);
            }

            OPEN_BRACE1338=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_interface_property_declaration8406); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACE1338_tree = 
            (Object)adaptor.create(OPEN_BRACE1338)
            ;
            adaptor.addChild(root_0, OPEN_BRACE1338_tree);
            }

            pushFollow(FOLLOW_interface_accessors_in_interface_property_declaration8408);
            interface_accessors1339=interface_accessors();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_accessors1339.getTree());

            CLOSE_BRACE1340=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_interface_property_declaration8410); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACE1340_tree = 
            (Object)adaptor.create(CLOSE_BRACE1340)
            ;
            adaptor.addChild(root_0, CLOSE_BRACE1340_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_property_declaration"


    public static class interface_accessors_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_accessors"
    // CSharp4.g:1891:1: interface_accessors : ( attributes )? ( get_contextual_keyword SEMICOLON ( ( attributes )? set_contextual_keyword SEMICOLON )? | set_contextual_keyword SEMICOLON ( ( attributes )? get_contextual_keyword SEMICOLON )? ) ;
    public final CSharp4.interface_accessors_return interface_accessors() throws RecognitionException {
        CSharp4.interface_accessors_return retval = new CSharp4.interface_accessors_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SEMICOLON1343=null;
        Token SEMICOLON1346=null;
        Token SEMICOLON1348=null;
        Token SEMICOLON1351=null;
        CSharp4.attributes_return attributes1341 =null;

        CSharp4.get_contextual_keyword_return get_contextual_keyword1342 =null;

        CSharp4.attributes_return attributes1344 =null;

        CSharp4.set_contextual_keyword_return set_contextual_keyword1345 =null;

        CSharp4.set_contextual_keyword_return set_contextual_keyword1347 =null;

        CSharp4.attributes_return attributes1349 =null;

        CSharp4.get_contextual_keyword_return get_contextual_keyword1350 =null;


        Object SEMICOLON1343_tree=null;
        Object SEMICOLON1346_tree=null;
        Object SEMICOLON1348_tree=null;
        Object SEMICOLON1351_tree=null;

        try {
            // CSharp4.g:1892:3: ( ( attributes )? ( get_contextual_keyword SEMICOLON ( ( attributes )? set_contextual_keyword SEMICOLON )? | set_contextual_keyword SEMICOLON ( ( attributes )? get_contextual_keyword SEMICOLON )? ) )
            // CSharp4.g:1892:5: ( attributes )? ( get_contextual_keyword SEMICOLON ( ( attributes )? set_contextual_keyword SEMICOLON )? | set_contextual_keyword SEMICOLON ( ( attributes )? get_contextual_keyword SEMICOLON )? )
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1892:5: ( attributes )?
            int alt323=2;
            int LA323_0 = input.LA(1);

            if ( (LA323_0==OPEN_BRACKET) ) {
                alt323=1;
            }
            switch (alt323) {
                case 1 :
                    // CSharp4.g:1892:5: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_interface_accessors8424);
                    attributes1341=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1341.getTree());

                    }
                    break;

            }


            // CSharp4.g:1893:5: ( get_contextual_keyword SEMICOLON ( ( attributes )? set_contextual_keyword SEMICOLON )? | set_contextual_keyword SEMICOLON ( ( attributes )? get_contextual_keyword SEMICOLON )? )
            int alt328=2;
            int LA328_0 = input.LA(1);

            if ( (LA328_0==IDENTIFIER) ) {
                int LA328_1 = input.LA(2);

                if ( (LA328_1==SEMICOLON) ) {
                    int LA328_2 = input.LA(3);

                    if ( ((input.LT(1).getText().equals("get"))) ) {
                        alt328=1;
                    }
                    else if ( ((input.LT(1).getText().equals("set"))) ) {
                        alt328=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 328, 2, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 328, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 328, 0, input);

                throw nvae;

            }
            switch (alt328) {
                case 1 :
                    // CSharp4.g:1893:7: get_contextual_keyword SEMICOLON ( ( attributes )? set_contextual_keyword SEMICOLON )?
                    {
                    pushFollow(FOLLOW_get_contextual_keyword_in_interface_accessors8433);
                    get_contextual_keyword1342=get_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, get_contextual_keyword1342.getTree());

                    SEMICOLON1343=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interface_accessors8435); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1343_tree = 
                    (Object)adaptor.create(SEMICOLON1343)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1343_tree);
                    }

                    // CSharp4.g:1893:40: ( ( attributes )? set_contextual_keyword SEMICOLON )?
                    int alt325=2;
                    int LA325_0 = input.LA(1);

                    if ( (LA325_0==IDENTIFIER||LA325_0==OPEN_BRACKET) ) {
                        alt325=1;
                    }
                    switch (alt325) {
                        case 1 :
                            // CSharp4.g:1893:41: ( attributes )? set_contextual_keyword SEMICOLON
                            {
                            // CSharp4.g:1893:41: ( attributes )?
                            int alt324=2;
                            int LA324_0 = input.LA(1);

                            if ( (LA324_0==OPEN_BRACKET) ) {
                                alt324=1;
                            }
                            switch (alt324) {
                                case 1 :
                                    // CSharp4.g:1893:41: attributes
                                    {
                                    pushFollow(FOLLOW_attributes_in_interface_accessors8438);
                                    attributes1344=attributes();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1344.getTree());

                                    }
                                    break;

                            }


                            pushFollow(FOLLOW_set_contextual_keyword_in_interface_accessors8441);
                            set_contextual_keyword1345=set_contextual_keyword();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, set_contextual_keyword1345.getTree());

                            SEMICOLON1346=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interface_accessors8443); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            SEMICOLON1346_tree = 
                            (Object)adaptor.create(SEMICOLON1346)
                            ;
                            adaptor.addChild(root_0, SEMICOLON1346_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // CSharp4.g:1894:7: set_contextual_keyword SEMICOLON ( ( attributes )? get_contextual_keyword SEMICOLON )?
                    {
                    pushFollow(FOLLOW_set_contextual_keyword_in_interface_accessors8453);
                    set_contextual_keyword1347=set_contextual_keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, set_contextual_keyword1347.getTree());

                    SEMICOLON1348=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interface_accessors8455); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1348_tree = 
                    (Object)adaptor.create(SEMICOLON1348)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1348_tree);
                    }

                    // CSharp4.g:1894:40: ( ( attributes )? get_contextual_keyword SEMICOLON )?
                    int alt327=2;
                    int LA327_0 = input.LA(1);

                    if ( (LA327_0==IDENTIFIER||LA327_0==OPEN_BRACKET) ) {
                        alt327=1;
                    }
                    switch (alt327) {
                        case 1 :
                            // CSharp4.g:1894:41: ( attributes )? get_contextual_keyword SEMICOLON
                            {
                            // CSharp4.g:1894:41: ( attributes )?
                            int alt326=2;
                            int LA326_0 = input.LA(1);

                            if ( (LA326_0==OPEN_BRACKET) ) {
                                alt326=1;
                            }
                            switch (alt326) {
                                case 1 :
                                    // CSharp4.g:1894:41: attributes
                                    {
                                    pushFollow(FOLLOW_attributes_in_interface_accessors8458);
                                    attributes1349=attributes();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1349.getTree());

                                    }
                                    break;

                            }


                            pushFollow(FOLLOW_get_contextual_keyword_in_interface_accessors8461);
                            get_contextual_keyword1350=get_contextual_keyword();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, get_contextual_keyword1350.getTree());

                            SEMICOLON1351=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interface_accessors8463); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            SEMICOLON1351_tree = 
                            (Object)adaptor.create(SEMICOLON1351)
                            ;
                            adaptor.addChild(root_0, SEMICOLON1351_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_accessors"


    public static class interface_event_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_event_declaration"
    // CSharp4.g:1897:1: interface_event_declaration : ( attributes )? ( NEW )? EVENT type IDENTIFIER SEMICOLON ;
    public final CSharp4.interface_event_declaration_return interface_event_declaration() throws RecognitionException {
        CSharp4.interface_event_declaration_return retval = new CSharp4.interface_event_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW1353=null;
        Token EVENT1354=null;
        Token IDENTIFIER1356=null;
        Token SEMICOLON1357=null;
        CSharp4.attributes_return attributes1352 =null;

        CSharp4.type_return type1355 =null;


        Object NEW1353_tree=null;
        Object EVENT1354_tree=null;
        Object IDENTIFIER1356_tree=null;
        Object SEMICOLON1357_tree=null;

        try {
            // CSharp4.g:1898:2: ( ( attributes )? ( NEW )? EVENT type IDENTIFIER SEMICOLON )
            // CSharp4.g:1898:4: ( attributes )? ( NEW )? EVENT type IDENTIFIER SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1898:4: ( attributes )?
            int alt329=2;
            int LA329_0 = input.LA(1);

            if ( (LA329_0==OPEN_BRACKET) ) {
                alt329=1;
            }
            switch (alt329) {
                case 1 :
                    // CSharp4.g:1898:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_interface_event_declaration8483);
                    attributes1352=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1352.getTree());

                    }
                    break;

            }


            // CSharp4.g:1898:16: ( NEW )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==NEW) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // CSharp4.g:1898:16: NEW
                    {
                    NEW1353=(Token)match(input,NEW,FOLLOW_NEW_in_interface_event_declaration8486); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW1353_tree = 
                    (Object)adaptor.create(NEW1353)
                    ;
                    adaptor.addChild(root_0, NEW1353_tree);
                    }

                    }
                    break;

            }


            EVENT1354=(Token)match(input,EVENT,FOLLOW_EVENT_in_interface_event_declaration8489); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            EVENT1354_tree = 
            (Object)adaptor.create(EVENT1354)
            ;
            adaptor.addChild(root_0, EVENT1354_tree);
            }

            pushFollow(FOLLOW_type_in_interface_event_declaration8491);
            type1355=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1355.getTree());

            IDENTIFIER1356=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_interface_event_declaration8493); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1356_tree = 
            (Object)adaptor.create(IDENTIFIER1356)
            ;
            adaptor.addChild(root_0, IDENTIFIER1356_tree);
            }

            SEMICOLON1357=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interface_event_declaration8495); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON1357_tree = 
            (Object)adaptor.create(SEMICOLON1357)
            ;
            adaptor.addChild(root_0, SEMICOLON1357_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_event_declaration"


    public static class interface_indexer_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_indexer_declaration"
    // CSharp4.g:1900:1: interface_indexer_declaration : ( attributes )? ( NEW )? type THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE interface_accessors CLOSE_BRACE ;
    public final CSharp4.interface_indexer_declaration_return interface_indexer_declaration() throws RecognitionException {
        CSharp4.interface_indexer_declaration_return retval = new CSharp4.interface_indexer_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW1359=null;
        Token THIS1361=null;
        Token OPEN_BRACKET1362=null;
        Token CLOSE_BRACKET1364=null;
        Token OPEN_BRACE1365=null;
        Token CLOSE_BRACE1367=null;
        CSharp4.attributes_return attributes1358 =null;

        CSharp4.type_return type1360 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list1363 =null;

        CSharp4.interface_accessors_return interface_accessors1366 =null;


        Object NEW1359_tree=null;
        Object THIS1361_tree=null;
        Object OPEN_BRACKET1362_tree=null;
        Object CLOSE_BRACKET1364_tree=null;
        Object OPEN_BRACE1365_tree=null;
        Object CLOSE_BRACE1367_tree=null;

        try {
            // CSharp4.g:1901:2: ( ( attributes )? ( NEW )? type THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE interface_accessors CLOSE_BRACE )
            // CSharp4.g:1901:4: ( attributes )? ( NEW )? type THIS OPEN_BRACKET formal_parameter_list CLOSE_BRACKET OPEN_BRACE interface_accessors CLOSE_BRACE
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1901:4: ( attributes )?
            int alt331=2;
            int LA331_0 = input.LA(1);

            if ( (LA331_0==OPEN_BRACKET) ) {
                alt331=1;
            }
            switch (alt331) {
                case 1 :
                    // CSharp4.g:1901:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_interface_indexer_declaration8506);
                    attributes1358=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1358.getTree());

                    }
                    break;

            }


            // CSharp4.g:1901:16: ( NEW )?
            int alt332=2;
            int LA332_0 = input.LA(1);

            if ( (LA332_0==NEW) ) {
                alt332=1;
            }
            switch (alt332) {
                case 1 :
                    // CSharp4.g:1901:16: NEW
                    {
                    NEW1359=(Token)match(input,NEW,FOLLOW_NEW_in_interface_indexer_declaration8509); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW1359_tree = 
                    (Object)adaptor.create(NEW1359)
                    ;
                    adaptor.addChild(root_0, NEW1359_tree);
                    }

                    }
                    break;

            }


            pushFollow(FOLLOW_type_in_interface_indexer_declaration8512);
            type1360=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1360.getTree());

            THIS1361=(Token)match(input,THIS,FOLLOW_THIS_in_interface_indexer_declaration8514); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            THIS1361_tree = 
            (Object)adaptor.create(THIS1361)
            ;
            adaptor.addChild(root_0, THIS1361_tree);
            }

            OPEN_BRACKET1362=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_interface_indexer_declaration8516); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACKET1362_tree = 
            (Object)adaptor.create(OPEN_BRACKET1362)
            ;
            adaptor.addChild(root_0, OPEN_BRACKET1362_tree);
            }

            pushFollow(FOLLOW_formal_parameter_list_in_interface_indexer_declaration8518);
            formal_parameter_list1363=formal_parameter_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list1363.getTree());

            CLOSE_BRACKET1364=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_interface_indexer_declaration8520); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACKET1364_tree = 
            (Object)adaptor.create(CLOSE_BRACKET1364)
            ;
            adaptor.addChild(root_0, CLOSE_BRACKET1364_tree);
            }

            OPEN_BRACE1365=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_interface_indexer_declaration8522); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACE1365_tree = 
            (Object)adaptor.create(OPEN_BRACE1365)
            ;
            adaptor.addChild(root_0, OPEN_BRACE1365_tree);
            }

            pushFollow(FOLLOW_interface_accessors_in_interface_indexer_declaration8524);
            interface_accessors1366=interface_accessors();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_accessors1366.getTree());

            CLOSE_BRACE1367=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_interface_indexer_declaration8526); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACE1367_tree = 
            (Object)adaptor.create(CLOSE_BRACE1367)
            ;
            adaptor.addChild(root_0, CLOSE_BRACE1367_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_indexer_declaration"


    public static class enum_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "enum_declaration"
    // CSharp4.g:1906:1: enum_declaration : ( attributes )? ( enum_modifiers )? ENUM IDENTIFIER ( enum_base )? enum_body ( SEMICOLON )? ;
    public final CSharp4.enum_declaration_return enum_declaration() throws RecognitionException {
        CSharp4.enum_declaration_return retval = new CSharp4.enum_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token ENUM1370=null;
        Token IDENTIFIER1371=null;
        Token SEMICOLON1374=null;
        CSharp4.attributes_return attributes1368 =null;

        CSharp4.enum_modifiers_return enum_modifiers1369 =null;

        CSharp4.enum_base_return enum_base1372 =null;

        CSharp4.enum_body_return enum_body1373 =null;


        Object ENUM1370_tree=null;
        Object IDENTIFIER1371_tree=null;
        Object SEMICOLON1374_tree=null;

        try {
            // CSharp4.g:1907:2: ( ( attributes )? ( enum_modifiers )? ENUM IDENTIFIER ( enum_base )? enum_body ( SEMICOLON )? )
            // CSharp4.g:1907:4: ( attributes )? ( enum_modifiers )? ENUM IDENTIFIER ( enum_base )? enum_body ( SEMICOLON )?
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1907:4: ( attributes )?
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==OPEN_BRACKET) ) {
                alt333=1;
            }
            switch (alt333) {
                case 1 :
                    // CSharp4.g:1907:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_enum_declaration8540);
                    attributes1368=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1368.getTree());

                    }
                    break;

            }


            // CSharp4.g:1907:16: ( enum_modifiers )?
            int alt334=2;
            int LA334_0 = input.LA(1);

            if ( (LA334_0==INTERNAL||LA334_0==NEW||(LA334_0 >= PRIVATE && LA334_0 <= PUBLIC)) ) {
                alt334=1;
            }
            switch (alt334) {
                case 1 :
                    // CSharp4.g:1907:16: enum_modifiers
                    {
                    pushFollow(FOLLOW_enum_modifiers_in_enum_declaration8543);
                    enum_modifiers1369=enum_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_modifiers1369.getTree());

                    }
                    break;

            }


            ENUM1370=(Token)match(input,ENUM,FOLLOW_ENUM_in_enum_declaration8546); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ENUM1370_tree = 
            (Object)adaptor.create(ENUM1370)
            ;
            adaptor.addChild(root_0, ENUM1370_tree);
            }

            IDENTIFIER1371=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_enum_declaration8548); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1371_tree = 
            (Object)adaptor.create(IDENTIFIER1371)
            ;
            adaptor.addChild(root_0, IDENTIFIER1371_tree);
            }

            // CSharp4.g:1907:48: ( enum_base )?
            int alt335=2;
            int LA335_0 = input.LA(1);

            if ( (LA335_0==COLON) ) {
                alt335=1;
            }
            switch (alt335) {
                case 1 :
                    // CSharp4.g:1907:48: enum_base
                    {
                    pushFollow(FOLLOW_enum_base_in_enum_declaration8550);
                    enum_base1372=enum_base();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_base1372.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_enum_body_in_enum_declaration8553);
            enum_body1373=enum_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_body1373.getTree());

            // CSharp4.g:1907:69: ( SEMICOLON )?
            int alt336=2;
            int LA336_0 = input.LA(1);

            if ( (LA336_0==SEMICOLON) ) {
                alt336=1;
            }
            switch (alt336) {
                case 1 :
                    // CSharp4.g:1907:69: SEMICOLON
                    {
                    SEMICOLON1374=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_enum_declaration8555); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1374_tree = 
                    (Object)adaptor.create(SEMICOLON1374)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1374_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "enum_declaration"


    public static class enum_base_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "enum_base"
    // CSharp4.g:1909:1: enum_base : COLON integral_type ;
    public final CSharp4.enum_base_return enum_base() throws RecognitionException {
        CSharp4.enum_base_return retval = new CSharp4.enum_base_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COLON1375=null;
        CSharp4.integral_type_return integral_type1376 =null;


        Object COLON1375_tree=null;

        try {
            // CSharp4.g:1910:2: ( COLON integral_type )
            // CSharp4.g:1910:4: COLON integral_type
            {
            root_0 = (Object)adaptor.nil();


            COLON1375=(Token)match(input,COLON,FOLLOW_COLON_in_enum_base8567); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COLON1375_tree = 
            (Object)adaptor.create(COLON1375)
            ;
            adaptor.addChild(root_0, COLON1375_tree);
            }

            pushFollow(FOLLOW_integral_type_in_enum_base8569);
            integral_type1376=integral_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, integral_type1376.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "enum_base"


    public static class enum_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "enum_body"
    // CSharp4.g:1918:1: enum_body : ( OPEN_BRACE CLOSE_BRACE | OPEN_BRACE enum_member_declarations ( COMMA )? CLOSE_BRACE );
    public final CSharp4.enum_body_return enum_body() throws RecognitionException {
        CSharp4.enum_body_return retval = new CSharp4.enum_body_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE1377=null;
        Token CLOSE_BRACE1378=null;
        Token OPEN_BRACE1379=null;
        Token COMMA1381=null;
        Token CLOSE_BRACE1382=null;
        CSharp4.enum_member_declarations_return enum_member_declarations1380 =null;


        Object OPEN_BRACE1377_tree=null;
        Object CLOSE_BRACE1378_tree=null;
        Object OPEN_BRACE1379_tree=null;
        Object COMMA1381_tree=null;
        Object CLOSE_BRACE1382_tree=null;

        try {
            // CSharp4.g:1919:3: ( OPEN_BRACE CLOSE_BRACE | OPEN_BRACE enum_member_declarations ( COMMA )? CLOSE_BRACE )
            int alt338=2;
            int LA338_0 = input.LA(1);

            if ( (LA338_0==OPEN_BRACE) ) {
                int LA338_1 = input.LA(2);

                if ( (LA338_1==CLOSE_BRACE) ) {
                    alt338=1;
                }
                else if ( (LA338_1==IDENTIFIER||LA338_1==OPEN_BRACKET) ) {
                    alt338=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 338, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 338, 0, input);

                throw nvae;

            }
            switch (alt338) {
                case 1 :
                    // CSharp4.g:1919:5: OPEN_BRACE CLOSE_BRACE
                    {
                    root_0 = (Object)adaptor.nil();


                    OPEN_BRACE1377=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_enum_body8583); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACE1377_tree = 
                    (Object)adaptor.create(OPEN_BRACE1377)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACE1377_tree);
                    }

                    CLOSE_BRACE1378=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_enum_body8585); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACE1378_tree = 
                    (Object)adaptor.create(CLOSE_BRACE1378)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACE1378_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1920:5: OPEN_BRACE enum_member_declarations ( COMMA )? CLOSE_BRACE
                    {
                    root_0 = (Object)adaptor.nil();


                    OPEN_BRACE1379=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_enum_body8591); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPEN_BRACE1379_tree = 
                    (Object)adaptor.create(OPEN_BRACE1379)
                    ;
                    adaptor.addChild(root_0, OPEN_BRACE1379_tree);
                    }

                    pushFollow(FOLLOW_enum_member_declarations_in_enum_body8593);
                    enum_member_declarations1380=enum_member_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_member_declarations1380.getTree());

                    // CSharp4.g:1920:41: ( COMMA )?
                    int alt337=2;
                    int LA337_0 = input.LA(1);

                    if ( (LA337_0==COMMA) ) {
                        alt337=1;
                    }
                    switch (alt337) {
                        case 1 :
                            // CSharp4.g:1920:41: COMMA
                            {
                            COMMA1381=(Token)match(input,COMMA,FOLLOW_COMMA_in_enum_body8595); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            COMMA1381_tree = 
                            (Object)adaptor.create(COMMA1381)
                            ;
                            adaptor.addChild(root_0, COMMA1381_tree);
                            }

                            }
                            break;

                    }


                    CLOSE_BRACE1382=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_enum_body8598); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSE_BRACE1382_tree = 
                    (Object)adaptor.create(CLOSE_BRACE1382)
                    ;
                    adaptor.addChild(root_0, CLOSE_BRACE1382_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "enum_body"


    public static class enum_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "enum_modifiers"
    // CSharp4.g:1922:1: enum_modifiers : ( enum_modifier )+ ;
    public final CSharp4.enum_modifiers_return enum_modifiers() throws RecognitionException {
        CSharp4.enum_modifiers_return retval = new CSharp4.enum_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.enum_modifier_return enum_modifier1383 =null;



        try {
            // CSharp4.g:1923:2: ( ( enum_modifier )+ )
            // CSharp4.g:1923:4: ( enum_modifier )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1923:4: ( enum_modifier )+
            int cnt339=0;
            loop339:
            do {
                int alt339=2;
                int LA339_0 = input.LA(1);

                if ( (LA339_0==INTERNAL||LA339_0==NEW||(LA339_0 >= PRIVATE && LA339_0 <= PUBLIC)) ) {
                    alt339=1;
                }


                switch (alt339) {
            	case 1 :
            	    // CSharp4.g:1923:4: enum_modifier
            	    {
            	    pushFollow(FOLLOW_enum_modifier_in_enum_modifiers8610);
            	    enum_modifier1383=enum_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_modifier1383.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt339 >= 1 ) break loop339;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(339, input);
                        throw eee;
                }
                cnt339++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "enum_modifiers"


    public static class enum_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "enum_modifier"
    // CSharp4.g:1925:1: enum_modifier : ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE );
    public final CSharp4.enum_modifier_return enum_modifier() throws RecognitionException {
        CSharp4.enum_modifier_return retval = new CSharp4.enum_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set1384=null;

        Object set1384_tree=null;

        try {
            // CSharp4.g:1926:2: ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE )
            // CSharp4.g:
            {
            root_0 = (Object)adaptor.nil();


            set1384=(Token)input.LT(1);

            if ( input.LA(1)==INTERNAL||input.LA(1)==NEW||(input.LA(1) >= PRIVATE && input.LA(1) <= PUBLIC) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set1384)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "enum_modifier"


    public static class enum_member_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "enum_member_declarations"
    // CSharp4.g:1932:1: enum_member_declarations : enum_member_declaration ( COMMA enum_member_declaration )* ;
    public final CSharp4.enum_member_declarations_return enum_member_declarations() throws RecognitionException {
        CSharp4.enum_member_declarations_return retval = new CSharp4.enum_member_declarations_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA1386=null;
        CSharp4.enum_member_declaration_return enum_member_declaration1385 =null;

        CSharp4.enum_member_declaration_return enum_member_declaration1387 =null;


        Object COMMA1386_tree=null;

        try {
            // CSharp4.g:1933:2: ( enum_member_declaration ( COMMA enum_member_declaration )* )
            // CSharp4.g:1933:4: enum_member_declaration ( COMMA enum_member_declaration )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_enum_member_declaration_in_enum_member_declarations8653);
            enum_member_declaration1385=enum_member_declaration();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_member_declaration1385.getTree());

            // CSharp4.g:1933:28: ( COMMA enum_member_declaration )*
            loop340:
            do {
                int alt340=2;
                int LA340_0 = input.LA(1);

                if ( (LA340_0==COMMA) ) {
                    int LA340_1 = input.LA(2);

                    if ( (LA340_1==IDENTIFIER||LA340_1==OPEN_BRACKET) ) {
                        alt340=1;
                    }


                }


                switch (alt340) {
            	case 1 :
            	    // CSharp4.g:1933:30: COMMA enum_member_declaration
            	    {
            	    COMMA1386=(Token)match(input,COMMA,FOLLOW_COMMA_in_enum_member_declarations8657); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA1386_tree = 
            	    (Object)adaptor.create(COMMA1386)
            	    ;
            	    adaptor.addChild(root_0, COMMA1386_tree);
            	    }

            	    pushFollow(FOLLOW_enum_member_declaration_in_enum_member_declarations8660);
            	    enum_member_declaration1387=enum_member_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_member_declaration1387.getTree());

            	    }
            	    break;

            	default :
            	    break loop340;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "enum_member_declarations"


    public static class enum_member_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "enum_member_declaration"
    // CSharp4.g:1941:1: enum_member_declaration : ( attributes )? IDENTIFIER ( ASSIGNMENT constant_expression )? ;
    public final CSharp4.enum_member_declaration_return enum_member_declaration() throws RecognitionException {
        CSharp4.enum_member_declaration_return retval = new CSharp4.enum_member_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1389=null;
        Token ASSIGNMENT1390=null;
        CSharp4.attributes_return attributes1388 =null;

        CSharp4.constant_expression_return constant_expression1391 =null;


        Object IDENTIFIER1389_tree=null;
        Object ASSIGNMENT1390_tree=null;

        try {
            // CSharp4.g:1942:3: ( ( attributes )? IDENTIFIER ( ASSIGNMENT constant_expression )? )
            // CSharp4.g:1942:5: ( attributes )? IDENTIFIER ( ASSIGNMENT constant_expression )?
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1942:5: ( attributes )?
            int alt341=2;
            int LA341_0 = input.LA(1);

            if ( (LA341_0==OPEN_BRACKET) ) {
                alt341=1;
            }
            switch (alt341) {
                case 1 :
                    // CSharp4.g:1942:5: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_enum_member_declaration8677);
                    attributes1388=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1388.getTree());

                    }
                    break;

            }


            IDENTIFIER1389=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_enum_member_declaration8680); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1389_tree = 
            (Object)adaptor.create(IDENTIFIER1389)
            ;
            adaptor.addChild(root_0, IDENTIFIER1389_tree);
            }

            // CSharp4.g:1942:28: ( ASSIGNMENT constant_expression )?
            int alt342=2;
            int LA342_0 = input.LA(1);

            if ( (LA342_0==ASSIGNMENT) ) {
                alt342=1;
            }
            switch (alt342) {
                case 1 :
                    // CSharp4.g:1942:29: ASSIGNMENT constant_expression
                    {
                    ASSIGNMENT1390=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_enum_member_declaration8683); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGNMENT1390_tree = 
                    (Object)adaptor.create(ASSIGNMENT1390)
                    ;
                    adaptor.addChild(root_0, ASSIGNMENT1390_tree);
                    }

                    pushFollow(FOLLOW_constant_expression_in_enum_member_declaration8685);
                    constant_expression1391=constant_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression1391.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "enum_member_declaration"


    public static class delegate_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "delegate_declaration"
    // CSharp4.g:1946:1: delegate_declaration : ( attributes )? ( delegate_modifiers )? DELEGATE return_type IDENTIFIER ( variant_type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON ;
    public final CSharp4.delegate_declaration_return delegate_declaration() throws RecognitionException {
        CSharp4.delegate_declaration_return retval = new CSharp4.delegate_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token DELEGATE1394=null;
        Token IDENTIFIER1396=null;
        Token OPEN_PARENS1398=null;
        Token CLOSE_PARENS1400=null;
        Token SEMICOLON1402=null;
        CSharp4.attributes_return attributes1392 =null;

        CSharp4.delegate_modifiers_return delegate_modifiers1393 =null;

        CSharp4.return_type_return return_type1395 =null;

        CSharp4.variant_type_parameter_list_return variant_type_parameter_list1397 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list1399 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses1401 =null;


        Object DELEGATE1394_tree=null;
        Object IDENTIFIER1396_tree=null;
        Object OPEN_PARENS1398_tree=null;
        Object CLOSE_PARENS1400_tree=null;
        Object SEMICOLON1402_tree=null;

        try {
            // CSharp4.g:1947:2: ( ( attributes )? ( delegate_modifiers )? DELEGATE return_type IDENTIFIER ( variant_type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON )
            // CSharp4.g:1947:4: ( attributes )? ( delegate_modifiers )? DELEGATE return_type IDENTIFIER ( variant_type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1947:4: ( attributes )?
            int alt343=2;
            int LA343_0 = input.LA(1);

            if ( (LA343_0==OPEN_BRACKET) ) {
                alt343=1;
            }
            switch (alt343) {
                case 1 :
                    // CSharp4.g:1947:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_delegate_declaration8701);
                    attributes1392=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1392.getTree());

                    }
                    break;

            }


            // CSharp4.g:1947:16: ( delegate_modifiers )?
            int alt344=2;
            int LA344_0 = input.LA(1);

            if ( (LA344_0==INTERNAL||LA344_0==NEW||(LA344_0 >= PRIVATE && LA344_0 <= PUBLIC)||LA344_0==UNSAFE) ) {
                alt344=1;
            }
            switch (alt344) {
                case 1 :
                    // CSharp4.g:1947:16: delegate_modifiers
                    {
                    pushFollow(FOLLOW_delegate_modifiers_in_delegate_declaration8704);
                    delegate_modifiers1393=delegate_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_modifiers1393.getTree());

                    }
                    break;

            }


            DELEGATE1394=(Token)match(input,DELEGATE,FOLLOW_DELEGATE_in_delegate_declaration8707); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            DELEGATE1394_tree = 
            (Object)adaptor.create(DELEGATE1394)
            ;
            adaptor.addChild(root_0, DELEGATE1394_tree);
            }

            pushFollow(FOLLOW_return_type_in_delegate_declaration8709);
            return_type1395=return_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, return_type1395.getTree());

            IDENTIFIER1396=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_delegate_declaration8711); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1396_tree = 
            (Object)adaptor.create(IDENTIFIER1396)
            ;
            adaptor.addChild(root_0, IDENTIFIER1396_tree);
            }

            // CSharp4.g:1947:68: ( variant_type_parameter_list )?
            int alt345=2;
            int LA345_0 = input.LA(1);

            if ( (LA345_0==LT) ) {
                alt345=1;
            }
            switch (alt345) {
                case 1 :
                    // CSharp4.g:1947:68: variant_type_parameter_list
                    {
                    pushFollow(FOLLOW_variant_type_parameter_list_in_delegate_declaration8713);
                    variant_type_parameter_list1397=variant_type_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_parameter_list1397.getTree());

                    }
                    break;

            }


            OPEN_PARENS1398=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_delegate_declaration8722); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1398_tree = 
            (Object)adaptor.create(OPEN_PARENS1398)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1398_tree);
            }

            // CSharp4.g:1948:18: ( formal_parameter_list )?
            int alt346=2;
            int LA346_0 = input.LA(1);

            if ( (LA346_0==BOOL||LA346_0==BYTE||LA346_0==CHAR||LA346_0==DECIMAL||LA346_0==DOUBLE||LA346_0==FLOAT||LA346_0==IDENTIFIER||LA346_0==INT||LA346_0==LONG||LA346_0==OBJECT||LA346_0==OPEN_BRACKET||LA346_0==OUT||LA346_0==PARAMS||LA346_0==REF||LA346_0==SBYTE||LA346_0==SHORT||LA346_0==STRING||LA346_0==THIS||(LA346_0 >= UINT && LA346_0 <= ULONG)||LA346_0==USHORT||LA346_0==VOID) ) {
                alt346=1;
            }
            switch (alt346) {
                case 1 :
                    // CSharp4.g:1948:18: formal_parameter_list
                    {
                    pushFollow(FOLLOW_formal_parameter_list_in_delegate_declaration8724);
                    formal_parameter_list1399=formal_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list1399.getTree());

                    }
                    break;

            }


            CLOSE_PARENS1400=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_delegate_declaration8727); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1400_tree = 
            (Object)adaptor.create(CLOSE_PARENS1400)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1400_tree);
            }

            // CSharp4.g:1948:54: ( type_parameter_constraints_clauses )?
            int alt347=2;
            int LA347_0 = input.LA(1);

            if ( (LA347_0==IDENTIFIER) ) {
                alt347=1;
            }
            switch (alt347) {
                case 1 :
                    // CSharp4.g:1948:54: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_delegate_declaration8729);
                    type_parameter_constraints_clauses1401=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses1401.getTree());

                    }
                    break;

            }


            SEMICOLON1402=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_delegate_declaration8732); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON1402_tree = 
            (Object)adaptor.create(SEMICOLON1402)
            ;
            adaptor.addChild(root_0, SEMICOLON1402_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "delegate_declaration"


    public static class delegate_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "delegate_modifiers"
    // CSharp4.g:1950:1: delegate_modifiers : delegate_modifier ( delegate_modifier )* ;
    public final CSharp4.delegate_modifiers_return delegate_modifiers() throws RecognitionException {
        CSharp4.delegate_modifiers_return retval = new CSharp4.delegate_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.delegate_modifier_return delegate_modifier1403 =null;

        CSharp4.delegate_modifier_return delegate_modifier1404 =null;



        try {
            // CSharp4.g:1951:2: ( delegate_modifier ( delegate_modifier )* )
            // CSharp4.g:1951:4: delegate_modifier ( delegate_modifier )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_delegate_modifier_in_delegate_modifiers8743);
            delegate_modifier1403=delegate_modifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_modifier1403.getTree());

            // CSharp4.g:1951:22: ( delegate_modifier )*
            loop348:
            do {
                int alt348=2;
                int LA348_0 = input.LA(1);

                if ( (LA348_0==INTERNAL||LA348_0==NEW||(LA348_0 >= PRIVATE && LA348_0 <= PUBLIC)||LA348_0==UNSAFE) ) {
                    alt348=1;
                }


                switch (alt348) {
            	case 1 :
            	    // CSharp4.g:1951:24: delegate_modifier
            	    {
            	    pushFollow(FOLLOW_delegate_modifier_in_delegate_modifiers8747);
            	    delegate_modifier1404=delegate_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_modifier1404.getTree());

            	    }
            	    break;

            	default :
            	    break loop348;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "delegate_modifiers"


    public static class delegate_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "delegate_modifier"
    // CSharp4.g:1953:1: delegate_modifier : ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | delegate_modifier_unsafe );
    public final CSharp4.delegate_modifier_return delegate_modifier() throws RecognitionException {
        CSharp4.delegate_modifier_return retval = new CSharp4.delegate_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token NEW1405=null;
        Token PUBLIC1406=null;
        Token PROTECTED1407=null;
        Token INTERNAL1408=null;
        Token PRIVATE1409=null;
        CSharp4.delegate_modifier_unsafe_return delegate_modifier_unsafe1410 =null;


        Object NEW1405_tree=null;
        Object PUBLIC1406_tree=null;
        Object PROTECTED1407_tree=null;
        Object INTERNAL1408_tree=null;
        Object PRIVATE1409_tree=null;

        try {
            // CSharp4.g:1954:2: ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | delegate_modifier_unsafe )
            int alt349=6;
            switch ( input.LA(1) ) {
            case NEW:
                {
                alt349=1;
                }
                break;
            case PUBLIC:
                {
                alt349=2;
                }
                break;
            case PROTECTED:
                {
                alt349=3;
                }
                break;
            case INTERNAL:
                {
                alt349=4;
                }
                break;
            case PRIVATE:
                {
                alt349=5;
                }
                break;
            case UNSAFE:
                {
                alt349=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 349, 0, input);

                throw nvae;

            }

            switch (alt349) {
                case 1 :
                    // CSharp4.g:1954:4: NEW
                    {
                    root_0 = (Object)adaptor.nil();


                    NEW1405=(Token)match(input,NEW,FOLLOW_NEW_in_delegate_modifier8761); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NEW1405_tree = 
                    (Object)adaptor.create(NEW1405)
                    ;
                    adaptor.addChild(root_0, NEW1405_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:1955:4: PUBLIC
                    {
                    root_0 = (Object)adaptor.nil();


                    PUBLIC1406=(Token)match(input,PUBLIC,FOLLOW_PUBLIC_in_delegate_modifier8766); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PUBLIC1406_tree = 
                    (Object)adaptor.create(PUBLIC1406)
                    ;
                    adaptor.addChild(root_0, PUBLIC1406_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:1956:4: PROTECTED
                    {
                    root_0 = (Object)adaptor.nil();


                    PROTECTED1407=(Token)match(input,PROTECTED,FOLLOW_PROTECTED_in_delegate_modifier8771); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PROTECTED1407_tree = 
                    (Object)adaptor.create(PROTECTED1407)
                    ;
                    adaptor.addChild(root_0, PROTECTED1407_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:1957:4: INTERNAL
                    {
                    root_0 = (Object)adaptor.nil();


                    INTERNAL1408=(Token)match(input,INTERNAL,FOLLOW_INTERNAL_in_delegate_modifier8776); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTERNAL1408_tree = 
                    (Object)adaptor.create(INTERNAL1408)
                    ;
                    adaptor.addChild(root_0, INTERNAL1408_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:1958:4: PRIVATE
                    {
                    root_0 = (Object)adaptor.nil();


                    PRIVATE1409=(Token)match(input,PRIVATE,FOLLOW_PRIVATE_in_delegate_modifier8781); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PRIVATE1409_tree = 
                    (Object)adaptor.create(PRIVATE1409)
                    ;
                    adaptor.addChild(root_0, PRIVATE1409_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:1959:4: delegate_modifier_unsafe
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_delegate_modifier_unsafe_in_delegate_modifier8786);
                    delegate_modifier_unsafe1410=delegate_modifier_unsafe();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_modifier_unsafe1410.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "delegate_modifier"


    public static class global_attributes_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "global_attributes"
    // CSharp4.g:1965:1: global_attributes : global_attribute_sections ;
    public final CSharp4.global_attributes_return global_attributes() throws RecognitionException {
        CSharp4.global_attributes_return retval = new CSharp4.global_attributes_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.global_attribute_sections_return global_attribute_sections1411 =null;



        try {
            // CSharp4.g:1966:2: ( global_attribute_sections )
            // CSharp4.g:1966:4: global_attribute_sections
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_global_attribute_sections_in_global_attributes8801);
            global_attribute_sections1411=global_attribute_sections();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute_sections1411.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "global_attributes"


    public static class global_attribute_sections_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "global_attribute_sections"
    // CSharp4.g:1968:1: global_attribute_sections : ( global_attribute_section )+ ;
    public final CSharp4.global_attribute_sections_return global_attribute_sections() throws RecognitionException {
        CSharp4.global_attribute_sections_return retval = new CSharp4.global_attribute_sections_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.global_attribute_section_return global_attribute_section1412 =null;



        try {
            // CSharp4.g:1969:2: ( ( global_attribute_section )+ )
            // CSharp4.g:1969:4: ( global_attribute_section )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1969:4: ( global_attribute_section )+
            int cnt350=0;
            loop350:
            do {
                int alt350=2;
                int LA350_0 = input.LA(1);

                if ( (LA350_0==OPEN_BRACKET) ) {
                    alt350=1;
                }


                switch (alt350) {
            	case 1 :
            	    // CSharp4.g:1969:4: global_attribute_section
            	    {
            	    pushFollow(FOLLOW_global_attribute_section_in_global_attribute_sections8812);
            	    global_attribute_section1412=global_attribute_section();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute_section1412.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt350 >= 1 ) break loop350;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(350, input);
                        throw eee;
                }
                cnt350++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "global_attribute_sections"


    public static class global_attribute_section_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "global_attribute_section"
    // CSharp4.g:1977:1: global_attribute_section : OPEN_BRACKET global_attribute_target_specifier attribute_list ( COMMA )? CLOSE_BRACKET ;
    public final CSharp4.global_attribute_section_return global_attribute_section() throws RecognitionException {
        CSharp4.global_attribute_section_return retval = new CSharp4.global_attribute_section_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACKET1413=null;
        Token COMMA1416=null;
        Token CLOSE_BRACKET1417=null;
        CSharp4.global_attribute_target_specifier_return global_attribute_target_specifier1414 =null;

        CSharp4.attribute_list_return attribute_list1415 =null;


        Object OPEN_BRACKET1413_tree=null;
        Object COMMA1416_tree=null;
        Object CLOSE_BRACKET1417_tree=null;

        try {
            // CSharp4.g:1978:3: ( OPEN_BRACKET global_attribute_target_specifier attribute_list ( COMMA )? CLOSE_BRACKET )
            // CSharp4.g:1978:5: OPEN_BRACKET global_attribute_target_specifier attribute_list ( COMMA )? CLOSE_BRACKET
            {
            root_0 = (Object)adaptor.nil();


            OPEN_BRACKET1413=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_global_attribute_section8827); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACKET1413_tree = 
            (Object)adaptor.create(OPEN_BRACKET1413)
            ;
            adaptor.addChild(root_0, OPEN_BRACKET1413_tree);
            }

            pushFollow(FOLLOW_global_attribute_target_specifier_in_global_attribute_section8829);
            global_attribute_target_specifier1414=global_attribute_target_specifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute_target_specifier1414.getTree());

            pushFollow(FOLLOW_attribute_list_in_global_attribute_section8831);
            attribute_list1415=attribute_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_list1415.getTree());

            // CSharp4.g:1978:67: ( COMMA )?
            int alt351=2;
            int LA351_0 = input.LA(1);

            if ( (LA351_0==COMMA) ) {
                alt351=1;
            }
            switch (alt351) {
                case 1 :
                    // CSharp4.g:1978:67: COMMA
                    {
                    COMMA1416=(Token)match(input,COMMA,FOLLOW_COMMA_in_global_attribute_section8833); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA1416_tree = 
                    (Object)adaptor.create(COMMA1416)
                    ;
                    adaptor.addChild(root_0, COMMA1416_tree);
                    }

                    }
                    break;

            }


            CLOSE_BRACKET1417=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_global_attribute_section8836); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACKET1417_tree = 
            (Object)adaptor.create(CLOSE_BRACKET1417)
            ;
            adaptor.addChild(root_0, CLOSE_BRACKET1417_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "global_attribute_section"


    public static class global_attribute_target_specifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "global_attribute_target_specifier"
    // CSharp4.g:1980:1: global_attribute_target_specifier : global_attribute_target COLON ;
    public final CSharp4.global_attribute_target_specifier_return global_attribute_target_specifier() throws RecognitionException {
        CSharp4.global_attribute_target_specifier_return retval = new CSharp4.global_attribute_target_specifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COLON1419=null;
        CSharp4.global_attribute_target_return global_attribute_target1418 =null;


        Object COLON1419_tree=null;

        try {
            // CSharp4.g:1981:2: ( global_attribute_target COLON )
            // CSharp4.g:1981:4: global_attribute_target COLON
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_global_attribute_target_in_global_attribute_target_specifier8848);
            global_attribute_target1418=global_attribute_target();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute_target1418.getTree());

            COLON1419=(Token)match(input,COLON,FOLLOW_COLON_in_global_attribute_target_specifier8850); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COLON1419_tree = 
            (Object)adaptor.create(COLON1419)
            ;
            adaptor.addChild(root_0, COLON1419_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "global_attribute_target_specifier"


    public static class global_attribute_target_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "global_attribute_target"
    // CSharp4.g:1983:1: global_attribute_target : ( keyword | IDENTIFIER );
    public final CSharp4.global_attribute_target_return global_attribute_target() throws RecognitionException {
        CSharp4.global_attribute_target_return retval = new CSharp4.global_attribute_target_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1421=null;
        CSharp4.keyword_return keyword1420 =null;


        Object IDENTIFIER1421_tree=null;

        try {
            // CSharp4.g:1984:3: ( keyword | IDENTIFIER )
            int alt352=2;
            int LA352_0 = input.LA(1);

            if ( (LA352_0==ABSTRACT||LA352_0==AS||LA352_0==BASE||(LA352_0 >= BOOL && LA352_0 <= BYTE)||(LA352_0 >= CASE && LA352_0 <= CHAR)||(LA352_0 >= CHECKED && LA352_0 <= CLASS)||(LA352_0 >= CONST && LA352_0 <= CONTINUE)||LA352_0==DECIMAL||(LA352_0 >= DEFAULT && LA352_0 <= DELEGATE)||LA352_0==DO||LA352_0==DOUBLE||(LA352_0 >= ELSE && LA352_0 <= EXTERN)||(LA352_0 >= FALSE && LA352_0 <= FOREACH)||LA352_0==GOTO||(LA352_0 >= IF && LA352_0 <= INT)||(LA352_0 >= INTERFACE && LA352_0 <= INTERNAL)||LA352_0==IS||(LA352_0 >= LOCK && LA352_0 <= LONG)||(LA352_0 >= NAMESPACE && LA352_0 <= NEW)||LA352_0==NULL||LA352_0==OBJECT||LA352_0==OPERATOR||(LA352_0 >= OUT && LA352_0 <= PARAMS)||(LA352_0 >= PRIVATE && LA352_0 <= PUBLIC)||LA352_0==READONLY||(LA352_0 >= REF && LA352_0 <= RETURN)||(LA352_0 >= SBYTE && LA352_0 <= SEALED)||LA352_0==SHORT||(LA352_0 >= SIZEOF && LA352_0 <= STACKALLOC)||(LA352_0 >= STATIC && LA352_0 <= STRING)||(LA352_0 >= STRUCT && LA352_0 <= SWITCH)||(LA352_0 >= THIS && LA352_0 <= THROW)||(LA352_0 >= TRUE && LA352_0 <= UNCHECKED)||(LA352_0 >= UNSAFE && LA352_0 <= USING)||(LA352_0 >= VIRTUAL && LA352_0 <= VOLATILE)||LA352_0==WHILE) ) {
                alt352=1;
            }
            else if ( (LA352_0==IDENTIFIER) ) {
                alt352=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 352, 0, input);

                throw nvae;

            }
            switch (alt352) {
                case 1 :
                    // CSharp4.g:1984:5: keyword
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_keyword_in_global_attribute_target8862);
                    keyword1420=keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, keyword1420.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:1985:5: IDENTIFIER
                    {
                    root_0 = (Object)adaptor.nil();


                    IDENTIFIER1421=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_global_attribute_target8868); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER1421_tree = 
                    (Object)adaptor.create(IDENTIFIER1421)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER1421_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "global_attribute_target"


    public static class attributes_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "attributes"
    // CSharp4.g:1993:1: attributes : attribute_sections ;
    public final CSharp4.attributes_return attributes() throws RecognitionException {
        CSharp4.attributes_return retval = new CSharp4.attributes_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.attribute_sections_return attribute_sections1422 =null;



        try {
            // CSharp4.g:1994:2: ( attribute_sections )
            // CSharp4.g:1994:4: attribute_sections
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_attribute_sections_in_attributes8882);
            attribute_sections1422=attribute_sections();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_sections1422.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "attributes"


    public static class attribute_sections_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "attribute_sections"
    // CSharp4.g:1996:1: attribute_sections : ( attribute_section )+ ;
    public final CSharp4.attribute_sections_return attribute_sections() throws RecognitionException {
        CSharp4.attribute_sections_return retval = new CSharp4.attribute_sections_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.attribute_section_return attribute_section1423 =null;



        try {
            // CSharp4.g:1997:2: ( ( attribute_section )+ )
            // CSharp4.g:1997:4: ( attribute_section )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:1997:4: ( attribute_section )+
            int cnt353=0;
            loop353:
            do {
                int alt353=2;
                int LA353_0 = input.LA(1);

                if ( (LA353_0==OPEN_BRACKET) ) {
                    alt353=1;
                }


                switch (alt353) {
            	case 1 :
            	    // CSharp4.g:1997:4: attribute_section
            	    {
            	    pushFollow(FOLLOW_attribute_section_in_attribute_sections8893);
            	    attribute_section1423=attribute_section();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_section1423.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt353 >= 1 ) break loop353;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(353, input);
                        throw eee;
                }
                cnt353++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "attribute_sections"


    public static class attribute_section_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "attribute_section"
    // CSharp4.g:2005:1: attribute_section : OPEN_BRACKET ( attribute_target_specifier )? attribute_list ( COMMA )? CLOSE_BRACKET ;
    public final CSharp4.attribute_section_return attribute_section() throws RecognitionException {
        CSharp4.attribute_section_return retval = new CSharp4.attribute_section_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACKET1424=null;
        Token COMMA1427=null;
        Token CLOSE_BRACKET1428=null;
        CSharp4.attribute_target_specifier_return attribute_target_specifier1425 =null;

        CSharp4.attribute_list_return attribute_list1426 =null;


        Object OPEN_BRACKET1424_tree=null;
        Object COMMA1427_tree=null;
        Object CLOSE_BRACKET1428_tree=null;

        try {
            // CSharp4.g:2006:3: ( OPEN_BRACKET ( attribute_target_specifier )? attribute_list ( COMMA )? CLOSE_BRACKET )
            // CSharp4.g:2006:5: OPEN_BRACKET ( attribute_target_specifier )? attribute_list ( COMMA )? CLOSE_BRACKET
            {
            root_0 = (Object)adaptor.nil();


            OPEN_BRACKET1424=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_attribute_section8908); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACKET1424_tree = 
            (Object)adaptor.create(OPEN_BRACKET1424)
            ;
            adaptor.addChild(root_0, OPEN_BRACKET1424_tree);
            }

            // CSharp4.g:2006:18: ( attribute_target_specifier )?
            int alt354=2;
            int LA354_0 = input.LA(1);

            if ( (LA354_0==ABSTRACT||LA354_0==AS||LA354_0==BASE||(LA354_0 >= BOOL && LA354_0 <= BYTE)||(LA354_0 >= CASE && LA354_0 <= CHAR)||(LA354_0 >= CHECKED && LA354_0 <= CLASS)||(LA354_0 >= CONST && LA354_0 <= CONTINUE)||LA354_0==DECIMAL||(LA354_0 >= DEFAULT && LA354_0 <= DELEGATE)||LA354_0==DO||LA354_0==DOUBLE||(LA354_0 >= ELSE && LA354_0 <= EXTERN)||(LA354_0 >= FALSE && LA354_0 <= FOREACH)||LA354_0==GOTO||(LA354_0 >= IF && LA354_0 <= INT)||(LA354_0 >= INTERFACE && LA354_0 <= INTERNAL)||LA354_0==IS||(LA354_0 >= LOCK && LA354_0 <= LONG)||(LA354_0 >= NAMESPACE && LA354_0 <= NEW)||LA354_0==NULL||LA354_0==OBJECT||LA354_0==OPERATOR||(LA354_0 >= OUT && LA354_0 <= PARAMS)||(LA354_0 >= PRIVATE && LA354_0 <= PUBLIC)||LA354_0==READONLY||(LA354_0 >= REF && LA354_0 <= RETURN)||(LA354_0 >= SBYTE && LA354_0 <= SEALED)||LA354_0==SHORT||(LA354_0 >= SIZEOF && LA354_0 <= STACKALLOC)||(LA354_0 >= STATIC && LA354_0 <= STRING)||(LA354_0 >= STRUCT && LA354_0 <= SWITCH)||(LA354_0 >= THIS && LA354_0 <= THROW)||(LA354_0 >= TRUE && LA354_0 <= UNCHECKED)||(LA354_0 >= UNSAFE && LA354_0 <= USING)||(LA354_0 >= VIRTUAL && LA354_0 <= VOLATILE)||LA354_0==WHILE) ) {
                alt354=1;
            }
            else if ( (LA354_0==IDENTIFIER) ) {
                int LA354_2 = input.LA(2);

                if ( (LA354_2==COLON) ) {
                    alt354=1;
                }
            }
            switch (alt354) {
                case 1 :
                    // CSharp4.g:2006:18: attribute_target_specifier
                    {
                    pushFollow(FOLLOW_attribute_target_specifier_in_attribute_section8910);
                    attribute_target_specifier1425=attribute_target_specifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_target_specifier1425.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_attribute_list_in_attribute_section8913);
            attribute_list1426=attribute_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_list1426.getTree());

            // CSharp4.g:2006:61: ( COMMA )?
            int alt355=2;
            int LA355_0 = input.LA(1);

            if ( (LA355_0==COMMA) ) {
                alt355=1;
            }
            switch (alt355) {
                case 1 :
                    // CSharp4.g:2006:61: COMMA
                    {
                    COMMA1427=(Token)match(input,COMMA,FOLLOW_COMMA_in_attribute_section8915); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA1427_tree = 
                    (Object)adaptor.create(COMMA1427)
                    ;
                    adaptor.addChild(root_0, COMMA1427_tree);
                    }

                    }
                    break;

            }


            CLOSE_BRACKET1428=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_attribute_section8918); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACKET1428_tree = 
            (Object)adaptor.create(CLOSE_BRACKET1428)
            ;
            adaptor.addChild(root_0, CLOSE_BRACKET1428_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "attribute_section"


    public static class attribute_target_specifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "attribute_target_specifier"
    // CSharp4.g:2008:1: attribute_target_specifier : attribute_target COLON ;
    public final CSharp4.attribute_target_specifier_return attribute_target_specifier() throws RecognitionException {
        CSharp4.attribute_target_specifier_return retval = new CSharp4.attribute_target_specifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COLON1430=null;
        CSharp4.attribute_target_return attribute_target1429 =null;


        Object COLON1430_tree=null;

        try {
            // CSharp4.g:2009:2: ( attribute_target COLON )
            // CSharp4.g:2009:4: attribute_target COLON
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_attribute_target_in_attribute_target_specifier8930);
            attribute_target1429=attribute_target();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_target1429.getTree());

            COLON1430=(Token)match(input,COLON,FOLLOW_COLON_in_attribute_target_specifier8932); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COLON1430_tree = 
            (Object)adaptor.create(COLON1430)
            ;
            adaptor.addChild(root_0, COLON1430_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "attribute_target_specifier"


    public static class attribute_target_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "attribute_target"
    // CSharp4.g:2011:1: attribute_target : ( keyword | IDENTIFIER );
    public final CSharp4.attribute_target_return attribute_target() throws RecognitionException {
        CSharp4.attribute_target_return retval = new CSharp4.attribute_target_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1432=null;
        CSharp4.keyword_return keyword1431 =null;


        Object IDENTIFIER1432_tree=null;

        try {
            // CSharp4.g:2012:3: ( keyword | IDENTIFIER )
            int alt356=2;
            int LA356_0 = input.LA(1);

            if ( (LA356_0==ABSTRACT||LA356_0==AS||LA356_0==BASE||(LA356_0 >= BOOL && LA356_0 <= BYTE)||(LA356_0 >= CASE && LA356_0 <= CHAR)||(LA356_0 >= CHECKED && LA356_0 <= CLASS)||(LA356_0 >= CONST && LA356_0 <= CONTINUE)||LA356_0==DECIMAL||(LA356_0 >= DEFAULT && LA356_0 <= DELEGATE)||LA356_0==DO||LA356_0==DOUBLE||(LA356_0 >= ELSE && LA356_0 <= EXTERN)||(LA356_0 >= FALSE && LA356_0 <= FOREACH)||LA356_0==GOTO||(LA356_0 >= IF && LA356_0 <= INT)||(LA356_0 >= INTERFACE && LA356_0 <= INTERNAL)||LA356_0==IS||(LA356_0 >= LOCK && LA356_0 <= LONG)||(LA356_0 >= NAMESPACE && LA356_0 <= NEW)||LA356_0==NULL||LA356_0==OBJECT||LA356_0==OPERATOR||(LA356_0 >= OUT && LA356_0 <= PARAMS)||(LA356_0 >= PRIVATE && LA356_0 <= PUBLIC)||LA356_0==READONLY||(LA356_0 >= REF && LA356_0 <= RETURN)||(LA356_0 >= SBYTE && LA356_0 <= SEALED)||LA356_0==SHORT||(LA356_0 >= SIZEOF && LA356_0 <= STACKALLOC)||(LA356_0 >= STATIC && LA356_0 <= STRING)||(LA356_0 >= STRUCT && LA356_0 <= SWITCH)||(LA356_0 >= THIS && LA356_0 <= THROW)||(LA356_0 >= TRUE && LA356_0 <= UNCHECKED)||(LA356_0 >= UNSAFE && LA356_0 <= USING)||(LA356_0 >= VIRTUAL && LA356_0 <= VOLATILE)||LA356_0==WHILE) ) {
                alt356=1;
            }
            else if ( (LA356_0==IDENTIFIER) ) {
                alt356=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 0, input);

                throw nvae;

            }
            switch (alt356) {
                case 1 :
                    // CSharp4.g:2012:5: keyword
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_keyword_in_attribute_target8944);
                    keyword1431=keyword();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, keyword1431.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:2013:5: IDENTIFIER
                    {
                    root_0 = (Object)adaptor.nil();


                    IDENTIFIER1432=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_attribute_target8950); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER1432_tree = 
                    (Object)adaptor.create(IDENTIFIER1432)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER1432_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "attribute_target"


    public static class attribute_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "attribute_list"
    // CSharp4.g:2026:1: attribute_list : attribute ( COMMA attribute )* ;
    public final CSharp4.attribute_list_return attribute_list() throws RecognitionException {
        CSharp4.attribute_list_return retval = new CSharp4.attribute_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA1434=null;
        CSharp4.attribute_return attribute1433 =null;

        CSharp4.attribute_return attribute1435 =null;


        Object COMMA1434_tree=null;

        try {
            // CSharp4.g:2027:2: ( attribute ( COMMA attribute )* )
            // CSharp4.g:2027:4: attribute ( COMMA attribute )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_attribute_in_attribute_list8964);
            attribute1433=attribute();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute1433.getTree());

            // CSharp4.g:2027:14: ( COMMA attribute )*
            loop357:
            do {
                int alt357=2;
                int LA357_0 = input.LA(1);

                if ( (LA357_0==COMMA) ) {
                    int LA357_1 = input.LA(2);

                    if ( (LA357_1==IDENTIFIER) ) {
                        alt357=1;
                    }


                }


                switch (alt357) {
            	case 1 :
            	    // CSharp4.g:2027:16: COMMA attribute
            	    {
            	    COMMA1434=(Token)match(input,COMMA,FOLLOW_COMMA_in_attribute_list8968); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA1434_tree = 
            	    (Object)adaptor.create(COMMA1434)
            	    ;
            	    adaptor.addChild(root_0, COMMA1434_tree);
            	    }

            	    pushFollow(FOLLOW_attribute_in_attribute_list8971);
            	    attribute1435=attribute();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute1435.getTree());

            	    }
            	    break;

            	default :
            	    break loop357;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "attribute_list"


    public static class attribute_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "attribute"
    // CSharp4.g:2029:1: attribute : attribute_name ( attribute_arguments )? ;
    public final CSharp4.attribute_return attribute() throws RecognitionException {
        CSharp4.attribute_return retval = new CSharp4.attribute_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.attribute_name_return attribute_name1436 =null;

        CSharp4.attribute_arguments_return attribute_arguments1437 =null;



        try {
            // CSharp4.g:2030:2: ( attribute_name ( attribute_arguments )? )
            // CSharp4.g:2030:4: attribute_name ( attribute_arguments )?
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_attribute_name_in_attribute8985);
            attribute_name1436=attribute_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_name1436.getTree());

            // CSharp4.g:2030:19: ( attribute_arguments )?
            int alt358=2;
            int LA358_0 = input.LA(1);

            if ( (LA358_0==OPEN_PARENS) ) {
                alt358=1;
            }
            switch (alt358) {
                case 1 :
                    // CSharp4.g:2030:19: attribute_arguments
                    {
                    pushFollow(FOLLOW_attribute_arguments_in_attribute8987);
                    attribute_arguments1437=attribute_arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_arguments1437.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "attribute"


    public static class attribute_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "attribute_name"
    // CSharp4.g:2032:1: attribute_name : type_name ;
    public final CSharp4.attribute_name_return attribute_name() throws RecognitionException {
        CSharp4.attribute_name_return retval = new CSharp4.attribute_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.type_name_return type_name1438 =null;



        try {
            // CSharp4.g:2033:2: ( type_name )
            // CSharp4.g:2033:4: type_name
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_name_in_attribute_name8999);
            type_name1438=type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name1438.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "attribute_name"


    public static class attribute_arguments_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "attribute_arguments"
    // CSharp4.g:2043:1: attribute_arguments : OPEN_PARENS ( positional_argument_list )? CLOSE_PARENS ;
    public final CSharp4.attribute_arguments_return attribute_arguments() throws RecognitionException {
        CSharp4.attribute_arguments_return retval = new CSharp4.attribute_arguments_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_PARENS1439=null;
        Token CLOSE_PARENS1441=null;
        CSharp4.positional_argument_list_return positional_argument_list1440 =null;


        Object OPEN_PARENS1439_tree=null;
        Object CLOSE_PARENS1441_tree=null;

        try {
            // CSharp4.g:2044:3: ( OPEN_PARENS ( positional_argument_list )? CLOSE_PARENS )
            // CSharp4.g:2044:5: OPEN_PARENS ( positional_argument_list )? CLOSE_PARENS
            {
            root_0 = (Object)adaptor.nil();


            OPEN_PARENS1439=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_attribute_arguments9016); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1439_tree = 
            (Object)adaptor.create(OPEN_PARENS1439)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1439_tree);
            }

            // CSharp4.g:2044:17: ( positional_argument_list )?
            int alt359=2;
            int LA359_0 = input.LA(1);

            if ( (LA359_0==AMP||(LA359_0 >= BANG && LA359_0 <= BASE)||LA359_0==BOOL||LA359_0==BYTE||(LA359_0 >= CHAR && LA359_0 <= CHECKED)||LA359_0==DECIMAL||(LA359_0 >= DEFAULT && LA359_0 <= DELEGATE)||LA359_0==DOUBLE||LA359_0==FALSE||LA359_0==FLOAT||LA359_0==IDENTIFIER||(LA359_0 >= INT && LA359_0 <= INTEGER_LITERAL)||LA359_0==LONG||LA359_0==MINUS||LA359_0==NEW||LA359_0==NULL||LA359_0==OBJECT||LA359_0==OPEN_PARENS||LA359_0==OP_DEC||LA359_0==OP_INC||LA359_0==PLUS||LA359_0==REAL_LITERAL||LA359_0==SBYTE||LA359_0==SHORT||LA359_0==SIZEOF||LA359_0==STAR||(LA359_0 >= STRING && LA359_0 <= STRING_LITERAL)||LA359_0==THIS||(LA359_0 >= TILDE && LA359_0 <= TRUE)||(LA359_0 >= TYPEOF && LA359_0 <= UNCHECKED)||LA359_0==USHORT) ) {
                alt359=1;
            }
            switch (alt359) {
                case 1 :
                    // CSharp4.g:2044:17: positional_argument_list
                    {
                    pushFollow(FOLLOW_positional_argument_list_in_attribute_arguments9018);
                    positional_argument_list1440=positional_argument_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, positional_argument_list1440.getTree());

                    }
                    break;

            }


            CLOSE_PARENS1441=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_attribute_arguments9021); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1441_tree = 
            (Object)adaptor.create(CLOSE_PARENS1441)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1441_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "attribute_arguments"


    public static class positional_argument_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "positional_argument_list"
    // CSharp4.g:2046:1: positional_argument_list : arg= positional_argument ( COMMA arg2= positional_argument )* ;
    public final CSharp4.positional_argument_list_return positional_argument_list() throws RecognitionException {
        CSharp4.positional_argument_list_return retval = new CSharp4.positional_argument_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA1442=null;
        CSharp4.positional_argument_return arg =null;

        CSharp4.positional_argument_return arg2 =null;


        Object COMMA1442_tree=null;

        try {
            // CSharp4.g:2047:2: (arg= positional_argument ( COMMA arg2= positional_argument )* )
            // CSharp4.g:2047:4: arg= positional_argument ( COMMA arg2= positional_argument )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_positional_argument_in_positional_argument_list9035);
            arg=positional_argument();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, arg.getTree());

            // CSharp4.g:2048:6: ( COMMA arg2= positional_argument )*
            loop360:
            do {
                int alt360=2;
                int LA360_0 = input.LA(1);

                if ( (LA360_0==COMMA) ) {
                    alt360=1;
                }


                switch (alt360) {
            	case 1 :
            	    // CSharp4.g:2048:8: COMMA arg2= positional_argument
            	    {
            	    COMMA1442=(Token)match(input,COMMA,FOLLOW_COMMA_in_positional_argument_list9044); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA1442_tree = 
            	    (Object)adaptor.create(COMMA1442)
            	    ;
            	    adaptor.addChild(root_0, COMMA1442_tree);
            	    }

            	    pushFollow(FOLLOW_positional_argument_in_positional_argument_list9049);
            	    arg2=positional_argument();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, arg2.getTree());

            	    }
            	    break;

            	default :
            	    break loop360;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "positional_argument_list"


    public static class positional_argument_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "positional_argument"
    // CSharp4.g:2051:1: positional_argument : attribute_argument_expression ;
    public final CSharp4.positional_argument_return positional_argument() throws RecognitionException {
        CSharp4.positional_argument_return retval = new CSharp4.positional_argument_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.attribute_argument_expression_return attribute_argument_expression1443 =null;



        try {
            // CSharp4.g:2052:2: ( attribute_argument_expression )
            // CSharp4.g:2052:4: attribute_argument_expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_attribute_argument_expression_in_positional_argument9065);
            attribute_argument_expression1443=attribute_argument_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_argument_expression1443.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "positional_argument"


    public static class named_argument_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "named_argument_list"
    // CSharp4.g:2055:1: named_argument_list : named_argument ( COMMA named_argument )* ;
    public final CSharp4.named_argument_list_return named_argument_list() throws RecognitionException {
        CSharp4.named_argument_list_return retval = new CSharp4.named_argument_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA1445=null;
        CSharp4.named_argument_return named_argument1444 =null;

        CSharp4.named_argument_return named_argument1446 =null;


        Object COMMA1445_tree=null;

        try {
            // CSharp4.g:2056:2: ( named_argument ( COMMA named_argument )* )
            // CSharp4.g:2056:4: named_argument ( COMMA named_argument )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_named_argument_in_named_argument_list9078);
            named_argument1444=named_argument();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, named_argument1444.getTree());

            // CSharp4.g:2056:19: ( COMMA named_argument )*
            loop361:
            do {
                int alt361=2;
                int LA361_0 = input.LA(1);

                if ( (LA361_0==COMMA) ) {
                    alt361=1;
                }


                switch (alt361) {
            	case 1 :
            	    // CSharp4.g:2056:21: COMMA named_argument
            	    {
            	    COMMA1445=(Token)match(input,COMMA,FOLLOW_COMMA_in_named_argument_list9082); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA1445_tree = 
            	    (Object)adaptor.create(COMMA1445)
            	    ;
            	    adaptor.addChild(root_0, COMMA1445_tree);
            	    }

            	    pushFollow(FOLLOW_named_argument_in_named_argument_list9085);
            	    named_argument1446=named_argument();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, named_argument1446.getTree());

            	    }
            	    break;

            	default :
            	    break loop361;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "named_argument_list"


    public static class named_argument_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "named_argument"
    // CSharp4.g:2059:1: named_argument : IDENTIFIER ASSIGNMENT attribute_argument_expression ;
    public final CSharp4.named_argument_return named_argument() throws RecognitionException {
        CSharp4.named_argument_return retval = new CSharp4.named_argument_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1447=null;
        Token ASSIGNMENT1448=null;
        CSharp4.attribute_argument_expression_return attribute_argument_expression1449 =null;


        Object IDENTIFIER1447_tree=null;
        Object ASSIGNMENT1448_tree=null;

        try {
            // CSharp4.g:2060:2: ( IDENTIFIER ASSIGNMENT attribute_argument_expression )
            // CSharp4.g:2060:4: IDENTIFIER ASSIGNMENT attribute_argument_expression
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER1447=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_named_argument9101); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1447_tree = 
            (Object)adaptor.create(IDENTIFIER1447)
            ;
            adaptor.addChild(root_0, IDENTIFIER1447_tree);
            }

            ASSIGNMENT1448=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_named_argument9103); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGNMENT1448_tree = 
            (Object)adaptor.create(ASSIGNMENT1448)
            ;
            adaptor.addChild(root_0, ASSIGNMENT1448_tree);
            }

            pushFollow(FOLLOW_attribute_argument_expression_in_named_argument9105);
            attribute_argument_expression1449=attribute_argument_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_argument_expression1449.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "named_argument"


    public static class attribute_argument_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "attribute_argument_expression"
    // CSharp4.g:2062:1: attribute_argument_expression : expression ;
    public final CSharp4.attribute_argument_expression_return attribute_argument_expression() throws RecognitionException {
        CSharp4.attribute_argument_expression_return retval = new CSharp4.attribute_argument_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.expression_return expression1450 =null;



        try {
            // CSharp4.g:2063:2: ( expression )
            // CSharp4.g:2063:4: expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_expression_in_attribute_argument_expression9116);
            expression1450=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1450.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "attribute_argument_expression"


    public static class class_modifier_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_modifier_unsafe"
    // CSharp4.g:2068:1: class_modifier_unsafe : UNSAFE ;
    public final CSharp4.class_modifier_unsafe_return class_modifier_unsafe() throws RecognitionException {
        CSharp4.class_modifier_unsafe_return retval = new CSharp4.class_modifier_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNSAFE1451=null;

        Object UNSAFE1451_tree=null;

        try {
            // CSharp4.g:2069:2: ( UNSAFE )
            // CSharp4.g:2069:4: UNSAFE
            {
            root_0 = (Object)adaptor.nil();


            UNSAFE1451=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_class_modifier_unsafe9130); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNSAFE1451_tree = 
            (Object)adaptor.create(UNSAFE1451)
            ;
            adaptor.addChild(root_0, UNSAFE1451_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_modifier_unsafe"


    public static class struct_modifier_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_modifier_unsafe"
    // CSharp4.g:2071:1: struct_modifier_unsafe : UNSAFE ;
    public final CSharp4.struct_modifier_unsafe_return struct_modifier_unsafe() throws RecognitionException {
        CSharp4.struct_modifier_unsafe_return retval = new CSharp4.struct_modifier_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNSAFE1452=null;

        Object UNSAFE1452_tree=null;

        try {
            // CSharp4.g:2072:2: ( UNSAFE )
            // CSharp4.g:2072:4: UNSAFE
            {
            root_0 = (Object)adaptor.nil();


            UNSAFE1452=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_struct_modifier_unsafe9141); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNSAFE1452_tree = 
            (Object)adaptor.create(UNSAFE1452)
            ;
            adaptor.addChild(root_0, UNSAFE1452_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_modifier_unsafe"


    public static class interface_modifier_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_modifier_unsafe"
    // CSharp4.g:2074:1: interface_modifier_unsafe : UNSAFE ;
    public final CSharp4.interface_modifier_unsafe_return interface_modifier_unsafe() throws RecognitionException {
        CSharp4.interface_modifier_unsafe_return retval = new CSharp4.interface_modifier_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNSAFE1453=null;

        Object UNSAFE1453_tree=null;

        try {
            // CSharp4.g:2075:2: ( UNSAFE )
            // CSharp4.g:2075:4: UNSAFE
            {
            root_0 = (Object)adaptor.nil();


            UNSAFE1453=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_interface_modifier_unsafe9152); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNSAFE1453_tree = 
            (Object)adaptor.create(UNSAFE1453)
            ;
            adaptor.addChild(root_0, UNSAFE1453_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_modifier_unsafe"


    public static class delegate_modifier_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "delegate_modifier_unsafe"
    // CSharp4.g:2077:1: delegate_modifier_unsafe : UNSAFE ;
    public final CSharp4.delegate_modifier_unsafe_return delegate_modifier_unsafe() throws RecognitionException {
        CSharp4.delegate_modifier_unsafe_return retval = new CSharp4.delegate_modifier_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNSAFE1454=null;

        Object UNSAFE1454_tree=null;

        try {
            // CSharp4.g:2078:2: ( UNSAFE )
            // CSharp4.g:2078:4: UNSAFE
            {
            root_0 = (Object)adaptor.nil();


            UNSAFE1454=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_delegate_modifier_unsafe9163); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNSAFE1454_tree = 
            (Object)adaptor.create(UNSAFE1454)
            ;
            adaptor.addChild(root_0, UNSAFE1454_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "delegate_modifier_unsafe"


    public static class field_modifier_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "field_modifier_unsafe"
    // CSharp4.g:2080:1: field_modifier_unsafe : UNSAFE ;
    public final CSharp4.field_modifier_unsafe_return field_modifier_unsafe() throws RecognitionException {
        CSharp4.field_modifier_unsafe_return retval = new CSharp4.field_modifier_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNSAFE1455=null;

        Object UNSAFE1455_tree=null;

        try {
            // CSharp4.g:2081:2: ( UNSAFE )
            // CSharp4.g:2081:4: UNSAFE
            {
            root_0 = (Object)adaptor.nil();


            UNSAFE1455=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_field_modifier_unsafe9174); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNSAFE1455_tree = 
            (Object)adaptor.create(UNSAFE1455)
            ;
            adaptor.addChild(root_0, UNSAFE1455_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "field_modifier_unsafe"


    public static class method_modifier_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_modifier_unsafe"
    // CSharp4.g:2083:1: method_modifier_unsafe : UNSAFE ;
    public final CSharp4.method_modifier_unsafe_return method_modifier_unsafe() throws RecognitionException {
        CSharp4.method_modifier_unsafe_return retval = new CSharp4.method_modifier_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNSAFE1456=null;

        Object UNSAFE1456_tree=null;

        try {
            // CSharp4.g:2084:2: ( UNSAFE )
            // CSharp4.g:2084:4: UNSAFE
            {
            root_0 = (Object)adaptor.nil();


            UNSAFE1456=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_method_modifier_unsafe9185); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNSAFE1456_tree = 
            (Object)adaptor.create(UNSAFE1456)
            ;
            adaptor.addChild(root_0, UNSAFE1456_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_modifier_unsafe"


    public static class property_modifier_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "property_modifier_unsafe"
    // CSharp4.g:2086:1: property_modifier_unsafe : UNSAFE ;
    public final CSharp4.property_modifier_unsafe_return property_modifier_unsafe() throws RecognitionException {
        CSharp4.property_modifier_unsafe_return retval = new CSharp4.property_modifier_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNSAFE1457=null;

        Object UNSAFE1457_tree=null;

        try {
            // CSharp4.g:2087:2: ( UNSAFE )
            // CSharp4.g:2087:4: UNSAFE
            {
            root_0 = (Object)adaptor.nil();


            UNSAFE1457=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_property_modifier_unsafe9196); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNSAFE1457_tree = 
            (Object)adaptor.create(UNSAFE1457)
            ;
            adaptor.addChild(root_0, UNSAFE1457_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "property_modifier_unsafe"


    public static class event_modifier_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "event_modifier_unsafe"
    // CSharp4.g:2089:1: event_modifier_unsafe : UNSAFE ;
    public final CSharp4.event_modifier_unsafe_return event_modifier_unsafe() throws RecognitionException {
        CSharp4.event_modifier_unsafe_return retval = new CSharp4.event_modifier_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNSAFE1458=null;

        Object UNSAFE1458_tree=null;

        try {
            // CSharp4.g:2090:2: ( UNSAFE )
            // CSharp4.g:2090:4: UNSAFE
            {
            root_0 = (Object)adaptor.nil();


            UNSAFE1458=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_event_modifier_unsafe9207); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNSAFE1458_tree = 
            (Object)adaptor.create(UNSAFE1458)
            ;
            adaptor.addChild(root_0, UNSAFE1458_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "event_modifier_unsafe"


    public static class indexer_modifier_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "indexer_modifier_unsafe"
    // CSharp4.g:2092:1: indexer_modifier_unsafe : UNSAFE ;
    public final CSharp4.indexer_modifier_unsafe_return indexer_modifier_unsafe() throws RecognitionException {
        CSharp4.indexer_modifier_unsafe_return retval = new CSharp4.indexer_modifier_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNSAFE1459=null;

        Object UNSAFE1459_tree=null;

        try {
            // CSharp4.g:2093:2: ( UNSAFE )
            // CSharp4.g:2093:4: UNSAFE
            {
            root_0 = (Object)adaptor.nil();


            UNSAFE1459=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_indexer_modifier_unsafe9218); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNSAFE1459_tree = 
            (Object)adaptor.create(UNSAFE1459)
            ;
            adaptor.addChild(root_0, UNSAFE1459_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "indexer_modifier_unsafe"


    public static class operator_modifier_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "operator_modifier_unsafe"
    // CSharp4.g:2095:1: operator_modifier_unsafe : UNSAFE ;
    public final CSharp4.operator_modifier_unsafe_return operator_modifier_unsafe() throws RecognitionException {
        CSharp4.operator_modifier_unsafe_return retval = new CSharp4.operator_modifier_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNSAFE1460=null;

        Object UNSAFE1460_tree=null;

        try {
            // CSharp4.g:2096:2: ( UNSAFE )
            // CSharp4.g:2096:4: UNSAFE
            {
            root_0 = (Object)adaptor.nil();


            UNSAFE1460=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_operator_modifier_unsafe9229); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNSAFE1460_tree = 
            (Object)adaptor.create(UNSAFE1460)
            ;
            adaptor.addChild(root_0, UNSAFE1460_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "operator_modifier_unsafe"


    public static class constructor_modifier_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constructor_modifier_unsafe"
    // CSharp4.g:2098:1: constructor_modifier_unsafe : UNSAFE ;
    public final CSharp4.constructor_modifier_unsafe_return constructor_modifier_unsafe() throws RecognitionException {
        CSharp4.constructor_modifier_unsafe_return retval = new CSharp4.constructor_modifier_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNSAFE1461=null;

        Object UNSAFE1461_tree=null;

        try {
            // CSharp4.g:2099:2: ( UNSAFE )
            // CSharp4.g:2099:4: UNSAFE
            {
            root_0 = (Object)adaptor.nil();


            UNSAFE1461=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_constructor_modifier_unsafe9240); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNSAFE1461_tree = 
            (Object)adaptor.create(UNSAFE1461)
            ;
            adaptor.addChild(root_0, UNSAFE1461_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constructor_modifier_unsafe"


    public static class destructor_declaration_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "destructor_declaration_unsafe"
    // CSharp4.g:2107:1: destructor_declaration_unsafe : ( attributes )? ( ( EXTERN )? ( UNSAFE )? | UNSAFE EXTERN ) TILDE IDENTIFIER OPEN_PARENS CLOSE_PARENS destructor_body ;
    public final CSharp4.destructor_declaration_unsafe_return destructor_declaration_unsafe() throws RecognitionException {
        CSharp4.destructor_declaration_unsafe_return retval = new CSharp4.destructor_declaration_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token EXTERN1463=null;
        Token UNSAFE1464=null;
        Token UNSAFE1465=null;
        Token EXTERN1466=null;
        Token TILDE1467=null;
        Token IDENTIFIER1468=null;
        Token OPEN_PARENS1469=null;
        Token CLOSE_PARENS1470=null;
        CSharp4.attributes_return attributes1462 =null;

        CSharp4.destructor_body_return destructor_body1471 =null;


        Object EXTERN1463_tree=null;
        Object UNSAFE1464_tree=null;
        Object UNSAFE1465_tree=null;
        Object EXTERN1466_tree=null;
        Object TILDE1467_tree=null;
        Object IDENTIFIER1468_tree=null;
        Object OPEN_PARENS1469_tree=null;
        Object CLOSE_PARENS1470_tree=null;

        try {
            // CSharp4.g:2108:3: ( ( attributes )? ( ( EXTERN )? ( UNSAFE )? | UNSAFE EXTERN ) TILDE IDENTIFIER OPEN_PARENS CLOSE_PARENS destructor_body )
            // CSharp4.g:2108:5: ( attributes )? ( ( EXTERN )? ( UNSAFE )? | UNSAFE EXTERN ) TILDE IDENTIFIER OPEN_PARENS CLOSE_PARENS destructor_body
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:2108:5: ( attributes )?
            int alt362=2;
            int LA362_0 = input.LA(1);

            if ( (LA362_0==OPEN_BRACKET) ) {
                alt362=1;
            }
            switch (alt362) {
                case 1 :
                    // CSharp4.g:2108:5: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_destructor_declaration_unsafe9254);
                    attributes1462=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1462.getTree());

                    }
                    break;

            }


            // CSharp4.g:2109:5: ( ( EXTERN )? ( UNSAFE )? | UNSAFE EXTERN )
            int alt365=2;
            int LA365_0 = input.LA(1);

            if ( (LA365_0==EXTERN||LA365_0==TILDE) ) {
                alt365=1;
            }
            else if ( (LA365_0==UNSAFE) ) {
                int LA365_2 = input.LA(2);

                if ( (LA365_2==EXTERN) ) {
                    alt365=2;
                }
                else if ( (LA365_2==TILDE) ) {
                    alt365=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 365, 2, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 0, input);

                throw nvae;

            }
            switch (alt365) {
                case 1 :
                    // CSharp4.g:2109:7: ( EXTERN )? ( UNSAFE )?
                    {
                    // CSharp4.g:2109:7: ( EXTERN )?
                    int alt363=2;
                    int LA363_0 = input.LA(1);

                    if ( (LA363_0==EXTERN) ) {
                        alt363=1;
                    }
                    switch (alt363) {
                        case 1 :
                            // CSharp4.g:2109:7: EXTERN
                            {
                            EXTERN1463=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_destructor_declaration_unsafe9263); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            EXTERN1463_tree = 
                            (Object)adaptor.create(EXTERN1463)
                            ;
                            adaptor.addChild(root_0, EXTERN1463_tree);
                            }

                            }
                            break;

                    }


                    // CSharp4.g:2109:15: ( UNSAFE )?
                    int alt364=2;
                    int LA364_0 = input.LA(1);

                    if ( (LA364_0==UNSAFE) ) {
                        alt364=1;
                    }
                    switch (alt364) {
                        case 1 :
                            // CSharp4.g:2109:15: UNSAFE
                            {
                            UNSAFE1464=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_destructor_declaration_unsafe9266); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            UNSAFE1464_tree = 
                            (Object)adaptor.create(UNSAFE1464)
                            ;
                            adaptor.addChild(root_0, UNSAFE1464_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // CSharp4.g:2110:7: UNSAFE EXTERN
                    {
                    UNSAFE1465=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_destructor_declaration_unsafe9275); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    UNSAFE1465_tree = 
                    (Object)adaptor.create(UNSAFE1465)
                    ;
                    adaptor.addChild(root_0, UNSAFE1465_tree);
                    }

                    EXTERN1466=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_destructor_declaration_unsafe9277); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN1466_tree = 
                    (Object)adaptor.create(EXTERN1466)
                    ;
                    adaptor.addChild(root_0, EXTERN1466_tree);
                    }

                    }
                    break;

            }


            TILDE1467=(Token)match(input,TILDE,FOLLOW_TILDE_in_destructor_declaration_unsafe9291); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            TILDE1467_tree = 
            (Object)adaptor.create(TILDE1467)
            ;
            adaptor.addChild(root_0, TILDE1467_tree);
            }

            IDENTIFIER1468=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_destructor_declaration_unsafe9293); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1468_tree = 
            (Object)adaptor.create(IDENTIFIER1468)
            ;
            adaptor.addChild(root_0, IDENTIFIER1468_tree);
            }

            OPEN_PARENS1469=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_destructor_declaration_unsafe9295); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1469_tree = 
            (Object)adaptor.create(OPEN_PARENS1469)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1469_tree);
            }

            CLOSE_PARENS1470=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_destructor_declaration_unsafe9297); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1470_tree = 
            (Object)adaptor.create(CLOSE_PARENS1470)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1470_tree);
            }

            pushFollow(FOLLOW_destructor_body_in_destructor_declaration_unsafe9299);
            destructor_body1471=destructor_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, destructor_body1471.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "destructor_declaration_unsafe"


    public static class static_constructor_modifiers_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "static_constructor_modifiers_unsafe"
    // CSharp4.g:2124:1: static_constructor_modifiers_unsafe : ( ( EXTERN | UNSAFE )? STATIC | EXTERN UNSAFE STATIC | UNSAFE EXTERN STATIC | EXTERN STATIC UNSAFE | UNSAFE STATIC EXTERN | STATIC ( EXTERN | UNSAFE ) | STATIC EXTERN UNSAFE | STATIC UNSAFE EXTERN );
    public final CSharp4.static_constructor_modifiers_unsafe_return static_constructor_modifiers_unsafe() throws RecognitionException {
        CSharp4.static_constructor_modifiers_unsafe_return retval = new CSharp4.static_constructor_modifiers_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set1472=null;
        Token STATIC1473=null;
        Token EXTERN1474=null;
        Token UNSAFE1475=null;
        Token STATIC1476=null;
        Token UNSAFE1477=null;
        Token EXTERN1478=null;
        Token STATIC1479=null;
        Token EXTERN1480=null;
        Token STATIC1481=null;
        Token UNSAFE1482=null;
        Token UNSAFE1483=null;
        Token STATIC1484=null;
        Token EXTERN1485=null;
        Token STATIC1486=null;
        Token set1487=null;
        Token STATIC1488=null;
        Token EXTERN1489=null;
        Token UNSAFE1490=null;
        Token STATIC1491=null;
        Token UNSAFE1492=null;
        Token EXTERN1493=null;

        Object set1472_tree=null;
        Object STATIC1473_tree=null;
        Object EXTERN1474_tree=null;
        Object UNSAFE1475_tree=null;
        Object STATIC1476_tree=null;
        Object UNSAFE1477_tree=null;
        Object EXTERN1478_tree=null;
        Object STATIC1479_tree=null;
        Object EXTERN1480_tree=null;
        Object STATIC1481_tree=null;
        Object UNSAFE1482_tree=null;
        Object UNSAFE1483_tree=null;
        Object STATIC1484_tree=null;
        Object EXTERN1485_tree=null;
        Object STATIC1486_tree=null;
        Object set1487_tree=null;
        Object STATIC1488_tree=null;
        Object EXTERN1489_tree=null;
        Object UNSAFE1490_tree=null;
        Object STATIC1491_tree=null;
        Object UNSAFE1492_tree=null;
        Object EXTERN1493_tree=null;

        try {
            // CSharp4.g:2125:3: ( ( EXTERN | UNSAFE )? STATIC | EXTERN UNSAFE STATIC | UNSAFE EXTERN STATIC | EXTERN STATIC UNSAFE | UNSAFE STATIC EXTERN | STATIC ( EXTERN | UNSAFE ) | STATIC EXTERN UNSAFE | STATIC UNSAFE EXTERN )
            int alt367=8;
            switch ( input.LA(1) ) {
            case EXTERN:
                {
                int LA367_1 = input.LA(2);

                if ( (LA367_1==UNSAFE) ) {
                    alt367=2;
                }
                else if ( (LA367_1==STATIC) ) {
                    int LA367_5 = input.LA(3);

                    if ( (LA367_5==UNSAFE) ) {
                        alt367=4;
                    }
                    else if ( (LA367_5==IDENTIFIER) ) {
                        alt367=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 367, 5, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 367, 1, input);

                    throw nvae;

                }
                }
                break;
            case STATIC:
                {
                switch ( input.LA(2) ) {
                case EXTERN:
                    {
                    int LA367_6 = input.LA(3);

                    if ( (LA367_6==UNSAFE) ) {
                        alt367=7;
                    }
                    else if ( (LA367_6==IDENTIFIER) ) {
                        alt367=6;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 367, 6, input);

                        throw nvae;

                    }
                    }
                    break;
                case UNSAFE:
                    {
                    int LA367_7 = input.LA(3);

                    if ( (LA367_7==EXTERN) ) {
                        alt367=8;
                    }
                    else if ( (LA367_7==IDENTIFIER) ) {
                        alt367=6;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 367, 7, input);

                        throw nvae;

                    }
                    }
                    break;
                case IDENTIFIER:
                    {
                    alt367=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 367, 2, input);

                    throw nvae;

                }

                }
                break;
            case UNSAFE:
                {
                int LA367_3 = input.LA(2);

                if ( (LA367_3==EXTERN) ) {
                    alt367=3;
                }
                else if ( (LA367_3==STATIC) ) {
                    int LA367_10 = input.LA(3);

                    if ( (LA367_10==EXTERN) ) {
                        alt367=5;
                    }
                    else if ( (LA367_10==IDENTIFIER) ) {
                        alt367=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 367, 10, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 367, 3, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 367, 0, input);

                throw nvae;

            }

            switch (alt367) {
                case 1 :
                    // CSharp4.g:2125:5: ( EXTERN | UNSAFE )? STATIC
                    {
                    root_0 = (Object)adaptor.nil();


                    // CSharp4.g:2125:5: ( EXTERN | UNSAFE )?
                    int alt366=2;
                    int LA366_0 = input.LA(1);

                    if ( (LA366_0==EXTERN||LA366_0==UNSAFE) ) {
                        alt366=1;
                    }
                    switch (alt366) {
                        case 1 :
                            // CSharp4.g:
                            {
                            set1472=(Token)input.LT(1);

                            if ( input.LA(1)==EXTERN||input.LA(1)==UNSAFE ) {
                                input.consume();
                                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                                (Object)adaptor.create(set1472)
                                );
                                state.errorRecovery=false;
                                state.failed=false;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return retval;}
                                MismatchedSetException mse = new MismatchedSetException(null,input);
                                throw mse;
                            }


                            }
                            break;

                    }


                    STATIC1473=(Token)match(input,STATIC,FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9323); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC1473_tree = 
                    (Object)adaptor.create(STATIC1473)
                    ;
                    adaptor.addChild(root_0, STATIC1473_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:2126:5: EXTERN UNSAFE STATIC
                    {
                    root_0 = (Object)adaptor.nil();


                    EXTERN1474=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_static_constructor_modifiers_unsafe9329); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN1474_tree = 
                    (Object)adaptor.create(EXTERN1474)
                    ;
                    adaptor.addChild(root_0, EXTERN1474_tree);
                    }

                    UNSAFE1475=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_static_constructor_modifiers_unsafe9331); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    UNSAFE1475_tree = 
                    (Object)adaptor.create(UNSAFE1475)
                    ;
                    adaptor.addChild(root_0, UNSAFE1475_tree);
                    }

                    STATIC1476=(Token)match(input,STATIC,FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9333); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC1476_tree = 
                    (Object)adaptor.create(STATIC1476)
                    ;
                    adaptor.addChild(root_0, STATIC1476_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:2127:5: UNSAFE EXTERN STATIC
                    {
                    root_0 = (Object)adaptor.nil();


                    UNSAFE1477=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_static_constructor_modifiers_unsafe9339); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    UNSAFE1477_tree = 
                    (Object)adaptor.create(UNSAFE1477)
                    ;
                    adaptor.addChild(root_0, UNSAFE1477_tree);
                    }

                    EXTERN1478=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_static_constructor_modifiers_unsafe9341); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN1478_tree = 
                    (Object)adaptor.create(EXTERN1478)
                    ;
                    adaptor.addChild(root_0, EXTERN1478_tree);
                    }

                    STATIC1479=(Token)match(input,STATIC,FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9343); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC1479_tree = 
                    (Object)adaptor.create(STATIC1479)
                    ;
                    adaptor.addChild(root_0, STATIC1479_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:2128:5: EXTERN STATIC UNSAFE
                    {
                    root_0 = (Object)adaptor.nil();


                    EXTERN1480=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_static_constructor_modifiers_unsafe9349); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN1480_tree = 
                    (Object)adaptor.create(EXTERN1480)
                    ;
                    adaptor.addChild(root_0, EXTERN1480_tree);
                    }

                    STATIC1481=(Token)match(input,STATIC,FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9351); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC1481_tree = 
                    (Object)adaptor.create(STATIC1481)
                    ;
                    adaptor.addChild(root_0, STATIC1481_tree);
                    }

                    UNSAFE1482=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_static_constructor_modifiers_unsafe9353); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    UNSAFE1482_tree = 
                    (Object)adaptor.create(UNSAFE1482)
                    ;
                    adaptor.addChild(root_0, UNSAFE1482_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:2129:5: UNSAFE STATIC EXTERN
                    {
                    root_0 = (Object)adaptor.nil();


                    UNSAFE1483=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_static_constructor_modifiers_unsafe9359); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    UNSAFE1483_tree = 
                    (Object)adaptor.create(UNSAFE1483)
                    ;
                    adaptor.addChild(root_0, UNSAFE1483_tree);
                    }

                    STATIC1484=(Token)match(input,STATIC,FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9361); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC1484_tree = 
                    (Object)adaptor.create(STATIC1484)
                    ;
                    adaptor.addChild(root_0, STATIC1484_tree);
                    }

                    EXTERN1485=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_static_constructor_modifiers_unsafe9363); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN1485_tree = 
                    (Object)adaptor.create(EXTERN1485)
                    ;
                    adaptor.addChild(root_0, EXTERN1485_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:2130:5: STATIC ( EXTERN | UNSAFE )
                    {
                    root_0 = (Object)adaptor.nil();


                    STATIC1486=(Token)match(input,STATIC,FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9369); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC1486_tree = 
                    (Object)adaptor.create(STATIC1486)
                    ;
                    adaptor.addChild(root_0, STATIC1486_tree);
                    }

                    set1487=(Token)input.LT(1);

                    if ( input.LA(1)==EXTERN||input.LA(1)==UNSAFE ) {
                        input.consume();
                        if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                        (Object)adaptor.create(set1487)
                        );
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 7 :
                    // CSharp4.g:2131:5: STATIC EXTERN UNSAFE
                    {
                    root_0 = (Object)adaptor.nil();


                    STATIC1488=(Token)match(input,STATIC,FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9383); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC1488_tree = 
                    (Object)adaptor.create(STATIC1488)
                    ;
                    adaptor.addChild(root_0, STATIC1488_tree);
                    }

                    EXTERN1489=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_static_constructor_modifiers_unsafe9385); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN1489_tree = 
                    (Object)adaptor.create(EXTERN1489)
                    ;
                    adaptor.addChild(root_0, EXTERN1489_tree);
                    }

                    UNSAFE1490=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_static_constructor_modifiers_unsafe9387); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    UNSAFE1490_tree = 
                    (Object)adaptor.create(UNSAFE1490)
                    ;
                    adaptor.addChild(root_0, UNSAFE1490_tree);
                    }

                    }
                    break;
                case 8 :
                    // CSharp4.g:2132:5: STATIC UNSAFE EXTERN
                    {
                    root_0 = (Object)adaptor.nil();


                    STATIC1491=(Token)match(input,STATIC,FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9393); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STATIC1491_tree = 
                    (Object)adaptor.create(STATIC1491)
                    ;
                    adaptor.addChild(root_0, STATIC1491_tree);
                    }

                    UNSAFE1492=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_static_constructor_modifiers_unsafe9395); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    UNSAFE1492_tree = 
                    (Object)adaptor.create(UNSAFE1492)
                    ;
                    adaptor.addChild(root_0, UNSAFE1492_tree);
                    }

                    EXTERN1493=(Token)match(input,EXTERN,FOLLOW_EXTERN_in_static_constructor_modifiers_unsafe9397); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    EXTERN1493_tree = 
                    (Object)adaptor.create(EXTERN1493)
                    ;
                    adaptor.addChild(root_0, EXTERN1493_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "static_constructor_modifiers_unsafe"


    public static class embedded_statement_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "embedded_statement_unsafe"
    // CSharp4.g:2135:1: embedded_statement_unsafe : ( unsafe_statement | fixed_statement );
    public final CSharp4.embedded_statement_unsafe_return embedded_statement_unsafe() throws RecognitionException {
        CSharp4.embedded_statement_unsafe_return retval = new CSharp4.embedded_statement_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.unsafe_statement_return unsafe_statement1494 =null;

        CSharp4.fixed_statement_return fixed_statement1495 =null;



        try {
            // CSharp4.g:2136:2: ( unsafe_statement | fixed_statement )
            int alt368=2;
            int LA368_0 = input.LA(1);

            if ( (LA368_0==UNSAFE) ) {
                alt368=1;
            }
            else if ( (LA368_0==FIXED) ) {
                alt368=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 368, 0, input);

                throw nvae;

            }
            switch (alt368) {
                case 1 :
                    // CSharp4.g:2136:4: unsafe_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_unsafe_statement_in_embedded_statement_unsafe9411);
                    unsafe_statement1494=unsafe_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unsafe_statement1494.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:2137:4: fixed_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_fixed_statement_in_embedded_statement_unsafe9416);
                    fixed_statement1495=fixed_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_statement1495.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "embedded_statement_unsafe"


    public static class unsafe_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "unsafe_statement"
    // CSharp4.g:2139:1: unsafe_statement : UNSAFE block ;
    public final CSharp4.unsafe_statement_return unsafe_statement() throws RecognitionException {
        CSharp4.unsafe_statement_return retval = new CSharp4.unsafe_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token UNSAFE1496=null;
        CSharp4.block_return block1497 =null;


        Object UNSAFE1496_tree=null;

        try {
            // CSharp4.g:2140:2: ( UNSAFE block )
            // CSharp4.g:2140:4: UNSAFE block
            {
            root_0 = (Object)adaptor.nil();


            UNSAFE1496=(Token)match(input,UNSAFE,FOLLOW_UNSAFE_in_unsafe_statement9427); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            UNSAFE1496_tree = 
            (Object)adaptor.create(UNSAFE1496)
            ;
            adaptor.addChild(root_0, UNSAFE1496_tree);
            }

            pushFollow(FOLLOW_block_in_unsafe_statement9429);
            block1497=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block1497.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unsafe_statement"


    public static class type_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_unsafe"
    // CSharp4.g:2142:1: type_unsafe : pointer_type ;
    public final CSharp4.type_unsafe_return type_unsafe() throws RecognitionException {
        CSharp4.type_unsafe_return retval = new CSharp4.type_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.pointer_type_return pointer_type1498 =null;



        try {
            // CSharp4.g:2143:2: ( pointer_type )
            // CSharp4.g:2143:4: pointer_type
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_pointer_type_in_type_unsafe9440);
            pointer_type1498=pointer_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, pointer_type1498.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_unsafe"


    public static class pointer_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "pointer_type"
    // CSharp4.g:2152:1: pointer_type : ( simple_type | class_type | VOID ) ({...}? => rank_specifier |{...}? => INTERR | STAR )* STAR ;
    public final CSharp4.pointer_type_return pointer_type() throws RecognitionException {
        CSharp4.pointer_type_return retval = new CSharp4.pointer_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token VOID1501=null;
        Token INTERR1503=null;
        Token STAR1504=null;
        Token STAR1505=null;
        CSharp4.simple_type_return simple_type1499 =null;

        CSharp4.class_type_return class_type1500 =null;

        CSharp4.rank_specifier_return rank_specifier1502 =null;


        Object VOID1501_tree=null;
        Object INTERR1503_tree=null;
        Object STAR1504_tree=null;
        Object STAR1505_tree=null;


            boolean allowAll = true;

        try {
            // CSharp4.g:2156:3: ( ( simple_type | class_type | VOID ) ({...}? => rank_specifier |{...}? => INTERR | STAR )* STAR )
            // CSharp4.g:2156:5: ( simple_type | class_type | VOID ) ({...}? => rank_specifier |{...}? => INTERR | STAR )* STAR
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:2156:5: ( simple_type | class_type | VOID )
            int alt369=3;
            switch ( input.LA(1) ) {
            case BOOL:
            case BYTE:
            case CHAR:
            case DECIMAL:
            case DOUBLE:
            case FLOAT:
            case INT:
            case LONG:
            case SBYTE:
            case SHORT:
            case UINT:
            case ULONG:
            case USHORT:
                {
                alt369=1;
                }
                break;
            case IDENTIFIER:
            case OBJECT:
            case STRING:
                {
                alt369=2;
                }
                break;
            case VOID:
                {
                alt369=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 369, 0, input);

                throw nvae;

            }

            switch (alt369) {
                case 1 :
                    // CSharp4.g:2156:7: simple_type
                    {
                    pushFollow(FOLLOW_simple_type_in_pointer_type9462);
                    simple_type1499=simple_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, simple_type1499.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:2157:6: class_type
                    {
                    pushFollow(FOLLOW_class_type_in_pointer_type9469);
                    class_type1500=class_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_type1500.getTree());

                    }
                    break;
                case 3 :
                    // CSharp4.g:2158:6: VOID
                    {
                    VOID1501=(Token)match(input,VOID,FOLLOW_VOID_in_pointer_type9476); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    VOID1501_tree = 
                    (Object)adaptor.create(VOID1501)
                    ;
                    adaptor.addChild(root_0, VOID1501_tree);
                    }

                    if ( state.backtracking==0 ) {allowAll = false;}

                    }
                    break;

            }


            // CSharp4.g:2159:5: ({...}? => rank_specifier |{...}? => INTERR | STAR )*
            loop370:
            do {
                int alt370=4;
                int LA370_0 = input.LA(1);

                if ( (LA370_0==STAR) ) {
                    int LA370_1 = input.LA(2);

                    if ( (LA370_1==INTERR||LA370_1==OPEN_BRACKET||LA370_1==STAR) ) {
                        alt370=3;
                    }


                }
                else if ( (LA370_0==OPEN_BRACKET) && ((allowAll))) {
                    alt370=1;
                }
                else if ( (LA370_0==INTERR) && ((allowAll))) {
                    alt370=2;
                }


                switch (alt370) {
            	case 1 :
            	    // CSharp4.g:2159:7: {...}? => rank_specifier
            	    {
            	    if ( !((allowAll)) ) {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        throw new FailedPredicateException(input, "pointer_type", "allowAll");
            	    }

            	    pushFollow(FOLLOW_rank_specifier_in_pointer_type9490);
            	    rank_specifier1502=rank_specifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier1502.getTree());

            	    }
            	    break;
            	case 2 :
            	    // CSharp4.g:2160:7: {...}? => INTERR
            	    {
            	    if ( !((allowAll)) ) {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        throw new FailedPredicateException(input, "pointer_type", "allowAll");
            	    }

            	    INTERR1503=(Token)match(input,INTERR,FOLLOW_INTERR_in_pointer_type9502); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    INTERR1503_tree = 
            	    (Object)adaptor.create(INTERR1503)
            	    ;
            	    adaptor.addChild(root_0, INTERR1503_tree);
            	    }

            	    }
            	    break;
            	case 3 :
            	    // CSharp4.g:2161:7: STAR
            	    {
            	    STAR1504=(Token)match(input,STAR,FOLLOW_STAR_in_pointer_type9510); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    STAR1504_tree = 
            	    (Object)adaptor.create(STAR1504)
            	    ;
            	    adaptor.addChild(root_0, STAR1504_tree);
            	    }

            	    if ( state.backtracking==0 ) {allowAll = true;}

            	    }
            	    break;

            	default :
            	    break loop370;
                }
            } while (true);


            STAR1505=(Token)match(input,STAR,FOLLOW_STAR_in_pointer_type9521); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            STAR1505_tree = 
            (Object)adaptor.create(STAR1505)
            ;
            adaptor.addChild(root_0, STAR1505_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "pointer_type"


    public static class unmanaged_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "unmanaged_type"
    // CSharp4.g:2175:1: unmanaged_type : type ;
    public final CSharp4.unmanaged_type_return unmanaged_type() throws RecognitionException {
        CSharp4.unmanaged_type_return retval = new CSharp4.unmanaged_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.type_return type1506 =null;



        try {
            // CSharp4.g:2176:2: ( type )
            // CSharp4.g:2176:4: type
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_in_unmanaged_type9544);
            type1506=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1506.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unmanaged_type"


    public static class primary_no_array_creation_expression_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "primary_no_array_creation_expression_unsafe"
    // CSharp4.g:2185:1: primary_no_array_creation_expression_unsafe : primary_expression ;
    public final CSharp4.primary_no_array_creation_expression_unsafe_return primary_no_array_creation_expression_unsafe() throws RecognitionException {
        CSharp4.primary_no_array_creation_expression_unsafe_return retval = new CSharp4.primary_no_array_creation_expression_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.primary_expression_return primary_expression1507 =null;



        try {
            // CSharp4.g:2186:2: ( primary_expression )
            // CSharp4.g:2186:4: primary_expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_primary_expression_in_primary_no_array_creation_expression_unsafe9557);
            primary_expression1507=primary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression1507.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "primary_no_array_creation_expression_unsafe"


    public static class unary_expression_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "unary_expression_unsafe"
    // CSharp4.g:2189:1: unary_expression_unsafe : ( pointer_indirection_expression | addressof_expression );
    public final CSharp4.unary_expression_unsafe_return unary_expression_unsafe() throws RecognitionException {
        CSharp4.unary_expression_unsafe_return retval = new CSharp4.unary_expression_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.pointer_indirection_expression_return pointer_indirection_expression1508 =null;

        CSharp4.addressof_expression_return addressof_expression1509 =null;



        try {
            // CSharp4.g:2190:2: ( pointer_indirection_expression | addressof_expression )
            int alt371=2;
            int LA371_0 = input.LA(1);

            if ( (LA371_0==STAR) ) {
                alt371=1;
            }
            else if ( (LA371_0==AMP) ) {
                alt371=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 371, 0, input);

                throw nvae;

            }
            switch (alt371) {
                case 1 :
                    // CSharp4.g:2190:4: pointer_indirection_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_pointer_indirection_expression_in_unary_expression_unsafe9570);
                    pointer_indirection_expression1508=pointer_indirection_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, pointer_indirection_expression1508.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:2191:4: addressof_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_addressof_expression_in_unary_expression_unsafe9575);
                    addressof_expression1509=addressof_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, addressof_expression1509.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unary_expression_unsafe"


    public static class pointer_indirection_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "pointer_indirection_expression"
    // CSharp4.g:2193:1: pointer_indirection_expression : STAR unary_expression ;
    public final CSharp4.pointer_indirection_expression_return pointer_indirection_expression() throws RecognitionException {
        CSharp4.pointer_indirection_expression_return retval = new CSharp4.pointer_indirection_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token STAR1510=null;
        CSharp4.unary_expression_return unary_expression1511 =null;


        Object STAR1510_tree=null;

        try {
            // CSharp4.g:2194:2: ( STAR unary_expression )
            // CSharp4.g:2194:4: STAR unary_expression
            {
            root_0 = (Object)adaptor.nil();


            STAR1510=(Token)match(input,STAR,FOLLOW_STAR_in_pointer_indirection_expression9586); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            STAR1510_tree = 
            (Object)adaptor.create(STAR1510)
            ;
            adaptor.addChild(root_0, STAR1510_tree);
            }

            pushFollow(FOLLOW_unary_expression_in_pointer_indirection_expression9588);
            unary_expression1511=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression1511.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "pointer_indirection_expression"


    public static class addressof_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "addressof_expression"
    // CSharp4.g:2207:1: addressof_expression : AMP unary_expression ;
    public final CSharp4.addressof_expression_return addressof_expression() throws RecognitionException {
        CSharp4.addressof_expression_return retval = new CSharp4.addressof_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token AMP1512=null;
        CSharp4.unary_expression_return unary_expression1513 =null;


        Object AMP1512_tree=null;

        try {
            // CSharp4.g:2208:2: ( AMP unary_expression )
            // CSharp4.g:2208:4: AMP unary_expression
            {
            root_0 = (Object)adaptor.nil();


            AMP1512=(Token)match(input,AMP,FOLLOW_AMP_in_addressof_expression9605); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            AMP1512_tree = 
            (Object)adaptor.create(AMP1512)
            ;
            adaptor.addChild(root_0, AMP1512_tree);
            }

            pushFollow(FOLLOW_unary_expression_in_addressof_expression9607);
            unary_expression1513=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression1513.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "addressof_expression"


    public static class sizeof_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "sizeof_expression"
    // CSharp4.g:2210:1: sizeof_expression : SIZEOF OPEN_PARENS unmanaged_type CLOSE_PARENS ;
    public final CSharp4.sizeof_expression_return sizeof_expression() throws RecognitionException {
        CSharp4.sizeof_expression_return retval = new CSharp4.sizeof_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SIZEOF1514=null;
        Token OPEN_PARENS1515=null;
        Token CLOSE_PARENS1517=null;
        CSharp4.unmanaged_type_return unmanaged_type1516 =null;


        Object SIZEOF1514_tree=null;
        Object OPEN_PARENS1515_tree=null;
        Object CLOSE_PARENS1517_tree=null;

        try {
            // CSharp4.g:2211:2: ( SIZEOF OPEN_PARENS unmanaged_type CLOSE_PARENS )
            // CSharp4.g:2211:4: SIZEOF OPEN_PARENS unmanaged_type CLOSE_PARENS
            {
            root_0 = (Object)adaptor.nil();


            SIZEOF1514=(Token)match(input,SIZEOF,FOLLOW_SIZEOF_in_sizeof_expression9618); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SIZEOF1514_tree = 
            (Object)adaptor.create(SIZEOF1514)
            ;
            adaptor.addChild(root_0, SIZEOF1514_tree);
            }

            OPEN_PARENS1515=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_sizeof_expression9620); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1515_tree = 
            (Object)adaptor.create(OPEN_PARENS1515)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1515_tree);
            }

            pushFollow(FOLLOW_unmanaged_type_in_sizeof_expression9622);
            unmanaged_type1516=unmanaged_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unmanaged_type1516.getTree());

            CLOSE_PARENS1517=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_sizeof_expression9624); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1517_tree = 
            (Object)adaptor.create(CLOSE_PARENS1517)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1517_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "sizeof_expression"


    public static class fixed_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "fixed_statement"
    // CSharp4.g:2213:1: fixed_statement : FIXED OPEN_PARENS pointer_type fixed_pointer_declarators CLOSE_PARENS embedded_statement ;
    public final CSharp4.fixed_statement_return fixed_statement() throws RecognitionException {
        CSharp4.fixed_statement_return retval = new CSharp4.fixed_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token FIXED1518=null;
        Token OPEN_PARENS1519=null;
        Token CLOSE_PARENS1522=null;
        CSharp4.pointer_type_return pointer_type1520 =null;

        CSharp4.fixed_pointer_declarators_return fixed_pointer_declarators1521 =null;

        CSharp4.embedded_statement_return embedded_statement1523 =null;


        Object FIXED1518_tree=null;
        Object OPEN_PARENS1519_tree=null;
        Object CLOSE_PARENS1522_tree=null;

        try {
            // CSharp4.g:2214:2: ( FIXED OPEN_PARENS pointer_type fixed_pointer_declarators CLOSE_PARENS embedded_statement )
            // CSharp4.g:2214:4: FIXED OPEN_PARENS pointer_type fixed_pointer_declarators CLOSE_PARENS embedded_statement
            {
            root_0 = (Object)adaptor.nil();


            FIXED1518=(Token)match(input,FIXED,FOLLOW_FIXED_in_fixed_statement9635); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            FIXED1518_tree = 
            (Object)adaptor.create(FIXED1518)
            ;
            adaptor.addChild(root_0, FIXED1518_tree);
            }

            OPEN_PARENS1519=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_fixed_statement9637); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1519_tree = 
            (Object)adaptor.create(OPEN_PARENS1519)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1519_tree);
            }

            pushFollow(FOLLOW_pointer_type_in_fixed_statement9639);
            pointer_type1520=pointer_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, pointer_type1520.getTree());

            pushFollow(FOLLOW_fixed_pointer_declarators_in_fixed_statement9641);
            fixed_pointer_declarators1521=fixed_pointer_declarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_declarators1521.getTree());

            CLOSE_PARENS1522=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_fixed_statement9643); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1522_tree = 
            (Object)adaptor.create(CLOSE_PARENS1522)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1522_tree);
            }

            pushFollow(FOLLOW_embedded_statement_in_fixed_statement9645);
            embedded_statement1523=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement1523.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "fixed_statement"


    public static class fixed_pointer_declarators_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "fixed_pointer_declarators"
    // CSharp4.g:2216:1: fixed_pointer_declarators : fixed_pointer_declarator ( COMMA fixed_pointer_declarator )* ;
    public final CSharp4.fixed_pointer_declarators_return fixed_pointer_declarators() throws RecognitionException {
        CSharp4.fixed_pointer_declarators_return retval = new CSharp4.fixed_pointer_declarators_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token COMMA1525=null;
        CSharp4.fixed_pointer_declarator_return fixed_pointer_declarator1524 =null;

        CSharp4.fixed_pointer_declarator_return fixed_pointer_declarator1526 =null;


        Object COMMA1525_tree=null;

        try {
            // CSharp4.g:2217:2: ( fixed_pointer_declarator ( COMMA fixed_pointer_declarator )* )
            // CSharp4.g:2217:4: fixed_pointer_declarator ( COMMA fixed_pointer_declarator )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators9656);
            fixed_pointer_declarator1524=fixed_pointer_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_declarator1524.getTree());

            // CSharp4.g:2217:29: ( COMMA fixed_pointer_declarator )*
            loop372:
            do {
                int alt372=2;
                int LA372_0 = input.LA(1);

                if ( (LA372_0==COMMA) ) {
                    alt372=1;
                }


                switch (alt372) {
            	case 1 :
            	    // CSharp4.g:2217:31: COMMA fixed_pointer_declarator
            	    {
            	    COMMA1525=(Token)match(input,COMMA,FOLLOW_COMMA_in_fixed_pointer_declarators9660); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA1525_tree = 
            	    (Object)adaptor.create(COMMA1525)
            	    ;
            	    adaptor.addChild(root_0, COMMA1525_tree);
            	    }

            	    pushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators9663);
            	    fixed_pointer_declarator1526=fixed_pointer_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_declarator1526.getTree());

            	    }
            	    break;

            	default :
            	    break loop372;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "fixed_pointer_declarators"


    public static class fixed_pointer_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "fixed_pointer_declarator"
    // CSharp4.g:2219:1: fixed_pointer_declarator : IDENTIFIER ASSIGNMENT fixed_pointer_initializer ;
    public final CSharp4.fixed_pointer_declarator_return fixed_pointer_declarator() throws RecognitionException {
        CSharp4.fixed_pointer_declarator_return retval = new CSharp4.fixed_pointer_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1527=null;
        Token ASSIGNMENT1528=null;
        CSharp4.fixed_pointer_initializer_return fixed_pointer_initializer1529 =null;


        Object IDENTIFIER1527_tree=null;
        Object ASSIGNMENT1528_tree=null;

        try {
            // CSharp4.g:2220:2: ( IDENTIFIER ASSIGNMENT fixed_pointer_initializer )
            // CSharp4.g:2220:4: IDENTIFIER ASSIGNMENT fixed_pointer_initializer
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER1527=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_fixed_pointer_declarator9677); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1527_tree = 
            (Object)adaptor.create(IDENTIFIER1527)
            ;
            adaptor.addChild(root_0, IDENTIFIER1527_tree);
            }

            ASSIGNMENT1528=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_fixed_pointer_declarator9679); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGNMENT1528_tree = 
            (Object)adaptor.create(ASSIGNMENT1528)
            ;
            adaptor.addChild(root_0, ASSIGNMENT1528_tree);
            }

            pushFollow(FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator9681);
            fixed_pointer_initializer1529=fixed_pointer_initializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_initializer1529.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "fixed_pointer_declarator"


    public static class fixed_pointer_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "fixed_pointer_initializer"
    // CSharp4.g:2228:1: fixed_pointer_initializer : ( ( AMP )=> AMP variable_reference | expression );
    public final CSharp4.fixed_pointer_initializer_return fixed_pointer_initializer() throws RecognitionException {
        CSharp4.fixed_pointer_initializer_return retval = new CSharp4.fixed_pointer_initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token AMP1530=null;
        CSharp4.variable_reference_return variable_reference1531 =null;

        CSharp4.expression_return expression1532 =null;


        Object AMP1530_tree=null;

        try {
            // CSharp4.g:2229:3: ( ( AMP )=> AMP variable_reference | expression )
            int alt373=2;
            int LA373_0 = input.LA(1);

            if ( (LA373_0==AMP) ) {
                int LA373_1 = input.LA(2);

                if ( (synpred27_CSharp4()) ) {
                    alt373=1;
                }
                else if ( (true) ) {
                    alt373=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 373, 1, input);

                    throw nvae;

                }
            }
            else if ( ((LA373_0 >= BANG && LA373_0 <= BASE)||LA373_0==BOOL||LA373_0==BYTE||(LA373_0 >= CHAR && LA373_0 <= CHECKED)||LA373_0==DECIMAL||(LA373_0 >= DEFAULT && LA373_0 <= DELEGATE)||LA373_0==DOUBLE||LA373_0==FALSE||LA373_0==FLOAT||LA373_0==IDENTIFIER||(LA373_0 >= INT && LA373_0 <= INTEGER_LITERAL)||LA373_0==LONG||LA373_0==MINUS||LA373_0==NEW||LA373_0==NULL||LA373_0==OBJECT||LA373_0==OPEN_PARENS||LA373_0==OP_DEC||LA373_0==OP_INC||LA373_0==PLUS||LA373_0==REAL_LITERAL||LA373_0==SBYTE||LA373_0==SHORT||LA373_0==SIZEOF||LA373_0==STAR||(LA373_0 >= STRING && LA373_0 <= STRING_LITERAL)||LA373_0==THIS||(LA373_0 >= TILDE && LA373_0 <= TRUE)||(LA373_0 >= TYPEOF && LA373_0 <= UNCHECKED)||LA373_0==USHORT) ) {
                alt373=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 373, 0, input);

                throw nvae;

            }
            switch (alt373) {
                case 1 :
                    // CSharp4.g:2229:5: ( AMP )=> AMP variable_reference
                    {
                    root_0 = (Object)adaptor.nil();


                    AMP1530=(Token)match(input,AMP,FOLLOW_AMP_in_fixed_pointer_initializer9701); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    AMP1530_tree = 
                    (Object)adaptor.create(AMP1530)
                    ;
                    adaptor.addChild(root_0, AMP1530_tree);
                    }

                    pushFollow(FOLLOW_variable_reference_in_fixed_pointer_initializer9703);
                    variable_reference1531=variable_reference();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_reference1531.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:2230:5: expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_expression_in_fixed_pointer_initializer9709);
                    expression1532=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1532.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "fixed_pointer_initializer"


    public static class struct_member_declaration_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_member_declaration_unsafe"
    // CSharp4.g:2232:1: struct_member_declaration_unsafe : fixed_size_buffer_declaration ;
    public final CSharp4.struct_member_declaration_unsafe_return struct_member_declaration_unsafe() throws RecognitionException {
        CSharp4.struct_member_declaration_unsafe_return retval = new CSharp4.struct_member_declaration_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.fixed_size_buffer_declaration_return fixed_size_buffer_declaration1533 =null;



        try {
            // CSharp4.g:2233:2: ( fixed_size_buffer_declaration )
            // CSharp4.g:2233:4: fixed_size_buffer_declaration
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_fixed_size_buffer_declaration_in_struct_member_declaration_unsafe9721);
            fixed_size_buffer_declaration1533=fixed_size_buffer_declaration();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_size_buffer_declaration1533.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_member_declaration_unsafe"


    public static class fixed_size_buffer_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "fixed_size_buffer_declaration"
    // CSharp4.g:2235:1: fixed_size_buffer_declaration : ( attributes )? ( fixed_size_buffer_modifiers )? FIXED buffer_element_type fixed_size_buffer_declarators SEMICOLON ;
    public final CSharp4.fixed_size_buffer_declaration_return fixed_size_buffer_declaration() throws RecognitionException {
        CSharp4.fixed_size_buffer_declaration_return retval = new CSharp4.fixed_size_buffer_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token FIXED1536=null;
        Token SEMICOLON1539=null;
        CSharp4.attributes_return attributes1534 =null;

        CSharp4.fixed_size_buffer_modifiers_return fixed_size_buffer_modifiers1535 =null;

        CSharp4.buffer_element_type_return buffer_element_type1537 =null;

        CSharp4.fixed_size_buffer_declarators_return fixed_size_buffer_declarators1538 =null;


        Object FIXED1536_tree=null;
        Object SEMICOLON1539_tree=null;

        try {
            // CSharp4.g:2236:2: ( ( attributes )? ( fixed_size_buffer_modifiers )? FIXED buffer_element_type fixed_size_buffer_declarators SEMICOLON )
            // CSharp4.g:2236:4: ( attributes )? ( fixed_size_buffer_modifiers )? FIXED buffer_element_type fixed_size_buffer_declarators SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:2236:4: ( attributes )?
            int alt374=2;
            int LA374_0 = input.LA(1);

            if ( (LA374_0==OPEN_BRACKET) ) {
                alt374=1;
            }
            switch (alt374) {
                case 1 :
                    // CSharp4.g:2236:4: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_fixed_size_buffer_declaration9732);
                    attributes1534=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1534.getTree());

                    }
                    break;

            }


            // CSharp4.g:2236:16: ( fixed_size_buffer_modifiers )?
            int alt375=2;
            int LA375_0 = input.LA(1);

            if ( (LA375_0==INTERNAL||LA375_0==NEW||(LA375_0 >= PRIVATE && LA375_0 <= PUBLIC)||LA375_0==UNSAFE) ) {
                alt375=1;
            }
            switch (alt375) {
                case 1 :
                    // CSharp4.g:2236:16: fixed_size_buffer_modifiers
                    {
                    pushFollow(FOLLOW_fixed_size_buffer_modifiers_in_fixed_size_buffer_declaration9735);
                    fixed_size_buffer_modifiers1535=fixed_size_buffer_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_size_buffer_modifiers1535.getTree());

                    }
                    break;

            }


            FIXED1536=(Token)match(input,FIXED,FOLLOW_FIXED_in_fixed_size_buffer_declaration9738); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            FIXED1536_tree = 
            (Object)adaptor.create(FIXED1536)
            ;
            adaptor.addChild(root_0, FIXED1536_tree);
            }

            pushFollow(FOLLOW_buffer_element_type_in_fixed_size_buffer_declaration9740);
            buffer_element_type1537=buffer_element_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, buffer_element_type1537.getTree());

            pushFollow(FOLLOW_fixed_size_buffer_declarators_in_fixed_size_buffer_declaration9742);
            fixed_size_buffer_declarators1538=fixed_size_buffer_declarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_size_buffer_declarators1538.getTree());

            SEMICOLON1539=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_fixed_size_buffer_declaration9744); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON1539_tree = 
            (Object)adaptor.create(SEMICOLON1539)
            ;
            adaptor.addChild(root_0, SEMICOLON1539_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "fixed_size_buffer_declaration"


    public static class fixed_size_buffer_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "fixed_size_buffer_modifiers"
    // CSharp4.g:2238:1: fixed_size_buffer_modifiers : ( fixed_size_buffer_modifier )+ ;
    public final CSharp4.fixed_size_buffer_modifiers_return fixed_size_buffer_modifiers() throws RecognitionException {
        CSharp4.fixed_size_buffer_modifiers_return retval = new CSharp4.fixed_size_buffer_modifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.fixed_size_buffer_modifier_return fixed_size_buffer_modifier1540 =null;



        try {
            // CSharp4.g:2239:2: ( ( fixed_size_buffer_modifier )+ )
            // CSharp4.g:2239:4: ( fixed_size_buffer_modifier )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:2239:4: ( fixed_size_buffer_modifier )+
            int cnt376=0;
            loop376:
            do {
                int alt376=2;
                int LA376_0 = input.LA(1);

                if ( (LA376_0==INTERNAL||LA376_0==NEW||(LA376_0 >= PRIVATE && LA376_0 <= PUBLIC)||LA376_0==UNSAFE) ) {
                    alt376=1;
                }


                switch (alt376) {
            	case 1 :
            	    // CSharp4.g:2239:4: fixed_size_buffer_modifier
            	    {
            	    pushFollow(FOLLOW_fixed_size_buffer_modifier_in_fixed_size_buffer_modifiers9755);
            	    fixed_size_buffer_modifier1540=fixed_size_buffer_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_size_buffer_modifier1540.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt376 >= 1 ) break loop376;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(376, input);
                        throw eee;
                }
                cnt376++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "fixed_size_buffer_modifiers"


    public static class fixed_size_buffer_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "fixed_size_buffer_modifier"
    // CSharp4.g:2241:1: fixed_size_buffer_modifier : ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | UNSAFE );
    public final CSharp4.fixed_size_buffer_modifier_return fixed_size_buffer_modifier() throws RecognitionException {
        CSharp4.fixed_size_buffer_modifier_return retval = new CSharp4.fixed_size_buffer_modifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set1541=null;

        Object set1541_tree=null;

        try {
            // CSharp4.g:2242:2: ( NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | UNSAFE )
            // CSharp4.g:
            {
            root_0 = (Object)adaptor.nil();


            set1541=(Token)input.LT(1);

            if ( input.LA(1)==INTERNAL||input.LA(1)==NEW||(input.LA(1) >= PRIVATE && input.LA(1) <= PUBLIC)||input.LA(1)==UNSAFE ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set1541)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "fixed_size_buffer_modifier"


    public static class buffer_element_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "buffer_element_type"
    // CSharp4.g:2249:1: buffer_element_type : type ;
    public final CSharp4.buffer_element_type_return buffer_element_type() throws RecognitionException {
        CSharp4.buffer_element_type_return retval = new CSharp4.buffer_element_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.type_return type1542 =null;



        try {
            // CSharp4.g:2250:2: ( type )
            // CSharp4.g:2250:4: type
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_in_buffer_element_type9803);
            type1542=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1542.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "buffer_element_type"


    public static class fixed_size_buffer_declarators_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "fixed_size_buffer_declarators"
    // CSharp4.g:2252:1: fixed_size_buffer_declarators : ( fixed_size_buffer_declarator )+ ;
    public final CSharp4.fixed_size_buffer_declarators_return fixed_size_buffer_declarators() throws RecognitionException {
        CSharp4.fixed_size_buffer_declarators_return retval = new CSharp4.fixed_size_buffer_declarators_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.fixed_size_buffer_declarator_return fixed_size_buffer_declarator1543 =null;



        try {
            // CSharp4.g:2253:2: ( ( fixed_size_buffer_declarator )+ )
            // CSharp4.g:2253:4: ( fixed_size_buffer_declarator )+
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:2253:4: ( fixed_size_buffer_declarator )+
            int cnt377=0;
            loop377:
            do {
                int alt377=2;
                int LA377_0 = input.LA(1);

                if ( (LA377_0==IDENTIFIER) ) {
                    alt377=1;
                }


                switch (alt377) {
            	case 1 :
            	    // CSharp4.g:2253:4: fixed_size_buffer_declarator
            	    {
            	    pushFollow(FOLLOW_fixed_size_buffer_declarator_in_fixed_size_buffer_declarators9814);
            	    fixed_size_buffer_declarator1543=fixed_size_buffer_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_size_buffer_declarator1543.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt377 >= 1 ) break loop377;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(377, input);
                        throw eee;
                }
                cnt377++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "fixed_size_buffer_declarators"


    public static class fixed_size_buffer_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "fixed_size_buffer_declarator"
    // CSharp4.g:2255:1: fixed_size_buffer_declarator : IDENTIFIER OPEN_BRACKET constant_expression CLOSE_BRACKET ;
    public final CSharp4.fixed_size_buffer_declarator_return fixed_size_buffer_declarator() throws RecognitionException {
        CSharp4.fixed_size_buffer_declarator_return retval = new CSharp4.fixed_size_buffer_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1544=null;
        Token OPEN_BRACKET1545=null;
        Token CLOSE_BRACKET1547=null;
        CSharp4.constant_expression_return constant_expression1546 =null;


        Object IDENTIFIER1544_tree=null;
        Object OPEN_BRACKET1545_tree=null;
        Object CLOSE_BRACKET1547_tree=null;

        try {
            // CSharp4.g:2256:2: ( IDENTIFIER OPEN_BRACKET constant_expression CLOSE_BRACKET )
            // CSharp4.g:2256:4: IDENTIFIER OPEN_BRACKET constant_expression CLOSE_BRACKET
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER1544=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_fixed_size_buffer_declarator9826); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1544_tree = 
            (Object)adaptor.create(IDENTIFIER1544)
            ;
            adaptor.addChild(root_0, IDENTIFIER1544_tree);
            }

            OPEN_BRACKET1545=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_fixed_size_buffer_declarator9828); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACKET1545_tree = 
            (Object)adaptor.create(OPEN_BRACKET1545)
            ;
            adaptor.addChild(root_0, OPEN_BRACKET1545_tree);
            }

            pushFollow(FOLLOW_constant_expression_in_fixed_size_buffer_declarator9830);
            constant_expression1546=constant_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression1546.getTree());

            CLOSE_BRACKET1547=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_fixed_size_buffer_declarator9832); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACKET1547_tree = 
            (Object)adaptor.create(CLOSE_BRACKET1547)
            ;
            adaptor.addChild(root_0, CLOSE_BRACKET1547_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "fixed_size_buffer_declarator"


    public static class local_variable_initializer_unsafe_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "local_variable_initializer_unsafe"
    // CSharp4.g:2259:1: local_variable_initializer_unsafe : stackalloc_initializer ;
    public final CSharp4.local_variable_initializer_unsafe_return local_variable_initializer_unsafe() throws RecognitionException {
        CSharp4.local_variable_initializer_unsafe_return retval = new CSharp4.local_variable_initializer_unsafe_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        CSharp4.stackalloc_initializer_return stackalloc_initializer1548 =null;



        try {
            // CSharp4.g:2260:2: ( stackalloc_initializer )
            // CSharp4.g:2260:4: stackalloc_initializer
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_stackalloc_initializer_in_local_variable_initializer_unsafe9845);
            stackalloc_initializer1548=stackalloc_initializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, stackalloc_initializer1548.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "local_variable_initializer_unsafe"


    public static class stackalloc_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "stackalloc_initializer"
    // CSharp4.g:2262:1: stackalloc_initializer : STACKALLOC unmanaged_type OPEN_BRACKET expression CLOSE_BRACKET ;
    public final CSharp4.stackalloc_initializer_return stackalloc_initializer() throws RecognitionException {
        CSharp4.stackalloc_initializer_return retval = new CSharp4.stackalloc_initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token STACKALLOC1549=null;
        Token OPEN_BRACKET1551=null;
        Token CLOSE_BRACKET1553=null;
        CSharp4.unmanaged_type_return unmanaged_type1550 =null;

        CSharp4.expression_return expression1552 =null;


        Object STACKALLOC1549_tree=null;
        Object OPEN_BRACKET1551_tree=null;
        Object CLOSE_BRACKET1553_tree=null;

        try {
            // CSharp4.g:2263:2: ( STACKALLOC unmanaged_type OPEN_BRACKET expression CLOSE_BRACKET )
            // CSharp4.g:2263:4: STACKALLOC unmanaged_type OPEN_BRACKET expression CLOSE_BRACKET
            {
            root_0 = (Object)adaptor.nil();


            STACKALLOC1549=(Token)match(input,STACKALLOC,FOLLOW_STACKALLOC_in_stackalloc_initializer9856); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            STACKALLOC1549_tree = 
            (Object)adaptor.create(STACKALLOC1549)
            ;
            adaptor.addChild(root_0, STACKALLOC1549_tree);
            }

            pushFollow(FOLLOW_unmanaged_type_in_stackalloc_initializer9858);
            unmanaged_type1550=unmanaged_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unmanaged_type1550.getTree());

            OPEN_BRACKET1551=(Token)match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_stackalloc_initializer9860); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACKET1551_tree = 
            (Object)adaptor.create(OPEN_BRACKET1551)
            ;
            adaptor.addChild(root_0, OPEN_BRACKET1551_tree);
            }

            pushFollow(FOLLOW_expression_in_stackalloc_initializer9862);
            expression1552=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1552.getTree());

            CLOSE_BRACKET1553=(Token)match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_stackalloc_initializer9864); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACKET1553_tree = 
            (Object)adaptor.create(CLOSE_BRACKET1553)
            ;
            adaptor.addChild(root_0, CLOSE_BRACKET1553_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "stackalloc_initializer"


    public static class from_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "from_contextual_keyword"
    // CSharp4.g:2273:1: from_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.from_contextual_keyword_return from_contextual_keyword() throws RecognitionException {
        CSharp4.from_contextual_keyword_return retval = new CSharp4.from_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1554=null;

        Object IDENTIFIER1554_tree=null;

        try {
            // CSharp4.g:2274:3: ({...}? IDENTIFIER )
            // CSharp4.g:2274:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("from"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "from_contextual_keyword", "input.LT(1).getText().equals(\"from\")");
            }

            IDENTIFIER1554=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_from_contextual_keyword9886); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1554_tree = 
            (Object)adaptor.create(IDENTIFIER1554)
            ;
            adaptor.addChild(root_0, IDENTIFIER1554_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "from_contextual_keyword"


    public static class let_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "let_contextual_keyword"
    // CSharp4.g:2276:1: let_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.let_contextual_keyword_return let_contextual_keyword() throws RecognitionException {
        CSharp4.let_contextual_keyword_return retval = new CSharp4.let_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1555=null;

        Object IDENTIFIER1555_tree=null;

        try {
            // CSharp4.g:2277:3: ({...}? IDENTIFIER )
            // CSharp4.g:2277:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("let"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "let_contextual_keyword", "input.LT(1).getText().equals(\"let\")");
            }

            IDENTIFIER1555=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_let_contextual_keyword9900); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1555_tree = 
            (Object)adaptor.create(IDENTIFIER1555)
            ;
            adaptor.addChild(root_0, IDENTIFIER1555_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "let_contextual_keyword"


    public static class where_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "where_contextual_keyword"
    // CSharp4.g:2279:1: where_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.where_contextual_keyword_return where_contextual_keyword() throws RecognitionException {
        CSharp4.where_contextual_keyword_return retval = new CSharp4.where_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1556=null;

        Object IDENTIFIER1556_tree=null;

        try {
            // CSharp4.g:2280:3: ({...}? IDENTIFIER )
            // CSharp4.g:2280:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("where"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "where_contextual_keyword", "input.LT(1).getText().equals(\"where\")");
            }

            IDENTIFIER1556=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_where_contextual_keyword9914); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1556_tree = 
            (Object)adaptor.create(IDENTIFIER1556)
            ;
            adaptor.addChild(root_0, IDENTIFIER1556_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "where_contextual_keyword"


    public static class join_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "join_contextual_keyword"
    // CSharp4.g:2282:1: join_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.join_contextual_keyword_return join_contextual_keyword() throws RecognitionException {
        CSharp4.join_contextual_keyword_return retval = new CSharp4.join_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1557=null;

        Object IDENTIFIER1557_tree=null;

        try {
            // CSharp4.g:2283:3: ({...}? IDENTIFIER )
            // CSharp4.g:2283:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("join"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "join_contextual_keyword", "input.LT(1).getText().equals(\"join\")");
            }

            IDENTIFIER1557=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_join_contextual_keyword9928); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1557_tree = 
            (Object)adaptor.create(IDENTIFIER1557)
            ;
            adaptor.addChild(root_0, IDENTIFIER1557_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "join_contextual_keyword"


    public static class on_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "on_contextual_keyword"
    // CSharp4.g:2285:1: on_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.on_contextual_keyword_return on_contextual_keyword() throws RecognitionException {
        CSharp4.on_contextual_keyword_return retval = new CSharp4.on_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1558=null;

        Object IDENTIFIER1558_tree=null;

        try {
            // CSharp4.g:2286:3: ({...}? IDENTIFIER )
            // CSharp4.g:2286:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("on"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "on_contextual_keyword", "input.LT(1).getText().equals(\"on\")");
            }

            IDENTIFIER1558=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_on_contextual_keyword9942); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1558_tree = 
            (Object)adaptor.create(IDENTIFIER1558)
            ;
            adaptor.addChild(root_0, IDENTIFIER1558_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "on_contextual_keyword"


    public static class equals_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "equals_contextual_keyword"
    // CSharp4.g:2288:1: equals_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.equals_contextual_keyword_return equals_contextual_keyword() throws RecognitionException {
        CSharp4.equals_contextual_keyword_return retval = new CSharp4.equals_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1559=null;

        Object IDENTIFIER1559_tree=null;

        try {
            // CSharp4.g:2289:3: ({...}? IDENTIFIER )
            // CSharp4.g:2289:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("equals"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "equals_contextual_keyword", "input.LT(1).getText().equals(\"equals\")");
            }

            IDENTIFIER1559=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_equals_contextual_keyword9956); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1559_tree = 
            (Object)adaptor.create(IDENTIFIER1559)
            ;
            adaptor.addChild(root_0, IDENTIFIER1559_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "equals_contextual_keyword"


    public static class into_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "into_contextual_keyword"
    // CSharp4.g:2291:1: into_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.into_contextual_keyword_return into_contextual_keyword() throws RecognitionException {
        CSharp4.into_contextual_keyword_return retval = new CSharp4.into_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1560=null;

        Object IDENTIFIER1560_tree=null;

        try {
            // CSharp4.g:2292:3: ({...}? IDENTIFIER )
            // CSharp4.g:2292:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("into"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "into_contextual_keyword", "input.LT(1).getText().equals(\"into\")");
            }

            IDENTIFIER1560=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_into_contextual_keyword9970); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1560_tree = 
            (Object)adaptor.create(IDENTIFIER1560)
            ;
            adaptor.addChild(root_0, IDENTIFIER1560_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "into_contextual_keyword"


    public static class orderby_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "orderby_contextual_keyword"
    // CSharp4.g:2294:1: orderby_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.orderby_contextual_keyword_return orderby_contextual_keyword() throws RecognitionException {
        CSharp4.orderby_contextual_keyword_return retval = new CSharp4.orderby_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1561=null;

        Object IDENTIFIER1561_tree=null;

        try {
            // CSharp4.g:2295:3: ({...}? IDENTIFIER )
            // CSharp4.g:2295:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("orderby"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "orderby_contextual_keyword", "input.LT(1).getText().equals(\"orderby\")");
            }

            IDENTIFIER1561=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_orderby_contextual_keyword9984); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1561_tree = 
            (Object)adaptor.create(IDENTIFIER1561)
            ;
            adaptor.addChild(root_0, IDENTIFIER1561_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "orderby_contextual_keyword"


    public static class ascending_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "ascending_contextual_keyword"
    // CSharp4.g:2297:1: ascending_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.ascending_contextual_keyword_return ascending_contextual_keyword() throws RecognitionException {
        CSharp4.ascending_contextual_keyword_return retval = new CSharp4.ascending_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1562=null;

        Object IDENTIFIER1562_tree=null;

        try {
            // CSharp4.g:2298:3: ({...}? IDENTIFIER )
            // CSharp4.g:2298:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("ascending"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "ascending_contextual_keyword", "input.LT(1).getText().equals(\"ascending\")");
            }

            IDENTIFIER1562=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_ascending_contextual_keyword9998); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1562_tree = 
            (Object)adaptor.create(IDENTIFIER1562)
            ;
            adaptor.addChild(root_0, IDENTIFIER1562_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ascending_contextual_keyword"


    public static class descending_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "descending_contextual_keyword"
    // CSharp4.g:2300:1: descending_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.descending_contextual_keyword_return descending_contextual_keyword() throws RecognitionException {
        CSharp4.descending_contextual_keyword_return retval = new CSharp4.descending_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1563=null;

        Object IDENTIFIER1563_tree=null;

        try {
            // CSharp4.g:2301:3: ({...}? IDENTIFIER )
            // CSharp4.g:2301:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("descending"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "descending_contextual_keyword", "input.LT(1).getText().equals(\"descending\")");
            }

            IDENTIFIER1563=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_descending_contextual_keyword10012); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1563_tree = 
            (Object)adaptor.create(IDENTIFIER1563)
            ;
            adaptor.addChild(root_0, IDENTIFIER1563_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "descending_contextual_keyword"


    public static class select_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "select_contextual_keyword"
    // CSharp4.g:2303:1: select_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.select_contextual_keyword_return select_contextual_keyword() throws RecognitionException {
        CSharp4.select_contextual_keyword_return retval = new CSharp4.select_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1564=null;

        Object IDENTIFIER1564_tree=null;

        try {
            // CSharp4.g:2304:3: ({...}? IDENTIFIER )
            // CSharp4.g:2304:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("select"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "select_contextual_keyword", "input.LT(1).getText().equals(\"select\")");
            }

            IDENTIFIER1564=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_select_contextual_keyword10026); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1564_tree = 
            (Object)adaptor.create(IDENTIFIER1564)
            ;
            adaptor.addChild(root_0, IDENTIFIER1564_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "select_contextual_keyword"


    public static class group_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "group_contextual_keyword"
    // CSharp4.g:2306:1: group_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.group_contextual_keyword_return group_contextual_keyword() throws RecognitionException {
        CSharp4.group_contextual_keyword_return retval = new CSharp4.group_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1565=null;

        Object IDENTIFIER1565_tree=null;

        try {
            // CSharp4.g:2307:3: ({...}? IDENTIFIER )
            // CSharp4.g:2307:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("group"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "group_contextual_keyword", "input.LT(1).getText().equals(\"group\")");
            }

            IDENTIFIER1565=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_group_contextual_keyword10040); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1565_tree = 
            (Object)adaptor.create(IDENTIFIER1565)
            ;
            adaptor.addChild(root_0, IDENTIFIER1565_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "group_contextual_keyword"


    public static class by_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "by_contextual_keyword"
    // CSharp4.g:2309:1: by_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.by_contextual_keyword_return by_contextual_keyword() throws RecognitionException {
        CSharp4.by_contextual_keyword_return retval = new CSharp4.by_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1566=null;

        Object IDENTIFIER1566_tree=null;

        try {
            // CSharp4.g:2310:3: ({...}? IDENTIFIER )
            // CSharp4.g:2310:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("by"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "by_contextual_keyword", "input.LT(1).getText().equals(\"by\")");
            }

            IDENTIFIER1566=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_by_contextual_keyword10054); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1566_tree = 
            (Object)adaptor.create(IDENTIFIER1566)
            ;
            adaptor.addChild(root_0, IDENTIFIER1566_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "by_contextual_keyword"


    public static class partial_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "partial_contextual_keyword"
    // CSharp4.g:2312:1: partial_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.partial_contextual_keyword_return partial_contextual_keyword() throws RecognitionException {
        CSharp4.partial_contextual_keyword_return retval = new CSharp4.partial_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1567=null;

        Object IDENTIFIER1567_tree=null;

        try {
            // CSharp4.g:2313:3: ({...}? IDENTIFIER )
            // CSharp4.g:2313:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("partial"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "partial_contextual_keyword", "input.LT(1).getText().equals(\"partial\")");
            }

            IDENTIFIER1567=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_partial_contextual_keyword10068); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1567_tree = 
            (Object)adaptor.create(IDENTIFIER1567)
            ;
            adaptor.addChild(root_0, IDENTIFIER1567_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "partial_contextual_keyword"


    public static class alias_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "alias_contextual_keyword"
    // CSharp4.g:2315:1: alias_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.alias_contextual_keyword_return alias_contextual_keyword() throws RecognitionException {
        CSharp4.alias_contextual_keyword_return retval = new CSharp4.alias_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1568=null;

        Object IDENTIFIER1568_tree=null;

        try {
            // CSharp4.g:2316:3: ({...}? IDENTIFIER )
            // CSharp4.g:2316:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("alias"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "alias_contextual_keyword", "input.LT(1).getText().equals(\"alias\")");
            }

            IDENTIFIER1568=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_alias_contextual_keyword10082); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1568_tree = 
            (Object)adaptor.create(IDENTIFIER1568)
            ;
            adaptor.addChild(root_0, IDENTIFIER1568_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "alias_contextual_keyword"


    public static class yield_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "yield_contextual_keyword"
    // CSharp4.g:2318:1: yield_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.yield_contextual_keyword_return yield_contextual_keyword() throws RecognitionException {
        CSharp4.yield_contextual_keyword_return retval = new CSharp4.yield_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1569=null;

        Object IDENTIFIER1569_tree=null;

        try {
            // CSharp4.g:2319:3: ({...}? IDENTIFIER )
            // CSharp4.g:2319:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("yield"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "yield_contextual_keyword", "input.LT(1).getText().equals(\"yield\")");
            }

            IDENTIFIER1569=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_yield_contextual_keyword10096); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1569_tree = 
            (Object)adaptor.create(IDENTIFIER1569)
            ;
            adaptor.addChild(root_0, IDENTIFIER1569_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "yield_contextual_keyword"


    public static class get_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "get_contextual_keyword"
    // CSharp4.g:2321:1: get_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.get_contextual_keyword_return get_contextual_keyword() throws RecognitionException {
        CSharp4.get_contextual_keyword_return retval = new CSharp4.get_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1570=null;

        Object IDENTIFIER1570_tree=null;

        try {
            // CSharp4.g:2322:3: ({...}? IDENTIFIER )
            // CSharp4.g:2322:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("get"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "get_contextual_keyword", "input.LT(1).getText().equals(\"get\")");
            }

            IDENTIFIER1570=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_get_contextual_keyword10110); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1570_tree = 
            (Object)adaptor.create(IDENTIFIER1570)
            ;
            adaptor.addChild(root_0, IDENTIFIER1570_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "get_contextual_keyword"


    public static class set_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "set_contextual_keyword"
    // CSharp4.g:2324:1: set_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.set_contextual_keyword_return set_contextual_keyword() throws RecognitionException {
        CSharp4.set_contextual_keyword_return retval = new CSharp4.set_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1571=null;

        Object IDENTIFIER1571_tree=null;

        try {
            // CSharp4.g:2325:3: ({...}? IDENTIFIER )
            // CSharp4.g:2325:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("set"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "set_contextual_keyword", "input.LT(1).getText().equals(\"set\")");
            }

            IDENTIFIER1571=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_set_contextual_keyword10124); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1571_tree = 
            (Object)adaptor.create(IDENTIFIER1571)
            ;
            adaptor.addChild(root_0, IDENTIFIER1571_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "set_contextual_keyword"


    public static class add_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "add_contextual_keyword"
    // CSharp4.g:2327:1: add_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.add_contextual_keyword_return add_contextual_keyword() throws RecognitionException {
        CSharp4.add_contextual_keyword_return retval = new CSharp4.add_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1572=null;

        Object IDENTIFIER1572_tree=null;

        try {
            // CSharp4.g:2328:3: ({...}? IDENTIFIER )
            // CSharp4.g:2328:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("add"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "add_contextual_keyword", "input.LT(1).getText().equals(\"add\")");
            }

            IDENTIFIER1572=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_add_contextual_keyword10138); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1572_tree = 
            (Object)adaptor.create(IDENTIFIER1572)
            ;
            adaptor.addChild(root_0, IDENTIFIER1572_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "add_contextual_keyword"


    public static class remove_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "remove_contextual_keyword"
    // CSharp4.g:2330:1: remove_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.remove_contextual_keyword_return remove_contextual_keyword() throws RecognitionException {
        CSharp4.remove_contextual_keyword_return retval = new CSharp4.remove_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1573=null;

        Object IDENTIFIER1573_tree=null;

        try {
            // CSharp4.g:2331:3: ({...}? IDENTIFIER )
            // CSharp4.g:2331:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("remove"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "remove_contextual_keyword", "input.LT(1).getText().equals(\"remove\")");
            }

            IDENTIFIER1573=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_remove_contextual_keyword10152); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1573_tree = 
            (Object)adaptor.create(IDENTIFIER1573)
            ;
            adaptor.addChild(root_0, IDENTIFIER1573_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "remove_contextual_keyword"


    public static class dynamic_contextual_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "dynamic_contextual_keyword"
    // CSharp4.g:2333:1: dynamic_contextual_keyword :{...}? IDENTIFIER ;
    public final CSharp4.dynamic_contextual_keyword_return dynamic_contextual_keyword() throws RecognitionException {
        CSharp4.dynamic_contextual_keyword_return retval = new CSharp4.dynamic_contextual_keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1574=null;

        Object IDENTIFIER1574_tree=null;

        try {
            // CSharp4.g:2334:3: ({...}? IDENTIFIER )
            // CSharp4.g:2334:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("dynamic"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "dynamic_contextual_keyword", "input.LT(1).getText().equals(\"dynamic\")");
            }

            IDENTIFIER1574=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_dynamic_contextual_keyword10166); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1574_tree = 
            (Object)adaptor.create(IDENTIFIER1574)
            ;
            adaptor.addChild(root_0, IDENTIFIER1574_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "dynamic_contextual_keyword"


    public static class arglist_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "arglist"
    // CSharp4.g:2336:1: arglist :{...}? IDENTIFIER ;
    public final CSharp4.arglist_return arglist() throws RecognitionException {
        CSharp4.arglist_return retval = new CSharp4.arglist_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1575=null;

        Object IDENTIFIER1575_tree=null;

        try {
            // CSharp4.g:2337:3: ({...}? IDENTIFIER )
            // CSharp4.g:2337:5: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            if ( !((input.LT(1).getText().equals("__arglist"))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "arglist", "input.LT(1).getText().equals(\"__arglist\")");
            }

            IDENTIFIER1575=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_arglist10180); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1575_tree = 
            (Object)adaptor.create(IDENTIFIER1575)
            ;
            adaptor.addChild(root_0, IDENTIFIER1575_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "arglist"


    public static class right_arrow_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "right_arrow"
    // CSharp4.g:2339:1: right_arrow : first= ASSIGNMENT second= GT {...}?;
    public final CSharp4.right_arrow_return right_arrow() throws RecognitionException {
        CSharp4.right_arrow_return retval = new CSharp4.right_arrow_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token first=null;
        Token second=null;

        Object first_tree=null;
        Object second_tree=null;

        try {
            // CSharp4.g:2340:3: (first= ASSIGNMENT second= GT {...}?)
            // CSharp4.g:2340:5: first= ASSIGNMENT second= GT {...}?
            {
            root_0 = (Object)adaptor.nil();


            first=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_right_arrow10194); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            first_tree = 
            (Object)adaptor.create(first)
            ;
            adaptor.addChild(root_0, first_tree);
            }

            second=(Token)match(input,GT,FOLLOW_GT_in_right_arrow10198); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            second_tree = 
            (Object)adaptor.create(second)
            ;
            adaptor.addChild(root_0, second_tree);
            }

            if ( !(((first!=null?first.getTokenIndex():0) + 1 == (second!=null?second.getTokenIndex():0))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "right_arrow", "$first.index + 1 == $second.index");
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "right_arrow"


    public static class right_shift_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "right_shift"
    // CSharp4.g:2342:1: right_shift : first= GT second= GT {...}?;
    public final CSharp4.right_shift_return right_shift() throws RecognitionException {
        CSharp4.right_shift_return retval = new CSharp4.right_shift_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token first=null;
        Token second=null;

        Object first_tree=null;
        Object second_tree=null;

        try {
            // CSharp4.g:2343:3: (first= GT second= GT {...}?)
            // CSharp4.g:2343:5: first= GT second= GT {...}?
            {
            root_0 = (Object)adaptor.nil();


            first=(Token)match(input,GT,FOLLOW_GT_in_right_shift10215); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            first_tree = 
            (Object)adaptor.create(first)
            ;
            adaptor.addChild(root_0, first_tree);
            }

            second=(Token)match(input,GT,FOLLOW_GT_in_right_shift10219); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            second_tree = 
            (Object)adaptor.create(second)
            ;
            adaptor.addChild(root_0, second_tree);
            }

            if ( !(((first!=null?first.getTokenIndex():0) + 1 == (second!=null?second.getTokenIndex():0))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "right_shift", "$first.index + 1 == $second.index");
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "right_shift"


    public static class right_shift_assignment_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "right_shift_assignment"
    // CSharp4.g:2345:1: right_shift_assignment : first= GT second= OP_GE {...}?;
    public final CSharp4.right_shift_assignment_return right_shift_assignment() throws RecognitionException {
        CSharp4.right_shift_assignment_return retval = new CSharp4.right_shift_assignment_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token first=null;
        Token second=null;

        Object first_tree=null;
        Object second_tree=null;

        try {
            // CSharp4.g:2346:3: (first= GT second= OP_GE {...}?)
            // CSharp4.g:2346:5: first= GT second= OP_GE {...}?
            {
            root_0 = (Object)adaptor.nil();


            first=(Token)match(input,GT,FOLLOW_GT_in_right_shift_assignment10236); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            first_tree = 
            (Object)adaptor.create(first)
            ;
            adaptor.addChild(root_0, first_tree);
            }

            second=(Token)match(input,OP_GE,FOLLOW_OP_GE_in_right_shift_assignment10240); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            second_tree = 
            (Object)adaptor.create(second)
            ;
            adaptor.addChild(root_0, second_tree);
            }

            if ( !(((first!=null?first.getTokenIndex():0) + 1 == (second!=null?second.getTokenIndex():0))) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "right_shift_assignment", "$first.index + 1 == $second.index");
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "right_shift_assignment"


    public static class literal_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "literal"
    // CSharp4.g:2348:1: literal : ( boolean_literal | INTEGER_LITERAL | REAL_LITERAL | CHARACTER_LITERAL | STRING_LITERAL | NULL );
    public final CSharp4.literal_return literal() throws RecognitionException {
        CSharp4.literal_return retval = new CSharp4.literal_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token INTEGER_LITERAL1577=null;
        Token REAL_LITERAL1578=null;
        Token CHARACTER_LITERAL1579=null;
        Token STRING_LITERAL1580=null;
        Token NULL1581=null;
        CSharp4.boolean_literal_return boolean_literal1576 =null;


        Object INTEGER_LITERAL1577_tree=null;
        Object REAL_LITERAL1578_tree=null;
        Object CHARACTER_LITERAL1579_tree=null;
        Object STRING_LITERAL1580_tree=null;
        Object NULL1581_tree=null;

        try {
            // CSharp4.g:2349:3: ( boolean_literal | INTEGER_LITERAL | REAL_LITERAL | CHARACTER_LITERAL | STRING_LITERAL | NULL )
            int alt378=6;
            switch ( input.LA(1) ) {
            case FALSE:
            case TRUE:
                {
                alt378=1;
                }
                break;
            case INTEGER_LITERAL:
                {
                alt378=2;
                }
                break;
            case REAL_LITERAL:
                {
                alt378=3;
                }
                break;
            case CHARACTER_LITERAL:
                {
                alt378=4;
                }
                break;
            case STRING_LITERAL:
                {
                alt378=5;
                }
                break;
            case NULL:
                {
                alt378=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 378, 0, input);

                throw nvae;

            }

            switch (alt378) {
                case 1 :
                    // CSharp4.g:2349:5: boolean_literal
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_boolean_literal_in_literal10255);
                    boolean_literal1576=boolean_literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_literal1576.getTree());

                    }
                    break;
                case 2 :
                    // CSharp4.g:2350:5: INTEGER_LITERAL
                    {
                    root_0 = (Object)adaptor.nil();


                    INTEGER_LITERAL1577=(Token)match(input,INTEGER_LITERAL,FOLLOW_INTEGER_LITERAL_in_literal10261); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INTEGER_LITERAL1577_tree = 
                    (Object)adaptor.create(INTEGER_LITERAL1577)
                    ;
                    adaptor.addChild(root_0, INTEGER_LITERAL1577_tree);
                    }

                    }
                    break;
                case 3 :
                    // CSharp4.g:2351:5: REAL_LITERAL
                    {
                    root_0 = (Object)adaptor.nil();


                    REAL_LITERAL1578=(Token)match(input,REAL_LITERAL,FOLLOW_REAL_LITERAL_in_literal10267); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    REAL_LITERAL1578_tree = 
                    (Object)adaptor.create(REAL_LITERAL1578)
                    ;
                    adaptor.addChild(root_0, REAL_LITERAL1578_tree);
                    }

                    }
                    break;
                case 4 :
                    // CSharp4.g:2352:5: CHARACTER_LITERAL
                    {
                    root_0 = (Object)adaptor.nil();


                    CHARACTER_LITERAL1579=(Token)match(input,CHARACTER_LITERAL,FOLLOW_CHARACTER_LITERAL_in_literal10273); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CHARACTER_LITERAL1579_tree = 
                    (Object)adaptor.create(CHARACTER_LITERAL1579)
                    ;
                    adaptor.addChild(root_0, CHARACTER_LITERAL1579_tree);
                    }

                    }
                    break;
                case 5 :
                    // CSharp4.g:2353:5: STRING_LITERAL
                    {
                    root_0 = (Object)adaptor.nil();


                    STRING_LITERAL1580=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_literal10279); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STRING_LITERAL1580_tree = 
                    (Object)adaptor.create(STRING_LITERAL1580)
                    ;
                    adaptor.addChild(root_0, STRING_LITERAL1580_tree);
                    }

                    }
                    break;
                case 6 :
                    // CSharp4.g:2354:5: NULL
                    {
                    root_0 = (Object)adaptor.nil();


                    NULL1581=(Token)match(input,NULL,FOLLOW_NULL_in_literal10285); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NULL1581_tree = 
                    (Object)adaptor.create(NULL1581)
                    ;
                    adaptor.addChild(root_0, NULL1581_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "literal"


    public static class boolean_literal_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "boolean_literal"
    // CSharp4.g:2356:1: boolean_literal : ( TRUE | FALSE );
    public final CSharp4.boolean_literal_return boolean_literal() throws RecognitionException {
        CSharp4.boolean_literal_return retval = new CSharp4.boolean_literal_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set1582=null;

        Object set1582_tree=null;

        try {
            // CSharp4.g:2357:3: ( TRUE | FALSE )
            // CSharp4.g:
            {
            root_0 = (Object)adaptor.nil();


            set1582=(Token)input.LT(1);

            if ( input.LA(1)==FALSE||input.LA(1)==TRUE ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set1582)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "boolean_literal"


    public static class keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "keyword"
    // CSharp4.g:2361:1: keyword : ( ABSTRACT | AS | BASE | BOOL | BREAK | BYTE | CASE | CATCH | CHAR | CHECKED | CLASS | CONST | CONTINUE | DECIMAL | DEFAULT | DELEGATE | DO | DOUBLE | ELSE | ENUM | EVENT | EXPLICIT | EXTERN | FALSE | FINALLY | FIXED | FLOAT | FOR | FOREACH | GOTO | IF | IMPLICIT | IN | INT | INTERFACE | INTERNAL | IS | LOCK | LONG | NAMESPACE | NEW | NULL | OBJECT | OPERATOR | OUT | OVERRIDE | PARAMS | PRIVATE | PROTECTED | PUBLIC | READONLY | REF | RETURN | SBYTE | SEALED | SHORT | SIZEOF | STACKALLOC | STATIC | STRING | STRUCT | SWITCH | THIS | THROW | TRUE | TRY | TYPEOF | UINT | ULONG | UNCHECKED | UNSAFE | USHORT | USING | VIRTUAL | VOID | VOLATILE | WHILE );
    public final CSharp4.keyword_return keyword() throws RecognitionException {
        CSharp4.keyword_return retval = new CSharp4.keyword_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set1583=null;

        Object set1583_tree=null;

        try {
            // CSharp4.g:2362:3: ( ABSTRACT | AS | BASE | BOOL | BREAK | BYTE | CASE | CATCH | CHAR | CHECKED | CLASS | CONST | CONTINUE | DECIMAL | DEFAULT | DELEGATE | DO | DOUBLE | ELSE | ENUM | EVENT | EXPLICIT | EXTERN | FALSE | FINALLY | FIXED | FLOAT | FOR | FOREACH | GOTO | IF | IMPLICIT | IN | INT | INTERFACE | INTERNAL | IS | LOCK | LONG | NAMESPACE | NEW | NULL | OBJECT | OPERATOR | OUT | OVERRIDE | PARAMS | PRIVATE | PROTECTED | PUBLIC | READONLY | REF | RETURN | SBYTE | SEALED | SHORT | SIZEOF | STACKALLOC | STATIC | STRING | STRUCT | SWITCH | THIS | THROW | TRUE | TRY | TYPEOF | UINT | ULONG | UNCHECKED | UNSAFE | USHORT | USING | VIRTUAL | VOID | VOLATILE | WHILE )
            // CSharp4.g:
            {
            root_0 = (Object)adaptor.nil();


            set1583=(Token)input.LT(1);

            if ( input.LA(1)==ABSTRACT||input.LA(1)==AS||input.LA(1)==BASE||(input.LA(1) >= BOOL && input.LA(1) <= BYTE)||(input.LA(1) >= CASE && input.LA(1) <= CHAR)||(input.LA(1) >= CHECKED && input.LA(1) <= CLASS)||(input.LA(1) >= CONST && input.LA(1) <= CONTINUE)||input.LA(1)==DECIMAL||(input.LA(1) >= DEFAULT && input.LA(1) <= DELEGATE)||input.LA(1)==DO||input.LA(1)==DOUBLE||(input.LA(1) >= ELSE && input.LA(1) <= EXTERN)||(input.LA(1) >= FALSE && input.LA(1) <= FOREACH)||input.LA(1)==GOTO||(input.LA(1) >= IF && input.LA(1) <= INT)||(input.LA(1) >= INTERFACE && input.LA(1) <= INTERNAL)||input.LA(1)==IS||(input.LA(1) >= LOCK && input.LA(1) <= LONG)||(input.LA(1) >= NAMESPACE && input.LA(1) <= NEW)||input.LA(1)==NULL||input.LA(1)==OBJECT||input.LA(1)==OPERATOR||(input.LA(1) >= OUT && input.LA(1) <= PARAMS)||(input.LA(1) >= PRIVATE && input.LA(1) <= PUBLIC)||input.LA(1)==READONLY||(input.LA(1) >= REF && input.LA(1) <= RETURN)||(input.LA(1) >= SBYTE && input.LA(1) <= SEALED)||input.LA(1)==SHORT||(input.LA(1) >= SIZEOF && input.LA(1) <= STACKALLOC)||(input.LA(1) >= STATIC && input.LA(1) <= STRING)||(input.LA(1) >= STRUCT && input.LA(1) <= SWITCH)||(input.LA(1) >= THIS && input.LA(1) <= THROW)||(input.LA(1) >= TRUE && input.LA(1) <= UNCHECKED)||(input.LA(1) >= UNSAFE && input.LA(1) <= USING)||(input.LA(1) >= VIRTUAL && input.LA(1) <= VOLATILE)||input.LA(1)==WHILE ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set1583)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "keyword"


    public static class class_definition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_definition"
    // CSharp4.g:2443:1: class_definition : CLASS IDENTIFIER ( type_parameter_list )? ( class_base )? ( type_parameter_constraints_clauses )? class_body ( SEMICOLON )? ;
    public final CSharp4.class_definition_return class_definition() throws RecognitionException {
        CSharp4.class_definition_return retval = new CSharp4.class_definition_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token CLASS1584=null;
        Token IDENTIFIER1585=null;
        Token SEMICOLON1590=null;
        CSharp4.type_parameter_list_return type_parameter_list1586 =null;

        CSharp4.class_base_return class_base1587 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses1588 =null;

        CSharp4.class_body_return class_body1589 =null;


        Object CLASS1584_tree=null;
        Object IDENTIFIER1585_tree=null;
        Object SEMICOLON1590_tree=null;

        try {
            // CSharp4.g:2444:3: ( CLASS IDENTIFIER ( type_parameter_list )? ( class_base )? ( type_parameter_constraints_clauses )? class_body ( SEMICOLON )? )
            // CSharp4.g:2444:5: CLASS IDENTIFIER ( type_parameter_list )? ( class_base )? ( type_parameter_constraints_clauses )? class_body ( SEMICOLON )?
            {
            root_0 = (Object)adaptor.nil();


            CLASS1584=(Token)match(input,CLASS,FOLLOW_CLASS_in_class_definition10787); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLASS1584_tree = 
            (Object)adaptor.create(CLASS1584)
            ;
            adaptor.addChild(root_0, CLASS1584_tree);
            }

            IDENTIFIER1585=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_class_definition10789); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1585_tree = 
            (Object)adaptor.create(IDENTIFIER1585)
            ;
            adaptor.addChild(root_0, IDENTIFIER1585_tree);
            }

            // CSharp4.g:2444:22: ( type_parameter_list )?
            int alt379=2;
            int LA379_0 = input.LA(1);

            if ( (LA379_0==LT) ) {
                alt379=1;
            }
            switch (alt379) {
                case 1 :
                    // CSharp4.g:2444:22: type_parameter_list
                    {
                    pushFollow(FOLLOW_type_parameter_list_in_class_definition10791);
                    type_parameter_list1586=type_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_list1586.getTree());

                    }
                    break;

            }


            // CSharp4.g:2444:43: ( class_base )?
            int alt380=2;
            int LA380_0 = input.LA(1);

            if ( (LA380_0==COLON) ) {
                alt380=1;
            }
            switch (alt380) {
                case 1 :
                    // CSharp4.g:2444:43: class_base
                    {
                    pushFollow(FOLLOW_class_base_in_class_definition10794);
                    class_base1587=class_base();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_base1587.getTree());

                    }
                    break;

            }


            // CSharp4.g:2444:55: ( type_parameter_constraints_clauses )?
            int alt381=2;
            int LA381_0 = input.LA(1);

            if ( (LA381_0==IDENTIFIER) ) {
                alt381=1;
            }
            switch (alt381) {
                case 1 :
                    // CSharp4.g:2444:55: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_class_definition10797);
                    type_parameter_constraints_clauses1588=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses1588.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_class_body_in_class_definition10806);
            class_body1589=class_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, class_body1589.getTree());

            // CSharp4.g:2445:18: ( SEMICOLON )?
            int alt382=2;
            int LA382_0 = input.LA(1);

            if ( (LA382_0==SEMICOLON) ) {
                alt382=1;
            }
            switch (alt382) {
                case 1 :
                    // CSharp4.g:2445:18: SEMICOLON
                    {
                    SEMICOLON1590=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_class_definition10808); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1590_tree = 
                    (Object)adaptor.create(SEMICOLON1590)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1590_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_definition"


    public static class struct_definition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_definition"
    // CSharp4.g:2447:1: struct_definition : STRUCT IDENTIFIER ( type_parameter_list )? ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( SEMICOLON )? ;
    public final CSharp4.struct_definition_return struct_definition() throws RecognitionException {
        CSharp4.struct_definition_return retval = new CSharp4.struct_definition_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token STRUCT1591=null;
        Token IDENTIFIER1592=null;
        Token SEMICOLON1597=null;
        CSharp4.type_parameter_list_return type_parameter_list1593 =null;

        CSharp4.struct_interfaces_return struct_interfaces1594 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses1595 =null;

        CSharp4.struct_body_return struct_body1596 =null;


        Object STRUCT1591_tree=null;
        Object IDENTIFIER1592_tree=null;
        Object SEMICOLON1597_tree=null;

        try {
            // CSharp4.g:2448:3: ( STRUCT IDENTIFIER ( type_parameter_list )? ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( SEMICOLON )? )
            // CSharp4.g:2448:5: STRUCT IDENTIFIER ( type_parameter_list )? ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( SEMICOLON )?
            {
            root_0 = (Object)adaptor.nil();


            STRUCT1591=(Token)match(input,STRUCT,FOLLOW_STRUCT_in_struct_definition10821); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            STRUCT1591_tree = 
            (Object)adaptor.create(STRUCT1591)
            ;
            adaptor.addChild(root_0, STRUCT1591_tree);
            }

            IDENTIFIER1592=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_struct_definition10823); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1592_tree = 
            (Object)adaptor.create(IDENTIFIER1592)
            ;
            adaptor.addChild(root_0, IDENTIFIER1592_tree);
            }

            // CSharp4.g:2448:23: ( type_parameter_list )?
            int alt383=2;
            int LA383_0 = input.LA(1);

            if ( (LA383_0==LT) ) {
                alt383=1;
            }
            switch (alt383) {
                case 1 :
                    // CSharp4.g:2448:23: type_parameter_list
                    {
                    pushFollow(FOLLOW_type_parameter_list_in_struct_definition10825);
                    type_parameter_list1593=type_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_list1593.getTree());

                    }
                    break;

            }


            // CSharp4.g:2448:44: ( struct_interfaces )?
            int alt384=2;
            int LA384_0 = input.LA(1);

            if ( (LA384_0==COLON) ) {
                alt384=1;
            }
            switch (alt384) {
                case 1 :
                    // CSharp4.g:2448:44: struct_interfaces
                    {
                    pushFollow(FOLLOW_struct_interfaces_in_struct_definition10828);
                    struct_interfaces1594=struct_interfaces();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_interfaces1594.getTree());

                    }
                    break;

            }


            // CSharp4.g:2448:63: ( type_parameter_constraints_clauses )?
            int alt385=2;
            int LA385_0 = input.LA(1);

            if ( (LA385_0==IDENTIFIER) ) {
                alt385=1;
            }
            switch (alt385) {
                case 1 :
                    // CSharp4.g:2448:63: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_struct_definition10831);
                    type_parameter_constraints_clauses1595=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses1595.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_struct_body_in_struct_definition10840);
            struct_body1596=struct_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_body1596.getTree());

            // CSharp4.g:2449:19: ( SEMICOLON )?
            int alt386=2;
            int LA386_0 = input.LA(1);

            if ( (LA386_0==SEMICOLON) ) {
                alt386=1;
            }
            switch (alt386) {
                case 1 :
                    // CSharp4.g:2449:19: SEMICOLON
                    {
                    SEMICOLON1597=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_struct_definition10842); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1597_tree = 
                    (Object)adaptor.create(SEMICOLON1597)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1597_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_definition"


    public static class interface_definition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_definition"
    // CSharp4.g:2451:1: interface_definition : INTERFACE IDENTIFIER ( variant_type_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( SEMICOLON )? ;
    public final CSharp4.interface_definition_return interface_definition() throws RecognitionException {
        CSharp4.interface_definition_return retval = new CSharp4.interface_definition_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token INTERFACE1598=null;
        Token IDENTIFIER1599=null;
        Token SEMICOLON1604=null;
        CSharp4.variant_type_parameter_list_return variant_type_parameter_list1600 =null;

        CSharp4.interface_base_return interface_base1601 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses1602 =null;

        CSharp4.interface_body_return interface_body1603 =null;


        Object INTERFACE1598_tree=null;
        Object IDENTIFIER1599_tree=null;
        Object SEMICOLON1604_tree=null;

        try {
            // CSharp4.g:2452:3: ( INTERFACE IDENTIFIER ( variant_type_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( SEMICOLON )? )
            // CSharp4.g:2452:5: INTERFACE IDENTIFIER ( variant_type_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( SEMICOLON )?
            {
            root_0 = (Object)adaptor.nil();


            INTERFACE1598=(Token)match(input,INTERFACE,FOLLOW_INTERFACE_in_interface_definition10855); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            INTERFACE1598_tree = 
            (Object)adaptor.create(INTERFACE1598)
            ;
            adaptor.addChild(root_0, INTERFACE1598_tree);
            }

            IDENTIFIER1599=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_interface_definition10857); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1599_tree = 
            (Object)adaptor.create(IDENTIFIER1599)
            ;
            adaptor.addChild(root_0, IDENTIFIER1599_tree);
            }

            // CSharp4.g:2452:26: ( variant_type_parameter_list )?
            int alt387=2;
            int LA387_0 = input.LA(1);

            if ( (LA387_0==LT) ) {
                alt387=1;
            }
            switch (alt387) {
                case 1 :
                    // CSharp4.g:2452:26: variant_type_parameter_list
                    {
                    pushFollow(FOLLOW_variant_type_parameter_list_in_interface_definition10859);
                    variant_type_parameter_list1600=variant_type_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_parameter_list1600.getTree());

                    }
                    break;

            }


            // CSharp4.g:2452:55: ( interface_base )?
            int alt388=2;
            int LA388_0 = input.LA(1);

            if ( (LA388_0==COLON) ) {
                alt388=1;
            }
            switch (alt388) {
                case 1 :
                    // CSharp4.g:2452:55: interface_base
                    {
                    pushFollow(FOLLOW_interface_base_in_interface_definition10862);
                    interface_base1601=interface_base();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_base1601.getTree());

                    }
                    break;

            }


            // CSharp4.g:2453:7: ( type_parameter_constraints_clauses )?
            int alt389=2;
            int LA389_0 = input.LA(1);

            if ( (LA389_0==IDENTIFIER) ) {
                alt389=1;
            }
            switch (alt389) {
                case 1 :
                    // CSharp4.g:2453:7: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_definition10871);
                    type_parameter_constraints_clauses1602=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses1602.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_interface_body_in_interface_definition10874);
            interface_body1603=interface_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_body1603.getTree());

            // CSharp4.g:2453:58: ( SEMICOLON )?
            int alt390=2;
            int LA390_0 = input.LA(1);

            if ( (LA390_0==SEMICOLON) ) {
                alt390=1;
            }
            switch (alt390) {
                case 1 :
                    // CSharp4.g:2453:58: SEMICOLON
                    {
                    SEMICOLON1604=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interface_definition10876); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1604_tree = 
                    (Object)adaptor.create(SEMICOLON1604)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1604_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_definition"


    public static class enum_definition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "enum_definition"
    // CSharp4.g:2455:1: enum_definition : ENUM IDENTIFIER ( enum_base )? enum_body ( SEMICOLON )? ;
    public final CSharp4.enum_definition_return enum_definition() throws RecognitionException {
        CSharp4.enum_definition_return retval = new CSharp4.enum_definition_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token ENUM1605=null;
        Token IDENTIFIER1606=null;
        Token SEMICOLON1609=null;
        CSharp4.enum_base_return enum_base1607 =null;

        CSharp4.enum_body_return enum_body1608 =null;


        Object ENUM1605_tree=null;
        Object IDENTIFIER1606_tree=null;
        Object SEMICOLON1609_tree=null;

        try {
            // CSharp4.g:2456:3: ( ENUM IDENTIFIER ( enum_base )? enum_body ( SEMICOLON )? )
            // CSharp4.g:2456:5: ENUM IDENTIFIER ( enum_base )? enum_body ( SEMICOLON )?
            {
            root_0 = (Object)adaptor.nil();


            ENUM1605=(Token)match(input,ENUM,FOLLOW_ENUM_in_enum_definition10889); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ENUM1605_tree = 
            (Object)adaptor.create(ENUM1605)
            ;
            adaptor.addChild(root_0, ENUM1605_tree);
            }

            IDENTIFIER1606=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_enum_definition10891); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1606_tree = 
            (Object)adaptor.create(IDENTIFIER1606)
            ;
            adaptor.addChild(root_0, IDENTIFIER1606_tree);
            }

            // CSharp4.g:2456:21: ( enum_base )?
            int alt391=2;
            int LA391_0 = input.LA(1);

            if ( (LA391_0==COLON) ) {
                alt391=1;
            }
            switch (alt391) {
                case 1 :
                    // CSharp4.g:2456:21: enum_base
                    {
                    pushFollow(FOLLOW_enum_base_in_enum_definition10893);
                    enum_base1607=enum_base();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_base1607.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_enum_body_in_enum_definition10896);
            enum_body1608=enum_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_body1608.getTree());

            // CSharp4.g:2456:42: ( SEMICOLON )?
            int alt392=2;
            int LA392_0 = input.LA(1);

            if ( (LA392_0==SEMICOLON) ) {
                alt392=1;
            }
            switch (alt392) {
                case 1 :
                    // CSharp4.g:2456:42: SEMICOLON
                    {
                    SEMICOLON1609=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_enum_definition10898); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON1609_tree = 
                    (Object)adaptor.create(SEMICOLON1609)
                    ;
                    adaptor.addChild(root_0, SEMICOLON1609_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "enum_definition"


    public static class delegate_definition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "delegate_definition"
    // CSharp4.g:2458:1: delegate_definition : DELEGATE return_type IDENTIFIER ( variant_type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON ;
    public final CSharp4.delegate_definition_return delegate_definition() throws RecognitionException {
        CSharp4.delegate_definition_return retval = new CSharp4.delegate_definition_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token DELEGATE1610=null;
        Token IDENTIFIER1612=null;
        Token OPEN_PARENS1614=null;
        Token CLOSE_PARENS1616=null;
        Token SEMICOLON1618=null;
        CSharp4.return_type_return return_type1611 =null;

        CSharp4.variant_type_parameter_list_return variant_type_parameter_list1613 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list1615 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses1617 =null;


        Object DELEGATE1610_tree=null;
        Object IDENTIFIER1612_tree=null;
        Object OPEN_PARENS1614_tree=null;
        Object CLOSE_PARENS1616_tree=null;
        Object SEMICOLON1618_tree=null;

        try {
            // CSharp4.g:2459:3: ( DELEGATE return_type IDENTIFIER ( variant_type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON )
            // CSharp4.g:2459:5: DELEGATE return_type IDENTIFIER ( variant_type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            DELEGATE1610=(Token)match(input,DELEGATE,FOLLOW_DELEGATE_in_delegate_definition10911); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            DELEGATE1610_tree = 
            (Object)adaptor.create(DELEGATE1610)
            ;
            adaptor.addChild(root_0, DELEGATE1610_tree);
            }

            pushFollow(FOLLOW_return_type_in_delegate_definition10913);
            return_type1611=return_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, return_type1611.getTree());

            IDENTIFIER1612=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_delegate_definition10915); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1612_tree = 
            (Object)adaptor.create(IDENTIFIER1612)
            ;
            adaptor.addChild(root_0, IDENTIFIER1612_tree);
            }

            // CSharp4.g:2459:37: ( variant_type_parameter_list )?
            int alt393=2;
            int LA393_0 = input.LA(1);

            if ( (LA393_0==LT) ) {
                alt393=1;
            }
            switch (alt393) {
                case 1 :
                    // CSharp4.g:2459:37: variant_type_parameter_list
                    {
                    pushFollow(FOLLOW_variant_type_parameter_list_in_delegate_definition10917);
                    variant_type_parameter_list1613=variant_type_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_parameter_list1613.getTree());

                    }
                    break;

            }


            OPEN_PARENS1614=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_delegate_definition10920); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1614_tree = 
            (Object)adaptor.create(OPEN_PARENS1614)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1614_tree);
            }

            // CSharp4.g:2460:7: ( formal_parameter_list )?
            int alt394=2;
            int LA394_0 = input.LA(1);

            if ( (LA394_0==BOOL||LA394_0==BYTE||LA394_0==CHAR||LA394_0==DECIMAL||LA394_0==DOUBLE||LA394_0==FLOAT||LA394_0==IDENTIFIER||LA394_0==INT||LA394_0==LONG||LA394_0==OBJECT||LA394_0==OPEN_BRACKET||LA394_0==OUT||LA394_0==PARAMS||LA394_0==REF||LA394_0==SBYTE||LA394_0==SHORT||LA394_0==STRING||LA394_0==THIS||(LA394_0 >= UINT && LA394_0 <= ULONG)||LA394_0==USHORT||LA394_0==VOID) ) {
                alt394=1;
            }
            switch (alt394) {
                case 1 :
                    // CSharp4.g:2460:7: formal_parameter_list
                    {
                    pushFollow(FOLLOW_formal_parameter_list_in_delegate_definition10928);
                    formal_parameter_list1615=formal_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list1615.getTree());

                    }
                    break;

            }


            CLOSE_PARENS1616=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_delegate_definition10931); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1616_tree = 
            (Object)adaptor.create(CLOSE_PARENS1616)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1616_tree);
            }

            // CSharp4.g:2460:43: ( type_parameter_constraints_clauses )?
            int alt395=2;
            int LA395_0 = input.LA(1);

            if ( (LA395_0==IDENTIFIER) ) {
                alt395=1;
            }
            switch (alt395) {
                case 1 :
                    // CSharp4.g:2460:43: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_delegate_definition10933);
                    type_parameter_constraints_clauses1617=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses1617.getTree());

                    }
                    break;

            }


            SEMICOLON1618=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_delegate_definition10936); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON1618_tree = 
            (Object)adaptor.create(SEMICOLON1618)
            ;
            adaptor.addChild(root_0, SEMICOLON1618_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "delegate_definition"


    public static class method_definition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_definition"
    // CSharp4.g:2462:1: method_definition : method_member_name ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? method_body ;
    public CSharp4.method_definition_return method_definition() throws RecognitionException {
        CSharp4.method_definition_return retval = new CSharp4.method_definition_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_PARENS1621=null;
        Token CLOSE_PARENS1623=null;
        CSharp4.method_member_name_return method_member_name1619 =null;

        CSharp4.type_parameter_list_return type_parameter_list1620 =null;

        CSharp4.formal_parameter_list_return formal_parameter_list1622 =null;

        CSharp4.type_parameter_constraints_clauses_return type_parameter_constraints_clauses1624 =null;

        CSharp4.method_body_return method_body1625 =null;


        Object OPEN_PARENS1621_tree=null;
        Object CLOSE_PARENS1623_tree=null;

        try {
            // CSharp4.g:2463:3: ( method_member_name ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? method_body )
            // CSharp4.g:2463:5: method_member_name ( type_parameter_list )? OPEN_PARENS ( formal_parameter_list )? CLOSE_PARENS ( type_parameter_constraints_clauses )? method_body
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_method_member_name_in_method_definition10948);
            method_member_name1619=method_member_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_member_name1619.getTree());

            // CSharp4.g:2463:24: ( type_parameter_list )?
            int alt396=2;
            int LA396_0 = input.LA(1);

            if ( (LA396_0==LT) ) {
                alt396=1;
            }
            switch (alt396) {
                case 1 :
                    // CSharp4.g:2463:24: type_parameter_list
                    {
                    pushFollow(FOLLOW_type_parameter_list_in_method_definition10950);
                    type_parameter_list1620=type_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_list1620.getTree());

                    }
                    break;

            }


            OPEN_PARENS1621=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_method_definition10953); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1621_tree = 
            (Object)adaptor.create(OPEN_PARENS1621)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1621_tree);
            }

            // CSharp4.g:2463:57: ( formal_parameter_list )?
            int alt397=2;
            int LA397_0 = input.LA(1);

            if ( (LA397_0==BOOL||LA397_0==BYTE||LA397_0==CHAR||LA397_0==DECIMAL||LA397_0==DOUBLE||LA397_0==FLOAT||LA397_0==IDENTIFIER||LA397_0==INT||LA397_0==LONG||LA397_0==OBJECT||LA397_0==OPEN_BRACKET||LA397_0==OUT||LA397_0==PARAMS||LA397_0==REF||LA397_0==SBYTE||LA397_0==SHORT||LA397_0==STRING||LA397_0==THIS||(LA397_0 >= UINT && LA397_0 <= ULONG)||LA397_0==USHORT||LA397_0==VOID) ) {
                alt397=1;
            }
            switch (alt397) {
                case 1 :
                    // CSharp4.g:2463:57: formal_parameter_list
                    {
                    pushFollow(FOLLOW_formal_parameter_list_in_method_definition10955);
                    formal_parameter_list1622=formal_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list1622.getTree());

                    }
                    break;

            }


            CLOSE_PARENS1623=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_method_definition10958); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1623_tree = 
            (Object)adaptor.create(CLOSE_PARENS1623)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1623_tree);
            }

            // CSharp4.g:2464:7: ( type_parameter_constraints_clauses )?
            int alt398=2;
            int LA398_0 = input.LA(1);

            if ( (LA398_0==IDENTIFIER) ) {
                alt398=1;
            }
            switch (alt398) {
                case 1 :
                    // CSharp4.g:2464:7: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_method_definition10967);
                    type_parameter_constraints_clauses1624=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses1624.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_method_body_in_method_definition10970);
            method_body1625=method_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_body1625.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_definition"


    public static class method_member_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_member_name"
    // CSharp4.g:2467:1: method_member_name : ( IDENTIFIER | IDENTIFIER DOUBLE_COLON IDENTIFIER ) ( type_argument_list_opt DOT IDENTIFIER )* ;
    public final CSharp4.method_member_name_return method_member_name() throws RecognitionException {
        CSharp4.method_member_name_return retval = new CSharp4.method_member_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER1626=null;
        Token IDENTIFIER1627=null;
        Token DOUBLE_COLON1628=null;
        Token IDENTIFIER1629=null;
        Token DOT1631=null;
        Token IDENTIFIER1632=null;
        CSharp4.type_argument_list_opt_return type_argument_list_opt1630 =null;


        Object IDENTIFIER1626_tree=null;
        Object IDENTIFIER1627_tree=null;
        Object DOUBLE_COLON1628_tree=null;
        Object IDENTIFIER1629_tree=null;
        Object DOT1631_tree=null;
        Object IDENTIFIER1632_tree=null;

        try {
            // CSharp4.g:2468:3: ( ( IDENTIFIER | IDENTIFIER DOUBLE_COLON IDENTIFIER ) ( type_argument_list_opt DOT IDENTIFIER )* )
            // CSharp4.g:2468:5: ( IDENTIFIER | IDENTIFIER DOUBLE_COLON IDENTIFIER ) ( type_argument_list_opt DOT IDENTIFIER )*
            {
            root_0 = (Object)adaptor.nil();


            // CSharp4.g:2468:5: ( IDENTIFIER | IDENTIFIER DOUBLE_COLON IDENTIFIER )
            int alt399=2;
            int LA399_0 = input.LA(1);

            if ( (LA399_0==IDENTIFIER) ) {
                int LA399_1 = input.LA(2);

                if ( (LA399_1==DOUBLE_COLON) ) {
                    alt399=2;
                }
                else if ( (LA399_1==DOT||LA399_1==LT||LA399_1==OPEN_PARENS) ) {
                    alt399=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 399, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 399, 0, input);

                throw nvae;

            }
            switch (alt399) {
                case 1 :
                    // CSharp4.g:2468:7: IDENTIFIER
                    {
                    IDENTIFIER1626=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_method_member_name10985); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER1626_tree = 
                    (Object)adaptor.create(IDENTIFIER1626)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER1626_tree);
                    }

                    }
                    break;
                case 2 :
                    // CSharp4.g:2469:7: IDENTIFIER DOUBLE_COLON IDENTIFIER
                    {
                    IDENTIFIER1627=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_method_member_name10993); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER1627_tree = 
                    (Object)adaptor.create(IDENTIFIER1627)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER1627_tree);
                    }

                    DOUBLE_COLON1628=(Token)match(input,DOUBLE_COLON,FOLLOW_DOUBLE_COLON_in_method_member_name10995); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DOUBLE_COLON1628_tree = 
                    (Object)adaptor.create(DOUBLE_COLON1628)
                    ;
                    adaptor.addChild(root_0, DOUBLE_COLON1628_tree);
                    }

                    IDENTIFIER1629=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_method_member_name10997); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER1629_tree = 
                    (Object)adaptor.create(IDENTIFIER1629)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER1629_tree);
                    }

                    }
                    break;

            }


            // CSharp4.g:2470:7: ( type_argument_list_opt DOT IDENTIFIER )*
            loop400:
            do {
                int alt400=2;
                alt400 = dfa400.predict(input);
                switch (alt400) {
            	case 1 :
            	    // CSharp4.g:2470:8: type_argument_list_opt DOT IDENTIFIER
            	    {
            	    pushFollow(FOLLOW_type_argument_list_opt_in_method_member_name11006);
            	    type_argument_list_opt1630=type_argument_list_opt();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_argument_list_opt1630.getTree());

            	    DOT1631=(Token)match(input,DOT,FOLLOW_DOT_in_method_member_name11008); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    DOT1631_tree = 
            	    (Object)adaptor.create(DOT1631)
            	    ;
            	    adaptor.addChild(root_0, DOT1631_tree);
            	    }

            	    IDENTIFIER1632=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_method_member_name11010); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    IDENTIFIER1632_tree = 
            	    (Object)adaptor.create(IDENTIFIER1632)
            	    ;
            	    adaptor.addChild(root_0, IDENTIFIER1632_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop400;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_member_name"


    public static class field_declaration2_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "field_declaration2"
    // CSharp4.g:2473:1: field_declaration2 : variable_declarators SEMICOLON ;
    public final CSharp4.field_declaration2_return field_declaration2() throws RecognitionException {
        CSharp4.field_declaration2_return retval = new CSharp4.field_declaration2_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token SEMICOLON1634=null;
        CSharp4.variable_declarators_return variable_declarators1633 =null;


        Object SEMICOLON1634_tree=null;

        try {
            // CSharp4.g:2474:3: ( variable_declarators SEMICOLON )
            // CSharp4.g:2474:5: variable_declarators SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_variable_declarators_in_field_declaration211025);
            variable_declarators1633=variable_declarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarators1633.getTree());

            SEMICOLON1634=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_field_declaration211027); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON1634_tree = 
            (Object)adaptor.create(SEMICOLON1634)
            ;
            adaptor.addChild(root_0, SEMICOLON1634_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "field_declaration2"


    public static class property_declaration2_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "property_declaration2"
    // CSharp4.g:2476:1: property_declaration2 : member_name OPEN_BRACE accessor_declarations CLOSE_BRACE ;
    public final CSharp4.property_declaration2_return property_declaration2() throws RecognitionException {
        CSharp4.property_declaration2_return retval = new CSharp4.property_declaration2_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_BRACE1636=null;
        Token CLOSE_BRACE1638=null;
        CSharp4.member_name_return member_name1635 =null;

        CSharp4.accessor_declarations_return accessor_declarations1637 =null;


        Object OPEN_BRACE1636_tree=null;
        Object CLOSE_BRACE1638_tree=null;

        try {
            // CSharp4.g:2477:3: ( member_name OPEN_BRACE accessor_declarations CLOSE_BRACE )
            // CSharp4.g:2477:5: member_name OPEN_BRACE accessor_declarations CLOSE_BRACE
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_member_name_in_property_declaration211039);
            member_name1635=member_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name1635.getTree());

            OPEN_BRACE1636=(Token)match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_property_declaration211041); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_BRACE1636_tree = 
            (Object)adaptor.create(OPEN_BRACE1636)
            ;
            adaptor.addChild(root_0, OPEN_BRACE1636_tree);
            }

            pushFollow(FOLLOW_accessor_declarations_in_property_declaration211043);
            accessor_declarations1637=accessor_declarations();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_declarations1637.getTree());

            CLOSE_BRACE1638=(Token)match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_property_declaration211045); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_BRACE1638_tree = 
            (Object)adaptor.create(CLOSE_BRACE1638)
            ;
            adaptor.addChild(root_0, CLOSE_BRACE1638_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "property_declaration2"


    public static class constant_declaration2_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constant_declaration2"
    // CSharp4.g:2479:1: constant_declaration2 : CONST type constant_declarators SEMICOLON ;
    public final CSharp4.constant_declaration2_return constant_declaration2() throws RecognitionException {
        CSharp4.constant_declaration2_return retval = new CSharp4.constant_declaration2_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token CONST1639=null;
        Token SEMICOLON1642=null;
        CSharp4.type_return type1640 =null;

        CSharp4.constant_declarators_return constant_declarators1641 =null;


        Object CONST1639_tree=null;
        Object SEMICOLON1642_tree=null;

        try {
            // CSharp4.g:2480:3: ( CONST type constant_declarators SEMICOLON )
            // CSharp4.g:2480:5: CONST type constant_declarators SEMICOLON
            {
            root_0 = (Object)adaptor.nil();


            CONST1639=(Token)match(input,CONST,FOLLOW_CONST_in_constant_declaration211057); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CONST1639_tree = 
            (Object)adaptor.create(CONST1639)
            ;
            adaptor.addChild(root_0, CONST1639_tree);
            }

            pushFollow(FOLLOW_type_in_constant_declaration211059);
            type1640=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1640.getTree());

            pushFollow(FOLLOW_constant_declarators_in_constant_declaration211061);
            constant_declarators1641=constant_declarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators1641.getTree());

            SEMICOLON1642=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_constant_declaration211063); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON1642_tree = 
            (Object)adaptor.create(SEMICOLON1642)
            ;
            adaptor.addChild(root_0, SEMICOLON1642_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constant_declaration2"


    public static class operator_declaration2_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "operator_declaration2"
    // CSharp4.g:2483:1: operator_declaration2 : OPERATOR overloadable_operator OPEN_PARENS type IDENTIFIER ( COMMA type IDENTIFIER )? CLOSE_PARENS operator_body ;
    public final CSharp4.operator_declaration2_return operator_declaration2() throws RecognitionException {
        CSharp4.operator_declaration2_return retval = new CSharp4.operator_declaration2_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPERATOR1643=null;
        Token OPEN_PARENS1645=null;
        Token IDENTIFIER1647=null;
        Token COMMA1648=null;
        Token IDENTIFIER1650=null;
        Token CLOSE_PARENS1651=null;
        CSharp4.overloadable_operator_return overloadable_operator1644 =null;

        CSharp4.type_return type1646 =null;

        CSharp4.type_return type1649 =null;

        CSharp4.operator_body_return operator_body1652 =null;


        Object OPERATOR1643_tree=null;
        Object OPEN_PARENS1645_tree=null;
        Object IDENTIFIER1647_tree=null;
        Object COMMA1648_tree=null;
        Object IDENTIFIER1650_tree=null;
        Object CLOSE_PARENS1651_tree=null;

        try {
            // CSharp4.g:2484:3: ( OPERATOR overloadable_operator OPEN_PARENS type IDENTIFIER ( COMMA type IDENTIFIER )? CLOSE_PARENS operator_body )
            // CSharp4.g:2484:5: OPERATOR overloadable_operator OPEN_PARENS type IDENTIFIER ( COMMA type IDENTIFIER )? CLOSE_PARENS operator_body
            {
            root_0 = (Object)adaptor.nil();


            OPERATOR1643=(Token)match(input,OPERATOR,FOLLOW_OPERATOR_in_operator_declaration211076); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPERATOR1643_tree = 
            (Object)adaptor.create(OPERATOR1643)
            ;
            adaptor.addChild(root_0, OPERATOR1643_tree);
            }

            pushFollow(FOLLOW_overloadable_operator_in_operator_declaration211078);
            overloadable_operator1644=overloadable_operator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, overloadable_operator1644.getTree());

            OPEN_PARENS1645=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_operator_declaration211080); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1645_tree = 
            (Object)adaptor.create(OPEN_PARENS1645)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1645_tree);
            }

            pushFollow(FOLLOW_type_in_operator_declaration211082);
            type1646=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1646.getTree());

            IDENTIFIER1647=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_operator_declaration211084); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1647_tree = 
            (Object)adaptor.create(IDENTIFIER1647)
            ;
            adaptor.addChild(root_0, IDENTIFIER1647_tree);
            }

            // CSharp4.g:2485:10: ( COMMA type IDENTIFIER )?
            int alt401=2;
            int LA401_0 = input.LA(1);

            if ( (LA401_0==COMMA) ) {
                alt401=1;
            }
            switch (alt401) {
                case 1 :
                    // CSharp4.g:2485:11: COMMA type IDENTIFIER
                    {
                    COMMA1648=(Token)match(input,COMMA,FOLLOW_COMMA_in_operator_declaration211096); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA1648_tree = 
                    (Object)adaptor.create(COMMA1648)
                    ;
                    adaptor.addChild(root_0, COMMA1648_tree);
                    }

                    pushFollow(FOLLOW_type_in_operator_declaration211098);
                    type1649=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type1649.getTree());

                    IDENTIFIER1650=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_operator_declaration211100); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER1650_tree = 
                    (Object)adaptor.create(IDENTIFIER1650)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER1650_tree);
                    }

                    }
                    break;

            }


            CLOSE_PARENS1651=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_operator_declaration211104); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1651_tree = 
            (Object)adaptor.create(CLOSE_PARENS1651)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1651_tree);
            }

            pushFollow(FOLLOW_operator_body_in_operator_declaration211106);
            operator_body1652=operator_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_body1652.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "operator_declaration2"


    public static class member_access2_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "member_access2"
    // CSharp4.g:2488:1: member_access2 : DOT IDENTIFIER type_argument_list_opt ;
    public final CSharp4.member_access2_return member_access2() throws RecognitionException {
        CSharp4.member_access2_return retval = new CSharp4.member_access2_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token DOT1653=null;
        Token IDENTIFIER1654=null;
        CSharp4.type_argument_list_opt_return type_argument_list_opt1655 =null;


        Object DOT1653_tree=null;
        Object IDENTIFIER1654_tree=null;

        try {
            // CSharp4.g:2489:3: ( DOT IDENTIFIER type_argument_list_opt )
            // CSharp4.g:2489:5: DOT IDENTIFIER type_argument_list_opt
            {
            root_0 = (Object)adaptor.nil();


            DOT1653=(Token)match(input,DOT,FOLLOW_DOT_in_member_access211119); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            DOT1653_tree = 
            (Object)adaptor.create(DOT1653)
            ;
            adaptor.addChild(root_0, DOT1653_tree);
            }

            IDENTIFIER1654=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_member_access211121); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER1654_tree = 
            (Object)adaptor.create(IDENTIFIER1654)
            ;
            adaptor.addChild(root_0, IDENTIFIER1654_tree);
            }

            pushFollow(FOLLOW_type_argument_list_opt_in_member_access211123);
            type_argument_list_opt1655=type_argument_list_opt();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_argument_list_opt1655.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "member_access2"


    public static class method_invocation2_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_invocation2"
    // CSharp4.g:2491:1: method_invocation2 : OPEN_PARENS ( argument_list )? CLOSE_PARENS ;
    public final CSharp4.method_invocation2_return method_invocation2() throws RecognitionException {
        CSharp4.method_invocation2_return retval = new CSharp4.method_invocation2_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_PARENS1656=null;
        Token CLOSE_PARENS1658=null;
        CSharp4.argument_list_return argument_list1657 =null;


        Object OPEN_PARENS1656_tree=null;
        Object CLOSE_PARENS1658_tree=null;

        try {
            // CSharp4.g:2492:3: ( OPEN_PARENS ( argument_list )? CLOSE_PARENS )
            // CSharp4.g:2492:5: OPEN_PARENS ( argument_list )? CLOSE_PARENS
            {
            root_0 = (Object)adaptor.nil();


            OPEN_PARENS1656=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_method_invocation211135); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1656_tree = 
            (Object)adaptor.create(OPEN_PARENS1656)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1656_tree);
            }

            // CSharp4.g:2492:17: ( argument_list )?
            int alt402=2;
            int LA402_0 = input.LA(1);

            if ( (LA402_0==AMP||(LA402_0 >= BANG && LA402_0 <= BASE)||LA402_0==BOOL||LA402_0==BYTE||(LA402_0 >= CHAR && LA402_0 <= CHECKED)||LA402_0==DECIMAL||(LA402_0 >= DEFAULT && LA402_0 <= DELEGATE)||LA402_0==DOUBLE||LA402_0==FALSE||LA402_0==FLOAT||LA402_0==IDENTIFIER||(LA402_0 >= INT && LA402_0 <= INTEGER_LITERAL)||LA402_0==LONG||LA402_0==MINUS||LA402_0==NEW||LA402_0==NULL||LA402_0==OBJECT||LA402_0==OPEN_PARENS||LA402_0==OP_DEC||LA402_0==OP_INC||LA402_0==OUT||LA402_0==PLUS||(LA402_0 >= REAL_LITERAL && LA402_0 <= REF)||LA402_0==SBYTE||LA402_0==SHORT||LA402_0==SIZEOF||LA402_0==STAR||(LA402_0 >= STRING && LA402_0 <= STRING_LITERAL)||LA402_0==THIS||(LA402_0 >= TILDE && LA402_0 <= TRUE)||(LA402_0 >= TYPEOF && LA402_0 <= UNCHECKED)||LA402_0==USHORT) ) {
                alt402=1;
            }
            switch (alt402) {
                case 1 :
                    // CSharp4.g:2492:17: argument_list
                    {
                    pushFollow(FOLLOW_argument_list_in_method_invocation211137);
                    argument_list1657=argument_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list1657.getTree());

                    }
                    break;

            }


            CLOSE_PARENS1658=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_method_invocation211140); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1658_tree = 
            (Object)adaptor.create(CLOSE_PARENS1658)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1658_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_invocation2"


    public static class object_creation_expression2_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "object_creation_expression2"
    // CSharp4.g:2494:1: object_creation_expression2 : OPEN_PARENS ( argument_list )? CLOSE_PARENS ( object_or_collection_initializer )? ;
    public final CSharp4.object_creation_expression2_return object_creation_expression2() throws RecognitionException {
        CSharp4.object_creation_expression2_return retval = new CSharp4.object_creation_expression2_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token OPEN_PARENS1659=null;
        Token CLOSE_PARENS1661=null;
        CSharp4.argument_list_return argument_list1660 =null;

        CSharp4.object_or_collection_initializer_return object_or_collection_initializer1662 =null;


        Object OPEN_PARENS1659_tree=null;
        Object CLOSE_PARENS1661_tree=null;

        try {
            // CSharp4.g:2495:3: ( OPEN_PARENS ( argument_list )? CLOSE_PARENS ( object_or_collection_initializer )? )
            // CSharp4.g:2495:5: OPEN_PARENS ( argument_list )? CLOSE_PARENS ( object_or_collection_initializer )?
            {
            root_0 = (Object)adaptor.nil();


            OPEN_PARENS1659=(Token)match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_object_creation_expression211152); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            OPEN_PARENS1659_tree = 
            (Object)adaptor.create(OPEN_PARENS1659)
            ;
            adaptor.addChild(root_0, OPEN_PARENS1659_tree);
            }

            // CSharp4.g:2495:17: ( argument_list )?
            int alt403=2;
            int LA403_0 = input.LA(1);

            if ( (LA403_0==AMP||(LA403_0 >= BANG && LA403_0 <= BASE)||LA403_0==BOOL||LA403_0==BYTE||(LA403_0 >= CHAR && LA403_0 <= CHECKED)||LA403_0==DECIMAL||(LA403_0 >= DEFAULT && LA403_0 <= DELEGATE)||LA403_0==DOUBLE||LA403_0==FALSE||LA403_0==FLOAT||LA403_0==IDENTIFIER||(LA403_0 >= INT && LA403_0 <= INTEGER_LITERAL)||LA403_0==LONG||LA403_0==MINUS||LA403_0==NEW||LA403_0==NULL||LA403_0==OBJECT||LA403_0==OPEN_PARENS||LA403_0==OP_DEC||LA403_0==OP_INC||LA403_0==OUT||LA403_0==PLUS||(LA403_0 >= REAL_LITERAL && LA403_0 <= REF)||LA403_0==SBYTE||LA403_0==SHORT||LA403_0==SIZEOF||LA403_0==STAR||(LA403_0 >= STRING && LA403_0 <= STRING_LITERAL)||LA403_0==THIS||(LA403_0 >= TILDE && LA403_0 <= TRUE)||(LA403_0 >= TYPEOF && LA403_0 <= UNCHECKED)||LA403_0==USHORT) ) {
                alt403=1;
            }
            switch (alt403) {
                case 1 :
                    // CSharp4.g:2495:17: argument_list
                    {
                    pushFollow(FOLLOW_argument_list_in_object_creation_expression211154);
                    argument_list1660=argument_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list1660.getTree());

                    }
                    break;

            }


            CLOSE_PARENS1661=(Token)match(input,CLOSE_PARENS,FOLLOW_CLOSE_PARENS_in_object_creation_expression211157); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CLOSE_PARENS1661_tree = 
            (Object)adaptor.create(CLOSE_PARENS1661)
            ;
            adaptor.addChild(root_0, CLOSE_PARENS1661_tree);
            }

            // CSharp4.g:2495:45: ( object_or_collection_initializer )?
            int alt404=2;
            int LA404_0 = input.LA(1);

            if ( (LA404_0==OPEN_BRACE) ) {
                alt404=1;
            }
            switch (alt404) {
                case 1 :
                    // CSharp4.g:2495:45: object_or_collection_initializer
                    {
                    pushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression211159);
                    object_or_collection_initializer1662=object_or_collection_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer1662.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "object_creation_expression2"

    // $ANTLR start synpred1_CSharp4
    public final void synpred1_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:89:5: ( type_argument_list )
        // CSharp4.g:89:6: type_argument_list
        {
        pushFollow(FOLLOW_type_argument_list_in_synpred1_CSharp4133);
        type_argument_list();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred1_CSharp4

    // $ANTLR start synpred2_CSharp4
    public final void synpred2_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:103:7: ( INTERR )
        // CSharp4.g:103:8: INTERR
        {
        match(input,INTERR,FOLLOW_INTERR_in_synpred2_CSharp4169); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred2_CSharp4

    // $ANTLR start synpred3_CSharp4
    public final void synpred3_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:104:7: ( rank_specifier )
        // CSharp4.g:104:8: rank_specifier
        {
        pushFollow(FOLLOW_rank_specifier_in_synpred3_CSharp4183);
        rank_specifier();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred3_CSharp4

    // $ANTLR start synpred4_CSharp4
    public final void synpred4_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:161:7: ( rank_specifier )
        // CSharp4.g:161:8: rank_specifier
        {
        pushFollow(FOLLOW_rank_specifier_in_synpred4_CSharp4377);
        rank_specifier();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred4_CSharp4

    // $ANTLR start synpred5_CSharp4
    public final void synpred5_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:482:11: ( array_type OPEN_BRACKET )
        // CSharp4.g:482:12: array_type OPEN_BRACKET
        {
        pushFollow(FOLLOW_array_type_in_synpred5_CSharp41453);
        array_type();

        state._fsp--;
        if (state.failed) return ;

        match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_synpred5_CSharp41455); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred5_CSharp4

    // $ANTLR start synpred6_CSharp4
    public final void synpred6_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:523:6: ( unbound_type_name )
        // CSharp4.g:523:7: unbound_type_name
        {
        pushFollow(FOLLOW_unbound_type_name_in_synpred6_CSharp41644);
        unbound_type_name();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred6_CSharp4

    // $ANTLR start synpred7_CSharp4
    public final void synpred7_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:570:4: ( scan_for_cast_generic_precedence | OPEN_PARENS predefined_type )
        int alt405=2;
        int LA405_0 = input.LA(1);

        if ( (LA405_0==OPEN_PARENS) ) {
            switch ( input.LA(2) ) {
            case BYTE:
            case CHAR:
            case INT:
            case LONG:
            case SBYTE:
            case SHORT:
            case UINT:
            case ULONG:
            case USHORT:
                {
                int LA405_2 = input.LA(3);

                if ( (LA405_2==CLOSE_PARENS||LA405_2==INTERR||LA405_2==OPEN_BRACKET||LA405_2==STAR) ) {
                    alt405=1;
                }
                else if ( (LA405_2==EOF) ) {
                    alt405=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 405, 2, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE:
            case FLOAT:
                {
                int LA405_3 = input.LA(3);

                if ( (LA405_3==CLOSE_PARENS||LA405_3==INTERR||LA405_3==OPEN_BRACKET||LA405_3==STAR) ) {
                    alt405=1;
                }
                else if ( (LA405_3==EOF) ) {
                    alt405=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 405, 3, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL:
                {
                int LA405_4 = input.LA(3);

                if ( (LA405_4==CLOSE_PARENS||LA405_4==INTERR||LA405_4==OPEN_BRACKET||LA405_4==STAR) ) {
                    alt405=1;
                }
                else if ( (LA405_4==EOF) ) {
                    alt405=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 405, 4, input);

                    throw nvae;

                }
                }
                break;
            case BOOL:
                {
                int LA405_5 = input.LA(3);

                if ( (LA405_5==CLOSE_PARENS||LA405_5==INTERR||LA405_5==OPEN_BRACKET||LA405_5==STAR) ) {
                    alt405=1;
                }
                else if ( (LA405_5==EOF) ) {
                    alt405=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 405, 5, input);

                    throw nvae;

                }
                }
                break;
            case IDENTIFIER:
            case VOID:
                {
                alt405=1;
                }
                break;
            case OBJECT:
                {
                int LA405_7 = input.LA(3);

                if ( (LA405_7==CLOSE_PARENS||LA405_7==INTERR||LA405_7==OPEN_BRACKET||LA405_7==STAR) ) {
                    alt405=1;
                }
                else if ( (LA405_7==EOF) ) {
                    alt405=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 405, 7, input);

                    throw nvae;

                }
                }
                break;
            case STRING:
                {
                int LA405_8 = input.LA(3);

                if ( (LA405_8==CLOSE_PARENS||LA405_8==INTERR||LA405_8==OPEN_BRACKET||LA405_8==STAR) ) {
                    alt405=1;
                }
                else if ( (LA405_8==EOF) ) {
                    alt405=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 405, 8, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 405, 1, input);

                throw nvae;

            }

        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 405, 0, input);

            throw nvae;

        }
        switch (alt405) {
            case 1 :
                // CSharp4.g:570:5: scan_for_cast_generic_precedence
                {
                pushFollow(FOLLOW_scan_for_cast_generic_precedence_in_synpred7_CSharp41848);
                scan_for_cast_generic_precedence();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // CSharp4.g:570:40: OPEN_PARENS predefined_type
                {
                match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_synpred7_CSharp41852); if (state.failed) return ;

                pushFollow(FOLLOW_predefined_type_in_synpred7_CSharp41854);
                predefined_type();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred7_CSharp4

    // $ANTLR start synpred8_CSharp4
    public final void synpred8_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:640:31: ( INTERR is_disambiguation_token )
        // CSharp4.g:640:32: INTERR is_disambiguation_token
        {
        match(input,INTERR,FOLLOW_INTERR_in_synpred8_CSharp42718); if (state.failed) return ;

        pushFollow(FOLLOW_is_disambiguation_token_in_synpred8_CSharp42720);
        is_disambiguation_token();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred8_CSharp4

    // $ANTLR start synpred9_CSharp4
    public final void synpred9_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:736:29: ( type IDENTIFIER IN )
        // CSharp4.g:736:30: type IDENTIFIER IN
        {
        pushFollow(FOLLOW_type_in_synpred9_CSharp43178);
        type();

        state._fsp--;
        if (state.failed) return ;

        match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred9_CSharp43180); if (state.failed) return ;

        match(input,IN,FOLLOW_IN_in_synpred9_CSharp43182); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred9_CSharp4

    // $ANTLR start synpred10_CSharp4
    public final void synpred10_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:744:49: ( into_contextual_keyword )
        // CSharp4.g:744:50: into_contextual_keyword
        {
        pushFollow(FOLLOW_into_contextual_keyword_in_synpred10_CSharp43216);
        into_contextual_keyword();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred10_CSharp4

    // $ANTLR start synpred11_CSharp4
    public final void synpred11_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:827:4: ( assignment )
        // CSharp4.g:827:5: assignment
        {
        pushFollow(FOLLOW_assignment_in_synpred11_CSharp43625);
        assignment();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred11_CSharp4

    // $ANTLR start synpred12_CSharp4
    public final void synpred12_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:831:4: ( lambda_expression )
        // CSharp4.g:831:5: lambda_expression
        {
        pushFollow(FOLLOW_lambda_expression_in_synpred12_CSharp43646);
        lambda_expression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred12_CSharp4

    // $ANTLR start synpred13_CSharp4
    public final void synpred13_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:832:4: ( query_expression )
        // CSharp4.g:832:5: query_expression
        {
        pushFollow(FOLLOW_query_expression_in_synpred13_CSharp43657);
        query_expression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred13_CSharp4

    // $ANTLR start synpred14_CSharp4
    public final void synpred14_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:844:4: ( labeled_statement )
        // CSharp4.g:844:5: labeled_statement
        {
        pushFollow(FOLLOW_labeled_statement_in_synpred14_CSharp43703);
        labeled_statement();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred14_CSharp4

    // $ANTLR start synpred15_CSharp4
    public final void synpred15_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:845:4: ( declaration_statement )
        // CSharp4.g:845:5: declaration_statement
        {
        pushFollow(FOLLOW_declaration_statement_in_synpred15_CSharp43714);
        declaration_statement();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred15_CSharp4

    // $ANTLR start synpred16_CSharp4
    public final void synpred16_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:944:73: ( ELSE )
        // CSharp4.g:944:74: ELSE
        {
        match(input,ELSE,FOLLOW_ELSE_in_synpred16_CSharp44054); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred16_CSharp4

    // $ANTLR start synpred17_CSharp4
    public final void synpred17_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:981:4: ( local_variable_declaration )
        // CSharp4.g:981:5: local_variable_declaration
        {
        pushFollow(FOLLOW_local_variable_declaration_in_synpred17_CSharp44281);
        local_variable_declaration();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred17_CSharp4

    // $ANTLR start synpred18_CSharp4
    public final void synpred18_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:1071:4: ( local_variable_declaration )
        // CSharp4.g:1071:5: local_variable_declaration
        {
        pushFollow(FOLLOW_local_variable_declaration_in_synpred18_CSharp44674);
        local_variable_declaration();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred18_CSharp4

    // $ANTLR start synpred19_CSharp4
    public final void synpred19_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:1090:7: ( global_attribute_section )
        // CSharp4.g:1090:8: global_attribute_section
        {
        pushFollow(FOLLOW_global_attribute_section_in_synpred19_CSharp44742);
        global_attribute_section();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred19_CSharp4

    // $ANTLR start synpred20_CSharp4
    public final void synpred20_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:1319:7: ( interface_type DOT THIS )
        // CSharp4.g:1319:8: interface_type DOT THIS
        {
        pushFollow(FOLLOW_interface_type_in_synpred20_CSharp45815);
        interface_type();

        state._fsp--;
        if (state.failed) return ;

        match(input,DOT,FOLLOW_DOT_in_synpred20_CSharp45817); if (state.failed) return ;

        match(input,THIS,FOLLOW_THIS_in_synpred20_CSharp45819); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred20_CSharp4

    // $ANTLR start synpred21_CSharp4
    public final void synpred21_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:1321:7: ( member_name ( type_parameter_list )? OPEN_PARENS )
        // CSharp4.g:1321:8: member_name ( type_parameter_list )? OPEN_PARENS
        {
        pushFollow(FOLLOW_member_name_in_synpred21_CSharp45857);
        member_name();

        state._fsp--;
        if (state.failed) return ;

        // CSharp4.g:1321:20: ( type_parameter_list )?
        int alt406=2;
        int LA406_0 = input.LA(1);

        if ( (LA406_0==LT) ) {
            alt406=1;
        }
        switch (alt406) {
            case 1 :
                // CSharp4.g:1321:20: type_parameter_list
                {
                pushFollow(FOLLOW_type_parameter_list_in_synpred21_CSharp45859);
                type_parameter_list();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        match(input,OPEN_PARENS,FOLLOW_OPEN_PARENS_in_synpred21_CSharp45862); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred21_CSharp4

    // $ANTLR start synpred22_CSharp4
    public final void synpred22_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:1322:7: ( member_name OPEN_BRACE )
        // CSharp4.g:1322:8: member_name OPEN_BRACE
        {
        pushFollow(FOLLOW_member_name_in_synpred22_CSharp45876);
        member_name();

        state._fsp--;
        if (state.failed) return ;

        match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_synpred22_CSharp45878); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred22_CSharp4

    // $ANTLR start synpred23_CSharp4
    public final void synpred23_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:1430:5: ( ( attributes )? PARAMS )
        // CSharp4.g:1430:6: ( attributes )? PARAMS
        {
        // CSharp4.g:1430:6: ( attributes )?
        int alt407=2;
        int LA407_0 = input.LA(1);

        if ( (LA407_0==OPEN_BRACKET) ) {
            alt407=1;
        }
        switch (alt407) {
            case 1 :
                // CSharp4.g:1430:6: attributes
                {
                pushFollow(FOLLOW_attributes_in_synpred23_CSharp46216);
                attributes();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        match(input,PARAMS,FOLLOW_PARAMS_in_synpred23_CSharp46219); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred23_CSharp4

    // $ANTLR start synpred24_CSharp4
    public final void synpred24_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:1431:24: ( COMMA parameter_array )
        // CSharp4.g:1431:25: COMMA parameter_array
        {
        match(input,COMMA,FOLLOW_COMMA_in_synpred24_CSharp46235); if (state.failed) return ;

        pushFollow(FOLLOW_parameter_array_in_synpred24_CSharp46237);
        parameter_array();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred24_CSharp4

    // $ANTLR start synpred25_CSharp4
    public final void synpred25_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:1434:22: ( COMMA fixed_parameter )
        // CSharp4.g:1434:23: COMMA fixed_parameter
        {
        match(input,COMMA,FOLLOW_COMMA_in_synpred25_CSharp46263); if (state.failed) return ;

        pushFollow(FOLLOW_fixed_parameter_in_synpred25_CSharp46265);
        fixed_parameter();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred25_CSharp4

    // $ANTLR start synpred26_CSharp4
    public final void synpred26_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:1596:5: ( unary_operator_declarator )
        // CSharp4.g:1596:6: unary_operator_declarator
        {
        pushFollow(FOLLOW_unary_operator_declarator_in_synpred26_CSharp47028);
        unary_operator_declarator();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred26_CSharp4

    // $ANTLR start synpred27_CSharp4
    public final void synpred27_CSharp4_fragment() throws RecognitionException {
        // CSharp4.g:2229:5: ( AMP )
        // CSharp4.g:2229:6: AMP
        {
        match(input,AMP,FOLLOW_AMP_in_synpred27_CSharp49696); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred27_CSharp4

    // Delegated rules

    public final boolean synpred19_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_CSharp4() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_CSharp4_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA11 dfa11 = new DFA11(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA400 dfa400 = new DFA400(this);
    static final String DFA11_eotS =
        "\10\uffff";
    static final String DFA11_eofS =
        "\4\uffff\1\6\3\uffff";
    static final String DFA11_minS =
        "\2\122\2\31\1\122\1\31\2\uffff";
    static final String DFA11_maxS =
        "\2\u00b1\2\34\1\u00b1\1\34\2\uffff";
    static final String DFA11_acceptS =
        "\6\uffff\1\2\1\1";
    static final String DFA11_specialS =
        "\10\uffff}>";
    static final String[] DFA11_transitionS = {
            "\1\1\27\uffff\1\2\106\uffff\1\1",
            "\1\1\27\uffff\1\2\106\uffff\1\1",
            "\1\4\2\uffff\1\3",
            "\1\4\2\uffff\1\5",
            "\1\7\27\uffff\1\7\106\uffff\1\7",
            "\1\4\2\uffff\1\5",
            "",
            ""
    };

    static final short[] DFA11_eot = DFA.unpackEncodedString(DFA11_eotS);
    static final short[] DFA11_eof = DFA.unpackEncodedString(DFA11_eofS);
    static final char[] DFA11_min = DFA.unpackEncodedStringToUnsignedChars(DFA11_minS);
    static final char[] DFA11_max = DFA.unpackEncodedStringToUnsignedChars(DFA11_maxS);
    static final short[] DFA11_accept = DFA.unpackEncodedString(DFA11_acceptS);
    static final short[] DFA11_special = DFA.unpackEncodedString(DFA11_specialS);
    static final short[][] DFA11_transition;

    static {
        int numStates = DFA11_transitionS.length;
        DFA11_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA11_transition[i] = DFA.unpackEncodedString(DFA11_transitionS[i]);
        }
    }

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = DFA11_eot;
            this.eof = DFA11_eof;
            this.min = DFA11_min;
            this.max = DFA11_max;
            this.accept = DFA11_accept;
            this.special = DFA11_special;
            this.transition = DFA11_transition;
        }
        public String getDescription() {
            return "()* loopback of 183:5: ( ( STAR | INTERR )* rank_specifier )*";
        }
    }
    static final String DFA47_eotS =
        "\25\uffff";
    static final String DFA47_eofS =
        "\25\uffff";
    static final String DFA47_minS =
        "\1\16\1\32\1\uffff\1\32\1\112\1\16\1\112\1\0\1\uffff\1\32\2\uffff"+
        "\1\32\1\16\1\0\1\16\1\0\4\uffff";
    static final String DFA47_maxS =
        "\1\u00d8\1\u00b1\1\uffff\1\u00b1\1\112\1\u00d8\1\112\1\0\1\uffff"+
        "\1\u00b1\2\uffff\1\u00b1\1\u00d8\1\0\1\u00d8\1\0\4\uffff";
    static final String DFA47_acceptS =
        "\2\uffff\1\2\5\uffff\1\3\1\uffff\2\1\5\uffff\4\1";
    static final String DFA47_specialS =
        "\5\uffff\1\5\1\uffff\1\0\5\uffff\1\4\1\2\1\3\1\1\4\uffff}>";
    static final String[] DFA47_transitionS = {
            "\1\2\1\uffff\1\2\3\uffff\1\2\16\uffff\1\2\10\uffff\1\2\20\uffff"+
            "\1\2\14\uffff\1\1\3\uffff\1\2\14\uffff\1\2\14\uffff\1\2\77\uffff"+
            "\1\2\3\uffff\1\2\6\uffff\1\2\20\uffff\2\2\16\uffff\1\2\3\uffff"+
            "\1\3",
            "\1\7\20\uffff\1\6\2\uffff\1\4\43\uffff\1\2\11\uffff\1\5\15"+
            "\uffff\1\2\106\uffff\1\2",
            "",
            "\1\10\u0096\uffff\1\2",
            "\1\11",
            "\1\2\1\uffff\1\2\3\uffff\1\2\7\uffff\1\12\6\uffff\1\2\10\uffff"+
            "\1\2\20\uffff\1\2\7\uffff\1\13\4\uffff\1\2\3\uffff\1\2\14\uffff"+
            "\1\2\14\uffff\1\2\77\uffff\1\2\3\uffff\1\2\6\uffff\1\2\20\uffff"+
            "\2\2\16\uffff\1\2\3\uffff\1\2",
            "\1\14",
            "\1\uffff",
            "",
            "\1\16\20\uffff\1\6\46\uffff\1\2\11\uffff\1\15\15\uffff\1\2"+
            "\106\uffff\1\2",
            "",
            "",
            "\1\20\20\uffff\1\6\46\uffff\1\2\11\uffff\1\17\15\uffff\1\2"+
            "\106\uffff\1\2",
            "\1\2\1\uffff\1\2\3\uffff\1\2\7\uffff\1\21\6\uffff\1\2\10\uffff"+
            "\1\2\20\uffff\1\2\7\uffff\1\22\4\uffff\1\2\3\uffff\1\2\14\uffff"+
            "\1\2\14\uffff\1\2\77\uffff\1\2\3\uffff\1\2\6\uffff\1\2\20\uffff"+
            "\2\2\16\uffff\1\2\3\uffff\1\2",
            "\1\uffff",
            "\1\2\1\uffff\1\2\3\uffff\1\2\7\uffff\1\23\6\uffff\1\2\10\uffff"+
            "\1\2\20\uffff\1\2\7\uffff\1\24\4\uffff\1\2\3\uffff\1\2\14\uffff"+
            "\1\2\14\uffff\1\2\77\uffff\1\2\3\uffff\1\2\6\uffff\1\2\20\uffff"+
            "\2\2\16\uffff\1\2\3\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA47_eot = DFA.unpackEncodedString(DFA47_eotS);
    static final short[] DFA47_eof = DFA.unpackEncodedString(DFA47_eofS);
    static final char[] DFA47_min = DFA.unpackEncodedStringToUnsignedChars(DFA47_minS);
    static final char[] DFA47_max = DFA.unpackEncodedStringToUnsignedChars(DFA47_maxS);
    static final short[] DFA47_accept = DFA.unpackEncodedString(DFA47_acceptS);
    static final short[] DFA47_special = DFA.unpackEncodedString(DFA47_specialS);
    static final short[][] DFA47_transition;

    static {
        int numStates = DFA47_transitionS.length;
        DFA47_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA47_transition[i] = DFA.unpackEncodedString(DFA47_transitionS[i]);
        }
    }

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = DFA47_eot;
            this.eof = DFA47_eof;
            this.min = DFA47_min;
            this.max = DFA47_max;
            this.accept = DFA47_accept;
            this.special = DFA47_special;
            this.transition = DFA47_transition;
        }
        public String getDescription() {
            return "523:4: ( ( unbound_type_name )=> unbound_type_name CLOSE_PARENS | type CLOSE_PARENS | VOID CLOSE_PARENS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA47_7 = input.LA(1);

                         
                        int index47_7 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred6_CSharp4()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index47_7);

                        if ( s>=0 ) return s;
                        break;

                    case 1 : 
                        int LA47_16 = input.LA(1);

                         
                        int index47_16 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred6_CSharp4()) ) {s = 20;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index47_16);

                        if ( s>=0 ) return s;
                        break;

                    case 2 : 
                        int LA47_14 = input.LA(1);

                         
                        int index47_14 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred6_CSharp4()) ) {s = 18;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index47_14);

                        if ( s>=0 ) return s;
                        break;

                    case 3 : 
                        int LA47_15 = input.LA(1);

                         
                        int index47_15 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (LA47_15==COMMA) && (synpred6_CSharp4())) {s = 19;}

                        else if ( (LA47_15==GT) && (synpred6_CSharp4())) {s = 20;}

                        else if ( (LA47_15==BOOL||LA47_15==BYTE||LA47_15==CHAR||LA47_15==DECIMAL||LA47_15==DOUBLE||LA47_15==FLOAT||LA47_15==IDENTIFIER||LA47_15==INT||LA47_15==LONG||LA47_15==OBJECT||LA47_15==SBYTE||LA47_15==SHORT||LA47_15==STRING||(LA47_15 >= UINT && LA47_15 <= ULONG)||LA47_15==USHORT||LA47_15==VOID) ) {s = 2;}

                         
                        input.seek(index47_15);

                        if ( s>=0 ) return s;
                        break;

                    case 4 : 
                        int LA47_13 = input.LA(1);

                         
                        int index47_13 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (LA47_13==BOOL||LA47_13==BYTE||LA47_13==CHAR||LA47_13==DECIMAL||LA47_13==DOUBLE||LA47_13==FLOAT||LA47_13==IDENTIFIER||LA47_13==INT||LA47_13==LONG||LA47_13==OBJECT||LA47_13==SBYTE||LA47_13==SHORT||LA47_13==STRING||(LA47_13 >= UINT && LA47_13 <= ULONG)||LA47_13==USHORT||LA47_13==VOID) ) {s = 2;}

                        else if ( (LA47_13==COMMA) && (synpred6_CSharp4())) {s = 17;}

                        else if ( (LA47_13==GT) && (synpred6_CSharp4())) {s = 18;}

                         
                        input.seek(index47_13);

                        if ( s>=0 ) return s;
                        break;

                    case 5 : 
                        int LA47_5 = input.LA(1);

                         
                        int index47_5 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (LA47_5==COMMA) && (synpred6_CSharp4())) {s = 10;}

                        else if ( (LA47_5==GT) && (synpred6_CSharp4())) {s = 11;}

                        else if ( (LA47_5==BOOL||LA47_5==BYTE||LA47_5==CHAR||LA47_5==DECIMAL||LA47_5==DOUBLE||LA47_5==FLOAT||LA47_5==IDENTIFIER||LA47_5==INT||LA47_5==LONG||LA47_5==OBJECT||LA47_5==SBYTE||LA47_5==SHORT||LA47_5==STRING||(LA47_5 >= UINT && LA47_5 <= ULONG)||LA47_5==USHORT||LA47_5==VOID) ) {s = 2;}

                         
                        input.seek(index47_5);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 47, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA400_eotS =
        "\10\uffff";
    static final String DFA400_eofS =
        "\10\uffff";
    static final String DFA400_minS =
        "\1\53\1\16\2\uffff\1\34\1\16\1\53\1\34";
    static final String DFA400_maxS =
        "\1\153\1\u00d8\2\uffff\1\u00b1\1\u00d8\1\153\1\u00b1";
    static final String DFA400_acceptS =
        "\2\uffff\1\2\1\1\4\uffff";
    static final String DFA400_specialS =
        "\10\uffff}>";
    static final String[] DFA400_transitionS = {
            "\1\3\60\uffff\1\1\16\uffff\1\2",
            "\1\3\1\uffff\1\3\3\uffff\1\3\16\uffff\1\3\10\uffff\1\3\20\uffff"+
            "\1\3\14\uffff\1\4\3\uffff\1\3\14\uffff\1\3\14\uffff\1\3\1\uffff"+
            "\1\2\75\uffff\1\3\3\uffff\1\3\6\uffff\1\3\20\uffff\2\3\16\uffff"+
            "\1\3\3\uffff\1\3",
            "",
            "",
            "\1\5\16\uffff\1\3\2\uffff\1\3\26\uffff\1\6\14\uffff\1\3\11"+
            "\uffff\1\3\15\uffff\1\3\106\uffff\1\3",
            "\1\3\1\uffff\1\3\3\uffff\1\3\16\uffff\1\3\10\uffff\1\3\20\uffff"+
            "\1\3\14\uffff\1\7\3\uffff\1\3\14\uffff\1\3\14\uffff\1\3\1\uffff"+
            "\1\2\75\uffff\1\3\3\uffff\1\3\6\uffff\1\3\20\uffff\2\3\16\uffff"+
            "\1\3\3\uffff\1\3",
            "\1\3\77\uffff\1\2",
            "\1\5\16\uffff\1\3\2\uffff\1\3\26\uffff\1\6\14\uffff\1\3\11"+
            "\uffff\1\3\15\uffff\1\3\106\uffff\1\3"
    };

    static final short[] DFA400_eot = DFA.unpackEncodedString(DFA400_eotS);
    static final short[] DFA400_eof = DFA.unpackEncodedString(DFA400_eofS);
    static final char[] DFA400_min = DFA.unpackEncodedStringToUnsignedChars(DFA400_minS);
    static final char[] DFA400_max = DFA.unpackEncodedStringToUnsignedChars(DFA400_maxS);
    static final short[] DFA400_accept = DFA.unpackEncodedString(DFA400_acceptS);
    static final short[] DFA400_special = DFA.unpackEncodedString(DFA400_specialS);
    static final short[][] DFA400_transition;

    static {
        int numStates = DFA400_transitionS.length;
        DFA400_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA400_transition[i] = DFA.unpackEncodedString(DFA400_transitionS[i]);
        }
    }

    class DFA400 extends DFA {

        public DFA400(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 400;
            this.eot = DFA400_eot;
            this.eof = DFA400_eof;
            this.min = DFA400_min;
            this.max = DFA400_max;
            this.accept = DFA400_accept;
            this.special = DFA400_special;
            this.transition = DFA400_transition;
        }
        public String getDescription() {
            return "()* loopback of 2470:7: ( type_argument_list_opt DOT IDENTIFIER )*";
        }
    }
 

    public static final BitSet FOLLOW_namespace_or_type_name_in_namespace_name64 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namespace_or_type_name_in_type_name75 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_namespace_or_type_name91 = new BitSet(new long[]{0x0000080000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_type_argument_list_opt_in_namespace_or_type_name93 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_qualified_alias_member_in_namespace_or_type_name101 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DOT_in_namespace_or_type_name110 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_namespace_or_type_name112 = new BitSet(new long[]{0x0000080000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_type_argument_list_opt_in_namespace_or_type_name114 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_type_argument_list_in_type_argument_list_opt138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_base_type_in_type160 = new BitSet(new long[]{0x0000000000000002L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_INTERR_in_type174 = new BitSet(new long[]{0x0000000000000002L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_rank_specifier_in_type188 = new BitSet(new long[]{0x0000000000000002L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_STAR_in_type196 = new BitSet(new long[]{0x0000000000000002L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_simple_type_in_base_type216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_type_in_base_type222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_in_base_type230 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_STAR_in_base_type232 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_numeric_type_in_simple_type248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOL_in_simple_type253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_integral_type_in_numeric_type264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_floating_point_type_in_numeric_type269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECIMAL_in_numeric_type274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_non_nullable_value_type_in_nullable_type352 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_INTERR_in_nullable_type354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_base_type_in_non_nullable_value_type368 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_rank_specifier_in_non_nullable_value_type382 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_STAR_in_non_nullable_value_type390 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_simple_type_in_reference_type420 = new BitSet(new long[]{0x0000000000000000L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_class_type_in_reference_type430 = new BitSet(new long[]{0x0000000000000000L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_VOID_in_reference_type438 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_STAR_in_reference_type440 = new BitSet(new long[]{0x0000000000000000L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_rank_specifier_in_reference_type458 = new BitSet(new long[]{0x0000000000000000L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_rank_specifier_in_reference_type478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_name_in_class_type493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_in_class_type498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dynamic_contextual_keyword_in_class_type503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_class_type508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_name_in_interface_type521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_name_in_delegate_type534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LT_in_type_argument_list545 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_arguments_in_type_argument_list547 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_GT_in_type_argument_list549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_argument_in_type_arguments560 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_type_arguments564 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_argument_in_type_arguments566 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_type_in_type_argument579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_variable_reference594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_argument_in_argument_list607 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_argument_list611 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910C00000022L,0x000000000010007BL});
    public static final BitSet FOLLOW_argument_in_argument_list613 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_argument_name_in_argument625 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910C00000022L,0x000000000010007BL});
    public static final BitSet FOLLOW_argument_value_in_argument628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_argument_name639 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_COLON_in_argument_name641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_argument_value652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REF_in_argument_value657 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_variable_reference_in_argument_value659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUT_in_argument_value664 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_variable_reference_in_argument_value666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_expression_start_in_primary_expression682 = new BitSet(new long[]{0x0000080000000002L,0x40220C0000000000L});
    public static final BitSet FOLLOW_bracket_expression_in_primary_expression685 = new BitSet(new long[]{0x0000080000000002L,0x40220C0000000000L});
    public static final BitSet FOLLOW_member_access2_in_primary_expression700 = new BitSet(new long[]{0x0000080000000002L,0x40220C0000000000L});
    public static final BitSet FOLLOW_method_invocation2_in_primary_expression710 = new BitSet(new long[]{0x0000080000000002L,0x40220C0000000000L});
    public static final BitSet FOLLOW_OP_INC_in_primary_expression720 = new BitSet(new long[]{0x0000080000000002L,0x40220C0000000000L});
    public static final BitSet FOLLOW_OP_DEC_in_primary_expression730 = new BitSet(new long[]{0x0000080000000002L,0x40220C0000000000L});
    public static final BitSet FOLLOW_OP_PTR_in_primary_expression740 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_primary_expression742 = new BitSet(new long[]{0x0000080000000002L,0x40220C0000000000L});
    public static final BitSet FOLLOW_bracket_expression_in_primary_expression759 = new BitSet(new long[]{0x0000080000000002L,0x40220C0000000000L});
    public static final BitSet FOLLOW_literal_in_primary_expression_start777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_simple_name_in_primary_expression_start783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parenthesized_expression_in_primary_expression_start789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_predefined_type_in_primary_expression_start795 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualified_alias_member_in_primary_expression_start802 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_this_access_in_primary_expression_start810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_base_access_in_primary_expression_start816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_primary_expression_start822 = new BitSet(new long[]{0x2000100800114000L,0x0000070008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_primary_expression_start826 = new BitSet(new long[]{0x0000000000000000L,0x00000E0000000000L});
    public static final BitSet FOLLOW_object_creation_expression2_in_primary_expression_start830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_object_or_collection_initializer_in_primary_expression_start849 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_primary_expression_start868 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_list_in_primary_expression_start870 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_primary_expression_start872 = new BitSet(new long[]{0x0000000000000002L,0x0000060000000000L});
    public static final BitSet FOLLOW_rank_specifiers_in_primary_expression_start874 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_array_initializer_in_primary_expression_start877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rank_specifiers_in_primary_expression_start897 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_array_initializer_in_primary_expression_start899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymous_object_initializer_in_primary_expression_start928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rank_specifier_in_primary_expression_start940 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_array_initializer_in_primary_expression_start942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeof_expression_in_primary_expression_start958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_checked_expression_in_primary_expression_start964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unchecked_expression_in_primary_expression_start970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_default_value_expression_in_primary_expression_start976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymous_method_expression_in_primary_expression_start982 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_sizeof_expression_in_primary_expression_start988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_bracket_expression1002 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_list_in_bracket_expression1004 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_bracket_expression1006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_simple_name1024 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_type_argument_list_opt_in_simple_name1026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_parenthesized_expression1039 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_parenthesized_expression1041 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_parenthesized_expression1043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_expression_in_member_access1059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expression_list1158 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_expression_list1162 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_expression_list1164 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_THIS_in_this_access1177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BASE_in_base_access1189 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_DOT_in_base_access1191 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_base_access1193 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_type_argument_list_opt_in_base_access1195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BASE_in_base_access1200 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_base_access1202 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_list_in_base_access1204 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_base_access1206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_object_creation_expression1224 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_object_creation_expression1226 = new BitSet(new long[]{0x0000000000000000L,0x00000A0000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_object_creation_expression1230 = new BitSet(new long[]{0x2400106804715820L,0x002209250800C400L,0x401A910C00000022L,0x000000000010007BL});
    public static final BitSet FOLLOW_argument_list_in_object_creation_expression1232 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_object_creation_expression1235 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression1237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression1255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_object_initializer_in_object_or_collection_initializer1284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_collection_initializer_in_object_or_collection_initializer1289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_object_initializer1305 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_object_initializer1307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_object_initializer1313 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_member_initializer_list_in_object_initializer1315 = new BitSet(new long[]{0x0000000011000000L});
    public static final BitSet FOLLOW_COMMA_in_object_initializer1317 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_object_initializer1320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_initializer_in_member_initializer_list1332 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_member_initializer_list1336 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_member_initializer_in_member_initializer_list1338 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_member_initializer1351 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_member_initializer1353 = new BitSet(new long[]{0x2400106800715820L,0x00220B250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_initializer_value_in_member_initializer1355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_initializer_value1366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_object_or_collection_initializer_in_initializer_value1371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_collection_initializer1387 = new BitSet(new long[]{0x2400106800715820L,0x00220B250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_element_initializer_list_in_collection_initializer1389 = new BitSet(new long[]{0x0000000011000000L});
    public static final BitSet FOLLOW_COMMA_in_collection_initializer1391 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_collection_initializer1394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_element_initializer_in_element_initializer_list1406 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_element_initializer_list1410 = new BitSet(new long[]{0x2400106800715820L,0x00220B250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_element_initializer_in_element_initializer_list1412 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_non_assignment_expression_in_element_initializer1425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_element_initializer1430 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_list_in_element_initializer1432 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_element_initializer1434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_array_creation_expression1448 = new BitSet(new long[]{0x2000100800114000L,0x0000050008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_array_type_in_array_creation_expression1460 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_array_initializer_in_array_creation_expression1462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_non_array_type_in_array_creation_expression1474 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_array_creation_expression1476 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_list_in_array_creation_expression1478 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_array_creation_expression1480 = new BitSet(new long[]{0x0000000000000002L,0x0000060000000000L});
    public static final BitSet FOLLOW_rank_specifiers_in_array_creation_expression1482 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_array_initializer_in_array_creation_expression1485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rank_specifier_in_array_creation_expression1498 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_array_initializer_in_array_creation_expression1500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_delegate_creation_expression1524 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_delegate_type_in_delegate_creation_expression1526 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_delegate_creation_expression1528 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_delegate_creation_expression1530 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_delegate_creation_expression1532 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_anonymous_object_creation_expression1545 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression1547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_anonymous_object_initializer1563 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_anonymous_object_initializer1565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_anonymous_object_initializer1571 = new BitSet(new long[]{0x2400106800715000L,0x000009240800C400L,0x4018910400000000L,0x000000000010007AL});
    public static final BitSet FOLLOW_member_declarator_list_in_anonymous_object_initializer1573 = new BitSet(new long[]{0x0000000011000000L});
    public static final BitSet FOLLOW_COMMA_in_anonymous_object_initializer1575 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_anonymous_object_initializer1578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_declarator_in_member_declarator_list1590 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_member_declarator_list1594 = new BitSet(new long[]{0x2400106800715000L,0x000009240800C400L,0x4018910400000000L,0x000000000010007AL});
    public static final BitSet FOLLOW_member_declarator_in_member_declarator_list1596 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_primary_expression_in_member_declarator1612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_member_declarator1618 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_member_declarator1620 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_member_declarator1622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPEOF_in_typeof_expression1634 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_typeof_expression1636 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_unbound_type_name_in_typeof_expression1649 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_typeof_expression1651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typeof_expression1658 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_typeof_expression1660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_in_typeof_expression1667 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_typeof_expression1669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_unbound_type_name1688 = new BitSet(new long[]{0x0000480000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name1692 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DOUBLE_COLON_in_unbound_type_name1712 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_unbound_type_name1714 = new BitSet(new long[]{0x0000080000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name1716 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DOT_in_unbound_type_name1741 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_unbound_type_name1743 = new BitSet(new long[]{0x0000080000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name1745 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_LT_in_generic_dimension_specifier1760 = new BitSet(new long[]{0x0000000010000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_commas_in_generic_dimension_specifier1762 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_GT_in_generic_dimension_specifier1765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMMA_in_commas1776 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_commas1780 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_CHECKED_in_checked_expression1794 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_checked_expression1796 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_checked_expression1798 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_checked_expression1800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNCHECKED_in_unchecked_expression1811 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_unchecked_expression1813 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_unchecked_expression1815 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_unchecked_expression1817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DEFAULT_in_default_value_expression1828 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_default_value_expression1830 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_default_value_expression1832 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_default_value_expression1834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_cast_expression_in_unary_expression1859 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_expression_in_unary_expression1864 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_unary_expression1869 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_unary_expression_in_unary_expression1871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MINUS_in_unary_expression1876 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_unary_expression_in_unary_expression1878 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BANG_in_unary_expression1883 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_unary_expression_in_unary_expression1885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TILDE_in_unary_expression1890 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_unary_expression_in_unary_expression1892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pre_increment_expression_in_unary_expression1897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pre_decrement_expression_in_unary_expression1902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unary_expression_unsafe_in_unary_expression1907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_scan_for_cast_generic_precedence1921 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_scan_for_cast_generic_precedence1923 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_scan_for_cast_generic_precedence1925 = new BitSet(new long[]{0xFDF0146860FDD810L,0x000019260C03FC10L,0xC07D931E000001CEL,0x0000000013B8007FL});
    public static final BitSet FOLLOW_cast_disambiguation_token_in_scan_for_cast_generic_precedence1927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TILDE_in_cast_disambiguation_token1943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BANG_in_cast_disambiguation_token1947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_cast_disambiguation_token1951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_cast_disambiguation_token1955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_literal_in_cast_disambiguation_token1959 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACT_in_cast_disambiguation_token1963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BASE_in_cast_disambiguation_token1967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOL_in_cast_disambiguation_token1971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BREAK_in_cast_disambiguation_token1975 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BYTE_in_cast_disambiguation_token1979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_in_cast_disambiguation_token1983 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CATCH_in_cast_disambiguation_token1987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_in_cast_disambiguation_token1995 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHECKED_in_cast_disambiguation_token1999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_in_cast_disambiguation_token2003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CONST_in_cast_disambiguation_token2007 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CONTINUE_in_cast_disambiguation_token2011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECIMAL_in_cast_disambiguation_token2015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DEFAULT_in_cast_disambiguation_token2019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELEGATE_in_cast_disambiguation_token2023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DO_in_cast_disambiguation_token2027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOUBLE_in_cast_disambiguation_token2031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_in_cast_disambiguation_token2035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ENUM_in_cast_disambiguation_token2039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EVENT_in_cast_disambiguation_token2047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXPLICIT_in_cast_disambiguation_token2051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTERN_in_cast_disambiguation_token2055 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FINALLY_in_cast_disambiguation_token2059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FIXED_in_cast_disambiguation_token2063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOAT_in_cast_disambiguation_token2067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_in_cast_disambiguation_token2071 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOREACH_in_cast_disambiguation_token2075 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GOTO_in_cast_disambiguation_token2079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_in_cast_disambiguation_token2083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPLICIT_in_cast_disambiguation_token2087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_in_cast_disambiguation_token2091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INT_in_cast_disambiguation_token2095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_in_cast_disambiguation_token2103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERNAL_in_cast_disambiguation_token2107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LOCK_in_cast_disambiguation_token2111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LONG_in_cast_disambiguation_token2115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAMESPACE_in_cast_disambiguation_token2119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_cast_disambiguation_token2123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_in_cast_disambiguation_token2127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPERATOR_in_cast_disambiguation_token2131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUT_in_cast_disambiguation_token2135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OVERRIDE_in_cast_disambiguation_token2139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PARAMS_in_cast_disambiguation_token2143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_cast_disambiguation_token2151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTECTED_in_cast_disambiguation_token2155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PUBLIC_in_cast_disambiguation_token2159 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_READONLY_in_cast_disambiguation_token2163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REF_in_cast_disambiguation_token2167 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RETURN_in_cast_disambiguation_token2171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SBYTE_in_cast_disambiguation_token2175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEALED_in_cast_disambiguation_token2179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SHORT_in_cast_disambiguation_token2183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SIZEOF_in_cast_disambiguation_token2187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STACKALLOC_in_cast_disambiguation_token2191 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_cast_disambiguation_token2199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_cast_disambiguation_token2203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRUCT_in_cast_disambiguation_token2207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SWITCH_in_cast_disambiguation_token2211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THIS_in_cast_disambiguation_token2215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THROW_in_cast_disambiguation_token2219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TRY_in_cast_disambiguation_token2223 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPEOF_in_cast_disambiguation_token2227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UINT_in_cast_disambiguation_token2231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ULONG_in_cast_disambiguation_token2235 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNCHECKED_in_cast_disambiguation_token2239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_cast_disambiguation_token2243 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_USHORT_in_cast_disambiguation_token2251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_USING_in_cast_disambiguation_token2255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VIRTUAL_in_cast_disambiguation_token2259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_in_cast_disambiguation_token2263 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOLATILE_in_cast_disambiguation_token2267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_WHILE_in_cast_disambiguation_token2271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_INC_in_pre_increment_expression2289 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_unary_expression_in_pre_increment_expression2291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_DEC_in_pre_decrement_expression2302 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_unary_expression_in_pre_decrement_expression2304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_cast_expression2315 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_cast_expression2317 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_cast_expression2319 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_unary_expression_in_cast_expression2321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unary_expression_in_multiplicative_expression2332 = new BitSet(new long[]{0x0000020000000002L,0x0000000000000000L,0x0002000000000010L});
    public static final BitSet FOLLOW_STAR_in_multiplicative_expression2338 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_unary_expression_in_multiplicative_expression2341 = new BitSet(new long[]{0x0000020000000002L,0x0000000000000000L,0x0002000000000010L});
    public static final BitSet FOLLOW_DIV_in_multiplicative_expression2349 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_unary_expression_in_multiplicative_expression2352 = new BitSet(new long[]{0x0000020000000002L,0x0000000000000000L,0x0002000000000010L});
    public static final BitSet FOLLOW_PERCENT_in_multiplicative_expression2360 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_unary_expression_in_multiplicative_expression2363 = new BitSet(new long[]{0x0000020000000002L,0x0000000000000000L,0x0002000000000010L});
    public static final BitSet FOLLOW_multiplicative_expression_in_additive_expression2379 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_PLUS_in_additive_expression2385 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_multiplicative_expression_in_additive_expression2388 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_MINUS_in_additive_expression2396 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_multiplicative_expression_in_additive_expression2399 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_additive_expression_in_shift_expression2415 = new BitSet(new long[]{0x0000000000000002L,0x0080000000000020L});
    public static final BitSet FOLLOW_OP_LEFT_SHIFT_in_shift_expression2421 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_additive_expression_in_shift_expression2424 = new BitSet(new long[]{0x0000000000000002L,0x0080000000000020L});
    public static final BitSet FOLLOW_right_shift_in_shift_expression2432 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_additive_expression_in_shift_expression2435 = new BitSet(new long[]{0x0000000000000002L,0x0080000000000020L});
    public static final BitSet FOLLOW_shift_expression_in_relational_expression2453 = new BitSet(new long[]{0x0000000000000042L,0x0050000010080020L});
    public static final BitSet FOLLOW_LT_in_relational_expression2457 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_shift_expression_in_relational_expression2459 = new BitSet(new long[]{0x0000000000000042L,0x0050000010080020L});
    public static final BitSet FOLLOW_GT_in_relational_expression2484 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_shift_expression_in_relational_expression2486 = new BitSet(new long[]{0x0000000000000042L,0x0050000010080020L});
    public static final BitSet FOLLOW_OP_LE_in_relational_expression2511 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_shift_expression_in_relational_expression2513 = new BitSet(new long[]{0x0000000000000042L,0x0050000010080020L});
    public static final BitSet FOLLOW_OP_GE_in_relational_expression2538 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_shift_expression_in_relational_expression2540 = new BitSet(new long[]{0x0000000000000042L,0x0050000010080020L});
    public static final BitSet FOLLOW_IS_in_relational_expression2565 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_isType_in_relational_expression2567 = new BitSet(new long[]{0x0000000000000042L,0x0050000010080020L});
    public static final BitSet FOLLOW_AS_in_relational_expression2592 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_relational_expression2594 = new BitSet(new long[]{0x0000000000000042L,0x0050000010080020L});
    public static final BitSet FOLLOW_IDENTIFIER_in_scan_for_shift_generic_precedence2630 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_LT_in_scan_for_shift_generic_precedence2632 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_scan_for_shift_generic_precedence2634 = new BitSet(new long[]{0x0000000010000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_COMMA_in_scan_for_shift_generic_precedence2637 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_scan_for_shift_generic_precedence2639 = new BitSet(new long[]{0x0000000010000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_GT_in_scan_for_shift_generic_precedence2643 = new BitSet(new long[]{0x000008001E000000L,0x0808080000040020L,0x0000040000000000L});
    public static final BitSet FOLLOW_shift_disambiguation_token_in_scan_for_shift_generic_precedence2645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_non_nullable_value_type_in_isType2713 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_INTERR_in_isType2725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_relational_expression_in_equality_expression2762 = new BitSet(new long[]{0x0000000000000002L,0x0808000000000000L});
    public static final BitSet FOLLOW_OP_EQ_in_equality_expression2768 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_relational_expression_in_equality_expression2771 = new BitSet(new long[]{0x0000000000000002L,0x0808000000000000L});
    public static final BitSet FOLLOW_OP_NE_in_equality_expression2779 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_relational_expression_in_equality_expression2782 = new BitSet(new long[]{0x0000000000000002L,0x0808000000000000L});
    public static final BitSet FOLLOW_equality_expression_in_and_expression2798 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_AMP_in_and_expression2802 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_equality_expression_in_and_expression2804 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_and_expression_in_exclusive_or_expression2817 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_CARET_in_exclusive_or_expression2821 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_and_expression_in_exclusive_or_expression2823 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression2836 = new BitSet(new long[]{0x0000000000002002L});
    public static final BitSet FOLLOW_BITWISE_OR_in_inclusive_or_expression2840 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression2842 = new BitSet(new long[]{0x0000000000002002L});
    public static final BitSet FOLLOW_inclusive_or_expression_in_conditional_and_expression2855 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
    public static final BitSet FOLLOW_OP_AND_in_conditional_and_expression2859 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_inclusive_or_expression_in_conditional_and_expression2861 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
    public static final BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression2874 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_OP_OR_in_conditional_or_expression2878 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression2880 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_conditional_or_expression_in_null_coalescing_expression2896 = new BitSet(new long[]{0x0000000000000002L,0x0001000000000000L});
    public static final BitSet FOLLOW_OP_COALESCING_in_null_coalescing_expression2899 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_null_coalescing_expression_in_null_coalescing_expression2901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_null_coalescing_expression_in_conditional_expression2920 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_INTERR_in_conditional_expression2923 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_conditional_expression2925 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_COLON_in_conditional_expression2927 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_conditional_expression2929 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymous_function_signature_in_lambda_expression2945 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_right_arrow_in_lambda_expression2947 = new BitSet(new long[]{0x2400106800715820L,0x00220B250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_anonymous_function_body_in_lambda_expression2949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELEGATE_in_anonymous_method_expression2962 = new BitSet(new long[]{0x0000000000000000L,0x00000A0000000000L});
    public static final BitSet FOLLOW_explicit_anonymous_function_signature_in_anonymous_method_expression2964 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_block_in_anonymous_method_expression2967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_anonymous_function_signature2983 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_anonymous_function_signature2985 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_anonymous_function_signature2991 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110800000002L,0x0000000001100030L});
    public static final BitSet FOLLOW_explicit_anonymous_function_parameter_list_in_anonymous_function_signature2993 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_anonymous_function_signature2995 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_anonymous_function_signature3001 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3003 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_anonymous_function_signature3005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_implicit_anonymous_function_parameter_in_anonymous_function_signature3011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_explicit_anonymous_function_signature3023 = new BitSet(new long[]{0x2000100804114000L,0x0000010008004400L,0x0008110800000002L,0x0000000001100030L});
    public static final BitSet FOLLOW_explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature3025 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_explicit_anonymous_function_signature3028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list3039 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_explicit_anonymous_function_parameter_list3043 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110800000002L,0x0000000001100030L});
    public static final BitSet FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list3045 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter3058 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_explicit_anonymous_function_parameter3061 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_explicit_anonymous_function_parameter3063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_implicit_anonymous_function_signature3090 = new BitSet(new long[]{0x0000000004000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_implicit_anonymous_function_parameter_list_in_implicit_anonymous_function_signature3092 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_implicit_anonymous_function_signature3095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_signature3100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3111 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_implicit_anonymous_function_parameter_list3115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3117 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_implicit_anonymous_function_parameter3132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_anonymous_function_body3143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_anonymous_function_body3148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_from_clause_in_query_expression3161 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_query_body_in_query_expression3163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_from_contextual_keyword_in_from_clause3174 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_from_clause3187 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_from_clause3191 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_IN_in_from_clause3193 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_from_clause3195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_query_body_clauses_in_query_body3209 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_select_or_group_clause_in_query_body3212 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_query_continuation_in_query_body3221 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_query_body_clause_in_query_body_clauses3235 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_query_body_clause_in_query_body_clauses3239 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_from_clause_in_query_body_clause3256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_let_clause_in_query_body_clause3262 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_where_clause_in_query_body_clause3268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_combined_join_clause_in_query_body_clause3274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_orderby_clause_in_query_body_clause3280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_let_contextual_keyword_in_let_clause3292 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_let_clause3294 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_let_clause3296 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_let_clause3298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_where_contextual_keyword_in_where_clause3309 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_boolean_expression_in_where_clause3311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_join_contextual_keyword_in_join_clause3322 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_join_clause3324 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_join_clause3327 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_IN_in_join_clause3329 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_join_clause3331 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_on_contextual_keyword_in_join_clause3333 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_join_clause3335 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_equals_contextual_keyword_in_join_clause3337 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_join_clause3339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_join_contextual_keyword_in_join_into_clause3350 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_join_into_clause3352 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_join_into_clause3355 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_IN_in_join_into_clause3357 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_join_into_clause3359 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_on_contextual_keyword_in_join_into_clause3361 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_join_into_clause3363 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_equals_contextual_keyword_in_join_into_clause3365 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_join_into_clause3367 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_into_contextual_keyword_in_join_into_clause3369 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_join_into_clause3371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_join_contextual_keyword_in_combined_join_clause3383 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_combined_join_clause3385 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_combined_join_clause3388 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_IN_in_combined_join_clause3390 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_combined_join_clause3392 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_on_contextual_keyword_in_combined_join_clause3394 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_combined_join_clause3396 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_equals_contextual_keyword_in_combined_join_clause3398 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_combined_join_clause3400 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_into_contextual_keyword_in_combined_join_clause3403 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_combined_join_clause3405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_orderby_contextual_keyword_in_orderby_clause3419 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_orderings_in_orderby_clause3421 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ordering_in_orderings3432 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_orderings3436 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_ordering_in_orderings3439 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_expression_in_ordering3453 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_ordering_direction_in_ordering3455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ascending_contextual_keyword_in_ordering_direction3467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_descending_contextual_keyword_in_ordering_direction3472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_select_clause_in_select_or_group_clause3483 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_group_clause_in_select_or_group_clause3488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_select_contextual_keyword_in_select_clause3499 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_select_clause3501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_group_contextual_keyword_in_group_clause3512 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_group_clause3514 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_by_contextual_keyword_in_group_clause3516 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_group_clause3518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_into_contextual_keyword_in_query_continuation3531 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_query_continuation3533 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_query_body_in_query_continuation3535 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unary_expression_in_assignment3548 = new BitSet(new long[]{0x0000000000000080L,0xA704A00000000020L,0x0000000000000001L});
    public static final BitSet FOLLOW_assignment_operator_in_assignment3550 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_assignment3552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_assignment_operator3563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_ADD_ASSIGNMENT_in_assignment_operator3568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_SUB_ASSIGNMENT_in_assignment_operator3573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_MULT_ASSIGNMENT_in_assignment_operator3578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_DIV_ASSIGNMENT_in_assignment_operator3583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_MOD_ASSIGNMENT_in_assignment_operator3588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_AND_ASSIGNMENT_in_assignment_operator3593 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_OR_ASSIGNMENT_in_assignment_operator3598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_XOR_ASSIGNMENT_in_assignment_operator3603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_LEFT_SHIFT_ASSIGNMENT_in_assignment_operator3608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_right_shift_assignment_in_assignment_operator3613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignment_in_expression3630 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_non_assignment_expression_in_expression3635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lambda_expression_in_non_assignment_expression3651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_query_expression_in_non_assignment_expression3662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditional_expression_in_non_assignment_expression3667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_constant_expression3678 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_boolean_expression3689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_labeled_statement_in_statement3708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_statement_in_statement3719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_embedded_statement_in_statement3724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_embedded_statement3735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_empty_statement_in_embedded_statement3740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_statement_in_embedded_statement3745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selection_statement_in_embedded_statement3750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iteration_statement_in_embedded_statement3755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_jump_statement_in_embedded_statement3760 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_try_statement_in_embedded_statement3765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_checked_statement_in_embedded_statement3770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unchecked_statement_in_embedded_statement3775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lock_statement_in_embedded_statement3780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_using_statement_in_embedded_statement3785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_yield_statement_in_embedded_statement3790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_embedded_statement_unsafe_in_embedded_statement3795 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_block3808 = new BitSet(new long[]{0xF40014686171D820L,0x00220B250C00CC10L,0xC05A951400000020L,0x000000001138007FL});
    public static final BitSet FOLLOW_statement_list_in_block3810 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_block3813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_statement_list3824 = new BitSet(new long[]{0xF40014686071D822L,0x00220B250C00CC10L,0xC05A951400000020L,0x000000001138007FL});
    public static final BitSet FOLLOW_SEMICOLON_in_empty_statement3836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_labeled_statement3849 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_COLON_in_labeled_statement3851 = new BitSet(new long[]{0xF40014686071D820L,0x00220B250C00CC10L,0xC05A951400000020L,0x000000001138007FL});
    public static final BitSet FOLLOW_statement_in_labeled_statement3853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declaration_in_declaration_statement3866 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_declaration_statement3868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_constant_declaration_in_declaration_statement3873 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_declaration_statement3875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_type_in_local_variable_declaration3888 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_local_variable_declarators_in_local_variable_declaration3891 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_local_variable_type3904 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators3918 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_local_variable_declarators3922 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators3925 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_local_variable_declarator3942 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_local_variable_declarator3946 = new BitSet(new long[]{0x2400106800715820L,0x00220B250800C400L,0x401B910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_local_variable_initializer_in_local_variable_declarator3948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_local_variable_initializer3961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_array_initializer_in_local_variable_initializer3966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_initializer_unsafe_in_local_variable_initializer3971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CONST_in_local_constant_declaration3982 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_local_constant_declaration3984 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_constant_declarators_in_local_constant_declaration3986 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_expression_in_expression_statement3996 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_expression_statement3998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_statement_expression4013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_if_statement_in_selection_statement4022 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switch_statement_in_selection_statement4027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_in_if_statement4041 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_if_statement4043 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_boolean_expression_in_if_statement4045 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_if_statement4047 = new BitSet(new long[]{0xF40014684071D820L,0x00220B250C00CC10L,0xC05A951400000020L,0x000000001038007FL});
    public static final BitSet FOLLOW_embedded_statement_in_if_statement4049 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_ELSE_in_if_statement4059 = new BitSet(new long[]{0xF40014684071D820L,0x00220B250C00CC10L,0xC05A951400000020L,0x000000001038007FL});
    public static final BitSet FOLLOW_embedded_statement_in_if_statement4061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SWITCH_in_switch_statement4076 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_switch_statement4078 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_switch_statement4080 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_switch_statement4082 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_switch_block_in_switch_statement4084 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_switch_block4095 = new BitSet(new long[]{0x0000002001040000L});
    public static final BitSet FOLLOW_switch_sections_in_switch_block4097 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_switch_block4100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switch_section_in_switch_sections4111 = new BitSet(new long[]{0x0000002000040002L});
    public static final BitSet FOLLOW_switch_section_in_switch_sections4115 = new BitSet(new long[]{0x0000002000040002L});
    public static final BitSet FOLLOW_switch_labels_in_switch_section4129 = new BitSet(new long[]{0xF40014686071D820L,0x00220B250C00CC10L,0xC05A951400000020L,0x000000001138007FL});
    public static final BitSet FOLLOW_statement_list_in_switch_section4131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switch_label_in_switch_labels4142 = new BitSet(new long[]{0x0000002000040002L});
    public static final BitSet FOLLOW_switch_label_in_switch_labels4146 = new BitSet(new long[]{0x0000002000040002L});
    public static final BitSet FOLLOW_CASE_in_switch_label4160 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_constant_expression_in_switch_label4162 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_COLON_in_switch_label4164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DEFAULT_in_switch_label4169 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_COLON_in_switch_label4171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_while_statement_in_iteration_statement4182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_do_statement_in_iteration_statement4187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_for_statement_in_iteration_statement4192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_foreach_statement_in_iteration_statement4197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_WHILE_in_while_statement4208 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_while_statement4210 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_boolean_expression_in_while_statement4212 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_while_statement4214 = new BitSet(new long[]{0xF40014684071D820L,0x00220B250C00CC10L,0xC05A951400000020L,0x000000001038007FL});
    public static final BitSet FOLLOW_embedded_statement_in_while_statement4216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DO_in_do_statement4227 = new BitSet(new long[]{0xF40014684071D820L,0x00220B250C00CC10L,0xC05A951400000020L,0x000000001038007FL});
    public static final BitSet FOLLOW_embedded_statement_in_do_statement4229 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_WHILE_in_do_statement4231 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_do_statement4233 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_boolean_expression_in_do_statement4235 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_do_statement4237 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_do_statement4239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_in_for_statement4250 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_for_statement4252 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A950400000020L,0x000000000110007BL});
    public static final BitSet FOLLOW_for_initializer_in_for_statement4254 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_for_statement4257 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A950400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_for_condition_in_for_statement4259 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_for_statement4262 = new BitSet(new long[]{0x2400106804715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_for_iterator_in_for_statement4264 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_for_statement4267 = new BitSet(new long[]{0xF40014684071D820L,0x00220B250C00CC10L,0xC05A951400000020L,0x000000001038007FL});
    public static final BitSet FOLLOW_embedded_statement_in_for_statement4269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declaration_in_for_initializer4286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_expression_list_in_for_initializer4291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_boolean_expression_in_for_condition4302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_expression_list_in_for_iterator4313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_expression_in_statement_expression_list4324 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_statement_expression_list4328 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_statement_expression_in_statement_expression_list4331 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_FOREACH_in_foreach_statement4345 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_foreach_statement4347 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_local_variable_type_in_foreach_statement4349 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_foreach_statement4351 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_IN_in_foreach_statement4353 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_foreach_statement4355 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_foreach_statement4357 = new BitSet(new long[]{0xF40014684071D820L,0x00220B250C00CC10L,0xC05A951400000020L,0x000000001038007FL});
    public static final BitSet FOLLOW_embedded_statement_in_foreach_statement4359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_break_statement_in_jump_statement4370 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continue_statement_in_jump_statement4375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_goto_statement_in_jump_statement4380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_return_statement_in_jump_statement4385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throw_statement_in_jump_statement4390 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BREAK_in_break_statement4401 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_break_statement4403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CONTINUE_in_continue_statement4414 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_continue_statement4416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GOTO_in_goto_statement4427 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_goto_statement4429 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_goto_statement4431 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GOTO_in_goto_statement4436 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CASE_in_goto_statement4438 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_constant_expression_in_goto_statement4440 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_goto_statement4442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GOTO_in_goto_statement4447 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_DEFAULT_in_goto_statement4449 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_goto_statement4451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RETURN_in_return_statement4462 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A950400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_return_statement4464 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_return_statement4467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THROW_in_throw_statement4478 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A950400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_throw_statement4480 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_throw_statement4483 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TRY_in_try_statement4497 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_block_in_try_statement4499 = new BitSet(new long[]{0x0800000000080002L});
    public static final BitSet FOLLOW_catch_clauses_in_try_statement4501 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_finally_clause_in_try_statement4504 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specific_catch_clauses_in_catch_clauses4520 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_general_catch_clause_in_catch_clauses4522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_general_catch_clause_in_catch_clauses4529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specific_catch_clause_in_specific_catch_clauses4541 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_specific_catch_clause_in_specific_catch_clauses4545 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_CATCH_in_specific_catch_clause4559 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_specific_catch_clause4561 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000400L,0x0008000000000000L});
    public static final BitSet FOLLOW_class_type_in_specific_catch_clause4563 = new BitSet(new long[]{0x0000000004000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_specific_catch_clause4565 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_specific_catch_clause4568 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_block_in_specific_catch_clause4570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CATCH_in_general_catch_clause4581 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_block_in_general_catch_clause4583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FINALLY_in_finally_clause4594 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_block_in_finally_clause4596 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHECKED_in_checked_statement4607 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_block_in_checked_statement4609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNCHECKED_in_unchecked_statement4620 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_block_in_unchecked_statement4622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LOCK_in_lock_statement4633 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_lock_statement4635 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_lock_statement4637 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_lock_statement4639 = new BitSet(new long[]{0xF40014684071D820L,0x00220B250C00CC10L,0xC05A951400000020L,0x000000001038007FL});
    public static final BitSet FOLLOW_embedded_statement_in_lock_statement4641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_USING_in_using_statement4652 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_using_statement4654 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000110007BL});
    public static final BitSet FOLLOW_resource_acquisition_in_using_statement4656 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_using_statement4658 = new BitSet(new long[]{0xF40014684071D820L,0x00220B250C00CC10L,0xC05A951400000020L,0x000000001038007FL});
    public static final BitSet FOLLOW_embedded_statement_in_using_statement4660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declaration_in_resource_acquisition4679 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_resource_acquisition4684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_yield_contextual_keyword_in_yield_statement4695 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_RETURN_in_yield_statement4697 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_yield_statement4699 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_yield_statement4701 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_yield_contextual_keyword_in_yield_statement4706 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_BREAK_in_yield_statement4708 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_yield_statement4710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_extern_alias_directives_in_compilation_unit4729 = new BitSet(new long[]{0x0120004000800010L,0x0000040600030400L,0x00240202000001C4L,0x0000000002A80000L});
    public static final BitSet FOLLOW_using_directives_in_compilation_unit4732 = new BitSet(new long[]{0x0120004000800010L,0x0000040600030400L,0x00240202000001C4L,0x0000000002880000L});
    public static final BitSet FOLLOW_global_attribute_section_in_compilation_unit4747 = new BitSet(new long[]{0x0120004000800010L,0x0000040600030400L,0x00240202000001C4L,0x0000000002880000L});
    public static final BitSet FOLLOW_namespace_member_declarations_in_compilation_unit4756 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_compilation_unit4759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAMESPACE_in_namespace_declaration4771 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_qualified_identifier_in_namespace_declaration4775 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_namespace_body_in_namespace_declaration4777 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_namespace_declaration4779 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_qualified_identifier4791 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DOT_in_qualified_identifier4795 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_qualified_identifier4798 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_namespace_body4812 = new BitSet(new long[]{0x0120004001800010L,0x0000040600030400L,0x00240202000001C4L,0x0000000002A80000L});
    public static final BitSet FOLLOW_extern_alias_directives_in_namespace_body4814 = new BitSet(new long[]{0x0120004001800010L,0x0000040600030400L,0x00240202000001C4L,0x0000000002A80000L});
    public static final BitSet FOLLOW_using_directives_in_namespace_body4817 = new BitSet(new long[]{0x0120004001800010L,0x0000040600030400L,0x00240202000001C4L,0x0000000002880000L});
    public static final BitSet FOLLOW_namespace_member_declarations_in_namespace_body4820 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_namespace_body4823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_extern_alias_directive_in_extern_alias_directives4834 = new BitSet(new long[]{0x0100000000000002L});
    public static final BitSet FOLLOW_EXTERN_in_extern_alias_directive4846 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_alias_contextual_keyword_in_extern_alias_directive4848 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_extern_alias_directive4850 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_extern_alias_directive4852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_using_directive_in_using_directives4863 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_using_alias_directive_in_using_directive4875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_using_namespace_directive_in_using_directive4880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_USING_in_using_alias_directive4891 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_using_alias_directive4893 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_using_alias_directive4895 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_namespace_or_type_name_in_using_alias_directive4897 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_using_alias_directive4899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_USING_in_using_namespace_directive4910 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_namespace_name_in_using_namespace_directive4912 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_using_namespace_directive4914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namespace_member_declaration_in_namespace_member_declarations4925 = new BitSet(new long[]{0x0120004000800012L,0x0000040600030400L,0x00240202000001C4L,0x0000000002880000L});
    public static final BitSet FOLLOW_namespace_declaration_in_namespace_member_declaration4937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_declaration_in_namespace_member_declaration4942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_type_declaration4956 = new BitSet(new long[]{0x0120004000800010L,0x0000000400030400L,0x00240202000001C4L,0x0000000002880000L});
    public static final BitSet FOLLOW_all_member_modifiers_in_type_declaration4959 = new BitSet(new long[]{0x0020004000800000L,0x0000000000010000L,0x0020000000000000L});
    public static final BitSet FOLLOW_class_definition_in_type_declaration4968 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_definition_in_type_declaration4976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_definition_in_type_declaration4984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_definition_in_type_declaration4992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_definition_in_type_declaration5000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_qualified_alias_member5020 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_DOUBLE_COLON_in_qualified_alias_member5022 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_qualified_alias_member5024 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_type_argument_list_opt_in_qualified_alias_member5026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_class_declaration5040 = new BitSet(new long[]{0x0000000000800010L,0x0000000400020400L,0x00040200000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_class_modifiers_in_class_declaration5043 = new BitSet(new long[]{0x0000000000800000L,0x0000000000000400L});
    public static final BitSet FOLLOW_partial_contextual_keyword_in_class_declaration5046 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_CLASS_in_class_declaration5049 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_class_declaration5051 = new BitSet(new long[]{0x0000000008000000L,0x0000020010000400L});
    public static final BitSet FOLLOW_type_parameter_list_in_class_declaration5053 = new BitSet(new long[]{0x0000000008000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_class_base_in_class_declaration5061 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_class_declaration5064 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_class_body_in_class_declaration5067 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_class_declaration5069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_modifier_in_class_modifiers5081 = new BitSet(new long[]{0x0000000000000012L,0x0000000400020000L,0x00040200000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_class_modifier_in_class_modifiers5085 = new BitSet(new long[]{0x0000000000000012L,0x0000000400020000L,0x00040200000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_NEW_in_class_modifier5099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PUBLIC_in_class_modifier5104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTECTED_in_class_modifier5109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERNAL_in_class_modifier5114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_class_modifier5119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACT_in_class_modifier5124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEALED_in_class_modifier5129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_class_modifier5134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_modifier_unsafe_in_class_modifier5139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LT_in_type_parameter_list5150 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000400L});
    public static final BitSet FOLLOW_type_parameters_in_type_parameter_list5152 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_GT_in_type_parameter_list5154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_type_parameters5165 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_type_parameter_in_type_parameters5168 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_type_parameters5172 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000400L});
    public static final BitSet FOLLOW_attributes_in_type_parameters5175 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_type_parameter_in_type_parameters5179 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_type_parameter5195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COLON_in_class_base5210 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000400L,0x0008000000000000L});
    public static final BitSet FOLLOW_class_type_in_class_base5212 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_class_base5216 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_interface_type_in_class_base5219 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_interface_type_in_interface_type_list5234 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_interface_type_list5238 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_interface_type_in_interface_type_list5241 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses5255 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses5259 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_where_contextual_keyword_in_type_parameter_constraints_clause5273 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_type_parameter_in_type_parameter_constraints_clause5275 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_COLON_in_type_parameter_constraints_clause5277 = new BitSet(new long[]{0x0000000000800000L,0x0000010400000400L,0x0028000000000000L});
    public static final BitSet FOLLOW_type_parameter_constraints_in_type_parameter_constraints_clause5279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_constraint_in_type_parameter_constraints5293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_constraint_in_type_parameter_constraints5299 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_type_parameter_constraints5302 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_secondary_constraints_in_type_parameter_constraints5304 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_type_parameter_constraints5309 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_constructor_constraint_in_type_parameter_constraints5311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_type_in_primary_constraint5325 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_in_primary_constraint5330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRUCT_in_primary_constraint5335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_type_in_secondary_constraints5349 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_secondary_constraints5352 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_interface_type_in_secondary_constraints5354 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_NEW_in_constructor_constraint5368 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_constructor_constraint5370 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_constructor_constraint5372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_class_body5383 = new BitSet(new long[]{0x21E0104821914010L,0x0000050408035400L,0x002C1302000001C4L,0x0000000003980031L});
    public static final BitSet FOLLOW_class_member_declarations_in_class_body5385 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_class_body5388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_member_declaration_in_class_member_declarations5399 = new BitSet(new long[]{0x21E0104820914012L,0x0000050408035400L,0x002C1302000001C4L,0x0000000003980031L});
    public static final BitSet FOLLOW_attributes_in_class_member_declaration5414 = new BitSet(new long[]{0x21E0104820914010L,0x0000010408035400L,0x002C1302000001C4L,0x0000000003980031L});
    public static final BitSet FOLLOW_all_member_modifiers_in_class_member_declaration5417 = new BitSet(new long[]{0x20E0104820914000L,0x0000010008015400L,0x0028110000000000L,0x0000000001100031L});
    public static final BitSet FOLLOW_common_member_declaration_in_class_member_declaration5425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TILDE_in_class_member_declaration5432 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_class_member_declaration5434 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_class_member_declaration5436 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_class_member_declaration5438 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_destructor_body_in_class_member_declaration5440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_all_member_modifier_in_all_member_modifiers5462 = new BitSet(new long[]{0x0100000000000012L,0x0000000400020400L,0x00040202000001C4L,0x0000000002880000L});
    public static final BitSet FOLLOW_NEW_in_all_member_modifier5476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PUBLIC_in_all_member_modifier5482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTECTED_in_all_member_modifier5488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERNAL_in_all_member_modifier5494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_all_member_modifier5500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_READONLY_in_all_member_modifier5506 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOLATILE_in_all_member_modifier5512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VIRTUAL_in_all_member_modifier5518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEALED_in_all_member_modifier5524 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OVERRIDE_in_all_member_modifier5530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACT_in_all_member_modifier5536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_all_member_modifier5542 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_all_member_modifier5548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTERN_in_all_member_modifier5554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_partial_contextual_keyword_in_all_member_modifier5560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_declaration2_in_common_member_declaration5577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typed_member_declaration_in_common_member_declaration5583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EVENT_in_common_member_declaration5589 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_common_member_declaration5591 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_variable_declarators_in_common_member_declaration5595 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_common_member_declaration5597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_common_member_declaration5618 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_common_member_declaration5620 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000400L});
    public static final BitSet FOLLOW_event_accessor_declarations_in_common_member_declaration5622 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_common_member_declaration5624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conversion_operator_declarator_in_common_member_declaration5649 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_operator_body_in_common_member_declaration5651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_common_member_declaration5662 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_common_member_declaration5664 = new BitSet(new long[]{0x2000100804114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_common_member_declaration5666 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_common_member_declaration5669 = new BitSet(new long[]{0x0000000008000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_constructor_initializer_in_common_member_declaration5671 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_body_in_common_member_declaration5674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_in_common_member_declaration5680 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_method_definition_in_common_member_declaration5682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_in_common_member_declaration5688 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_common_member_declaration5692 = new BitSet(new long[]{0x0000000008000000L,0x0000020010000400L});
    public static final BitSet FOLLOW_type_parameter_list_in_common_member_declaration5694 = new BitSet(new long[]{0x0000000008000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_class_base_in_common_member_declaration5697 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_common_member_declaration5700 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_class_body_in_common_member_declaration5703 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_common_member_declaration5705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRUCT_in_common_member_declaration5712 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_common_member_declaration5714 = new BitSet(new long[]{0x0000000008000000L,0x0000020010000400L});
    public static final BitSet FOLLOW_type_parameter_list_in_common_member_declaration5716 = new BitSet(new long[]{0x0000000008000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_struct_interfaces_in_common_member_declaration5719 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_common_member_declaration5722 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_struct_body_in_common_member_declaration5725 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_common_member_declaration5727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_in_common_member_declaration5734 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_common_member_declaration5736 = new BitSet(new long[]{0x0000000008000000L,0x0000020010000400L});
    public static final BitSet FOLLOW_variant_type_parameter_list_in_common_member_declaration5738 = new BitSet(new long[]{0x0000000008000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_interface_base_in_common_member_declaration5741 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_common_member_declaration5744 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_interface_body_in_common_member_declaration5747 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_common_member_declaration5749 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ENUM_in_common_member_declaration5756 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_common_member_declaration5758 = new BitSet(new long[]{0x0000000008000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_enum_base_in_common_member_declaration5760 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_enum_body_in_common_member_declaration5763 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_common_member_declaration5765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELEGATE_in_common_member_declaration5772 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_return_type_in_common_member_declaration5774 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_common_member_declaration5776 = new BitSet(new long[]{0x0000000000000000L,0x0000080010000000L});
    public static final BitSet FOLLOW_type_parameter_list_in_common_member_declaration5778 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_common_member_declaration5781 = new BitSet(new long[]{0x2000100804114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_common_member_declaration5783 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_common_member_declaration5786 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000040000000000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_common_member_declaration5788 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_common_member_declaration5791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typed_member_declaration5806 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000400L,0x4000000000000000L});
    public static final BitSet FOLLOW_interface_type_in_typed_member_declaration5832 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_DOT_in_typed_member_declaration5834 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_THIS_in_typed_member_declaration5836 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_typed_member_declaration5838 = new BitSet(new long[]{0x2000100800114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_typed_member_declaration5840 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_typed_member_declaration5842 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_typed_member_declaration5844 = new BitSet(new long[]{0x0000000000000000L,0x0000040000020400L,0x00000000000000C0L});
    public static final BitSet FOLLOW_accessor_declarations_in_typed_member_declaration5846 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_typed_member_declaration5848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_definition_in_typed_member_declaration5867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_declaration2_in_typed_member_declaration5883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THIS_in_typed_member_declaration5891 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_typed_member_declaration5893 = new BitSet(new long[]{0x2000100800114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_typed_member_declaration5895 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_typed_member_declaration5897 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_typed_member_declaration5899 = new BitSet(new long[]{0x0000000000000000L,0x0000040000020400L,0x00000000000000C0L});
    public static final BitSet FOLLOW_accessor_declarations_in_typed_member_declaration5901 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_typed_member_declaration5903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_operator_declaration2_in_typed_member_declaration5911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_field_declaration2_in_typed_member_declaration5919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_declarator_in_constant_declarators5939 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_constant_declarators5943 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_constant_declarator_in_constant_declarators5946 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_constant_declarator5960 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_constant_declarator5962 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_constant_expression_in_constant_declarator5964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_declarator_in_variable_declarators5978 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_variable_declarators5982 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_variable_declarator_in_variable_declarators5985 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_variable_declarator5999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_variable_declarator6004 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_variable_declarator6006 = new BitSet(new long[]{0x2400106800715820L,0x00220B250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_variable_initializer_in_variable_declarator6008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_variable_initializer6019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_array_initializer_in_variable_initializer6024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_header_in_method_declaration6035 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_method_body_in_method_declaration6037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_method_header6048 = new BitSet(new long[]{0x2100100800114010L,0x0000010408024400L,0x000C1300000001C4L,0x0000000001980030L});
    public static final BitSet FOLLOW_method_modifiers_in_method_header6051 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_partial_contextual_keyword_in_method_header6054 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_return_type_in_method_header6057 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_member_name_in_method_header6059 = new BitSet(new long[]{0x0000000000000000L,0x0000080010000000L});
    public static final BitSet FOLLOW_type_parameter_list_in_method_header6061 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_method_header6064 = new BitSet(new long[]{0x2000100804114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_method_header6066 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_method_header6069 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_method_header6071 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_modifier_in_method_modifiers6083 = new BitSet(new long[]{0x0100000000000012L,0x0000000400020000L,0x00040200000001C4L,0x0000000000880000L});
    public static final BitSet FOLLOW_NEW_in_method_modifier6095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PUBLIC_in_method_modifier6100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTECTED_in_method_modifier6105 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERNAL_in_method_modifier6110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_method_modifier6115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_method_modifier6120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VIRTUAL_in_method_modifier6125 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEALED_in_method_modifier6130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OVERRIDE_in_method_modifier6135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACT_in_method_modifier6140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTERN_in_method_modifier6145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_modifier_unsafe_in_method_modifier6150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_return_type6163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_in_return_type6168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_type_in_member_name6184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_method_body6196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_method_body6201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_array_in_formal_parameter_list6224 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fixed_parameters_in_formal_parameter_list6230 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_formal_parameter_list6242 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_parameter_array_in_formal_parameter_list6244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fixed_parameter_in_fixed_parameters6258 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_fixed_parameters6270 = new BitSet(new long[]{0x2000100800114000L,0x0000050008004400L,0x4008110800000002L,0x0000000001100030L});
    public static final BitSet FOLLOW_fixed_parameter_in_fixed_parameters6272 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_attributes_in_fixed_parameter6289 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x4008110800000002L,0x0000000001100030L});
    public static final BitSet FOLLOW_parameter_modifier_in_fixed_parameter6292 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_fixed_parameter6295 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_fixed_parameter6297 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_default_argument_in_fixed_parameter6299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arglist_in_fixed_parameter6306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_default_argument6318 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_default_argument6320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_parameter_array6352 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_PARAMS_in_parameter_array6355 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_array_type_in_parameter_array6357 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parameter_array6359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_property_declaration6370 = new BitSet(new long[]{0x2100100800114010L,0x0000010408024400L,0x000C1300000001C4L,0x0000000001980030L});
    public static final BitSet FOLLOW_property_modifiers_in_property_declaration6373 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_property_declaration6376 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_member_name_in_property_declaration6378 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_property_declaration6380 = new BitSet(new long[]{0x0000000000000000L,0x0000040000020400L,0x00000000000000C0L});
    public static final BitSet FOLLOW_accessor_declarations_in_property_declaration6382 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_property_declaration6384 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_modifier_in_property_modifiers6395 = new BitSet(new long[]{0x0100000000000012L,0x0000000400020000L,0x00040200000001C4L,0x0000000000880000L});
    public static final BitSet FOLLOW_NEW_in_property_modifier6407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PUBLIC_in_property_modifier6412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTECTED_in_property_modifier6417 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERNAL_in_property_modifier6422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_property_modifier6427 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_property_modifier6432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VIRTUAL_in_property_modifier6437 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEALED_in_property_modifier6442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OVERRIDE_in_property_modifier6447 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACT_in_property_modifier6452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTERN_in_property_modifier6457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_modifier_unsafe_in_property_modifier6462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_accessor_declarations6478 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020400L,0x00000000000000C0L});
    public static final BitSet FOLLOW_accessor_modifier_in_accessor_declarations6487 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_get_contextual_keyword_in_accessor_declarations6497 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_accessor_body_in_accessor_declarations6499 = new BitSet(new long[]{0x0000000000000002L,0x0000040000020400L,0x00000000000000C0L});
    public static final BitSet FOLLOW_set_accessor_declaration_in_accessor_declarations6501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_contextual_keyword_in_accessor_declarations6510 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_accessor_body_in_accessor_declarations6512 = new BitSet(new long[]{0x0000000000000002L,0x0000040000020400L,0x00000000000000C0L});
    public static final BitSet FOLLOW_get_accessor_declaration_in_accessor_declarations6514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_get_accessor_declaration6533 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020400L,0x00000000000000C0L});
    public static final BitSet FOLLOW_accessor_modifier_in_get_accessor_declaration6536 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_get_contextual_keyword_in_get_accessor_declaration6539 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_accessor_body_in_get_accessor_declaration6541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_set_accessor_declaration6552 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020400L,0x00000000000000C0L});
    public static final BitSet FOLLOW_accessor_modifier_in_set_accessor_declaration6555 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_set_contextual_keyword_in_set_accessor_declaration6558 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_accessor_body_in_set_accessor_declaration6560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTECTED_in_accessor_modifier6571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERNAL_in_accessor_modifier6576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_accessor_modifier6581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTECTED_in_accessor_modifier6586 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_INTERNAL_in_accessor_modifier6588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERNAL_in_accessor_modifier6593 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_PROTECTED_in_accessor_modifier6595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_accessor_body6606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_accessor_body6611 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_event_declaration6625 = new BitSet(new long[]{0x0140000000000010L,0x0000000400020000L,0x00040200000001C4L,0x0000000000880000L});
    public static final BitSet FOLLOW_event_modifiers_in_event_declaration6628 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_EVENT_in_event_declaration6631 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_event_declaration6633 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_variable_declarators_in_event_declaration6641 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_event_declaration6643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_event_declaration6651 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_event_declaration6653 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000400L});
    public static final BitSet FOLLOW_event_accessor_declarations_in_event_declaration6655 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_event_declaration6657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_event_modifier_in_event_modifiers6675 = new BitSet(new long[]{0x0100000000000012L,0x0000000400020000L,0x00040200000001C4L,0x0000000000880000L});
    public static final BitSet FOLLOW_event_modifier_in_event_modifiers6679 = new BitSet(new long[]{0x0100000000000012L,0x0000000400020000L,0x00040200000001C4L,0x0000000000880000L});
    public static final BitSet FOLLOW_NEW_in_event_modifier6693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PUBLIC_in_event_modifier6698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTECTED_in_event_modifier6703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERNAL_in_event_modifier6708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_event_modifier6713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_event_modifier6718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VIRTUAL_in_event_modifier6723 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEALED_in_event_modifier6728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OVERRIDE_in_event_modifier6733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACT_in_event_modifier6738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTERN_in_event_modifier6743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_event_modifier_unsafe_in_event_modifier6748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_event_accessor_declarations6759 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_add_contextual_keyword_in_event_accessor_declarations6767 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_block_in_event_accessor_declarations6769 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000400L});
    public static final BitSet FOLLOW_remove_accessor_declaration_in_event_accessor_declarations6771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_remove_contextual_keyword_in_event_accessor_declarations6778 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_block_in_event_accessor_declarations6780 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000400L});
    public static final BitSet FOLLOW_add_accessor_declaration_in_event_accessor_declarations6782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_add_accessor_declaration6798 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_add_contextual_keyword_in_add_accessor_declaration6801 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_block_in_add_accessor_declaration6803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_remove_accessor_declaration6814 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_remove_contextual_keyword_in_remove_accessor_declaration6817 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_block_in_remove_accessor_declaration6819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_indexer_declaration6830 = new BitSet(new long[]{0x2100100800114010L,0x0000010408024400L,0x00081300000001C4L,0x0000000001980030L});
    public static final BitSet FOLLOW_indexer_modifiers_in_indexer_declaration6833 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_indexer_declarator_in_indexer_declaration6836 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_indexer_declaration6838 = new BitSet(new long[]{0x0000000000000000L,0x0000040000020400L,0x00000000000000C0L});
    public static final BitSet FOLLOW_accessor_declarations_in_indexer_declaration6840 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_indexer_declaration6842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_indexer_modifier_in_indexer_modifiers6853 = new BitSet(new long[]{0x0100000000000012L,0x0000000400020000L,0x00000200000001C4L,0x0000000000880000L});
    public static final BitSet FOLLOW_indexer_modifier_in_indexer_modifiers6857 = new BitSet(new long[]{0x0100000000000012L,0x0000000400020000L,0x00000200000001C4L,0x0000000000880000L});
    public static final BitSet FOLLOW_NEW_in_indexer_modifier6871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PUBLIC_in_indexer_modifier6876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTECTED_in_indexer_modifier6881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERNAL_in_indexer_modifier6886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_indexer_modifier6891 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VIRTUAL_in_indexer_modifier6896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEALED_in_indexer_modifier6901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OVERRIDE_in_indexer_modifier6906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACT_in_indexer_modifier6911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTERN_in_indexer_modifier6916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_indexer_modifier_unsafe_in_indexer_modifier6921 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_indexer_declarator6935 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x4000000000000000L});
    public static final BitSet FOLLOW_interface_type_in_indexer_declarator6938 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_DOT_in_indexer_declarator6940 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_THIS_in_indexer_declarator6944 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_indexer_declarator6946 = new BitSet(new long[]{0x2000100800114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_indexer_declarator6948 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_indexer_declarator6950 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_operator_declaration6962 = new BitSet(new long[]{0x0100000000000000L,0x0000000000000000L,0x0004000000000100L,0x0000000000080000L});
    public static final BitSet FOLLOW_operator_modifiers_in_operator_declaration6965 = new BitSet(new long[]{0x2080100800114000L,0x0000010008005400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_operator_declarator_in_operator_declaration6967 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_operator_body_in_operator_declaration6969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_operator_modifier_in_operator_modifiers6980 = new BitSet(new long[]{0x0100000000000002L,0x0000000000000000L,0x0004000000000100L,0x0000000000080000L});
    public static final BitSet FOLLOW_operator_modifier_in_operator_modifiers6984 = new BitSet(new long[]{0x0100000000000002L,0x0000000000000000L,0x0004000000000100L,0x0000000000080000L});
    public static final BitSet FOLLOW_PUBLIC_in_operator_modifier6998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_operator_modifier7003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTERN_in_operator_modifier7008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_operator_modifier_unsafe_in_operator_modifier7013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unary_operator_declarator_in_operator_declarator7033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_binary_operator_declarator_in_operator_declarator7039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conversion_operator_declarator_in_operator_declarator7045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_unary_operator_declarator7057 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_OPERATOR_in_unary_operator_declarator7059 = new BitSet(new long[]{0x0400000000000800L,0x0022000100000000L,0x0000000000000020L,0x0000000000000003L});
    public static final BitSet FOLLOW_overloadable_unary_operator_in_unary_operator_declarator7061 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_unary_operator_declarator7063 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_unary_operator_declarator7065 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_unary_operator_declarator7067 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_unary_operator_declarator7069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_binary_operator_declarator7126 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_OPERATOR_in_binary_operator_declarator7128 = new BitSet(new long[]{0x0000020000022020L,0x08D8000110000020L,0x0002000000000030L});
    public static final BitSet FOLLOW_overloadable_binary_operator_in_binary_operator_declarator7130 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_binary_operator_declarator7132 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_binary_operator_declarator7134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_binary_operator_declarator7136 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_COMMA_in_binary_operator_declarator7138 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_binary_operator_declarator7140 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_binary_operator_declarator7142 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_binary_operator_declarator7144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_overloadable_binary_operator7155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MINUS_in_overloadable_binary_operator7160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STAR_in_overloadable_binary_operator7165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIV_in_overloadable_binary_operator7170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PERCENT_in_overloadable_binary_operator7175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AMP_in_overloadable_binary_operator7180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BITWISE_OR_in_overloadable_binary_operator7185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CARET_in_overloadable_binary_operator7190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_LEFT_SHIFT_in_overloadable_binary_operator7195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_right_shift_in_overloadable_binary_operator7200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_EQ_in_overloadable_binary_operator7205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_NE_in_overloadable_binary_operator7210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GT_in_overloadable_binary_operator7215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LT_in_overloadable_binary_operator7220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_GE_in_overloadable_binary_operator7225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_LE_in_overloadable_binary_operator7230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_overloadable_operator7244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MINUS_in_overloadable_operator7250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BANG_in_overloadable_operator7256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TILDE_in_overloadable_operator7262 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_INC_in_overloadable_operator7268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_DEC_in_overloadable_operator7274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TRUE_in_overloadable_operator7280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FALSE_in_overloadable_operator7286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STAR_in_overloadable_operator7292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIV_in_overloadable_operator7298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PERCENT_in_overloadable_operator7304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AMP_in_overloadable_operator7310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BITWISE_OR_in_overloadable_operator7316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CARET_in_overloadable_operator7322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_LEFT_SHIFT_in_overloadable_operator7328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_right_shift_in_overloadable_operator7334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_EQ_in_overloadable_operator7340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_NE_in_overloadable_operator7346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GT_in_overloadable_operator7352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LT_in_overloadable_operator7358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_GE_in_overloadable_operator7364 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OP_LE_in_overloadable_operator7370 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPLICIT_in_conversion_operator_declarator7383 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_OPERATOR_in_conversion_operator_declarator7385 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_conversion_operator_declarator7387 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_conversion_operator_declarator7389 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_conversion_operator_declarator7391 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_conversion_operator_declarator7393 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_conversion_operator_declarator7395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXPLICIT_in_conversion_operator_declarator7400 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_OPERATOR_in_conversion_operator_declarator7402 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_conversion_operator_declarator7404 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_conversion_operator_declarator7406 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_conversion_operator_declarator7408 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_conversion_operator_declarator7410 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_conversion_operator_declarator7412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_operator_body7423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_operator_body7428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_constructor_declaration7439 = new BitSet(new long[]{0x0100000000000000L,0x0000000000020400L,0x00000000000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_constructor_modifiers_in_constructor_declaration7442 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_constructor_declarator_in_constructor_declaration7445 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_constructor_body_in_constructor_declaration7447 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_modifier_in_constructor_modifiers7458 = new BitSet(new long[]{0x0100000000000002L,0x0000000000020000L,0x00000000000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_PUBLIC_in_constructor_modifier7470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTECTED_in_constructor_modifier7475 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERNAL_in_constructor_modifier7480 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_constructor_modifier7485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTERN_in_constructor_modifier7490 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_modifier_unsafe_in_constructor_modifier7495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_constructor_declarator7506 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_constructor_declarator7508 = new BitSet(new long[]{0x2000100804114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_constructor_declarator7510 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_constructor_declarator7513 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_constructor_initializer_in_constructor_declarator7515 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COLON_in_constructor_initializer7527 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_BASE_in_constructor_initializer7529 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_constructor_initializer7531 = new BitSet(new long[]{0x2400106804715820L,0x002209250800C400L,0x401A910C00000022L,0x000000000010007BL});
    public static final BitSet FOLLOW_argument_list_in_constructor_initializer7533 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_constructor_initializer7536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COLON_in_constructor_initializer7541 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_THIS_in_constructor_initializer7543 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_constructor_initializer7545 = new BitSet(new long[]{0x2400106804715820L,0x002209250800C400L,0x401A910C00000022L,0x000000000010007BL});
    public static final BitSet FOLLOW_argument_list_in_constructor_initializer7547 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_constructor_initializer7550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_constructor_body7561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_constructor_body7566 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_static_constructor_declaration7577 = new BitSet(new long[]{0x0100000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_static_constructor_modifiers_in_static_constructor_declaration7580 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_static_constructor_declaration7582 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_static_constructor_declaration7584 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_static_constructor_declaration7586 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_static_constructor_body_in_static_constructor_declaration7588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_static_constructor_modifiers_unsafe_in_static_constructor_modifiers7602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_static_constructor_body7614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_static_constructor_body7619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_destructor_declaration_unsafe_in_destructor_declaration7632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_destructor_body7643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_destructor_body7648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_body7660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_body7666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_struct_declaration7680 = new BitSet(new long[]{0x0000000000000000L,0x0000000400020400L,0x00200000000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_struct_modifiers_in_struct_declaration7683 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0020000000000000L});
    public static final BitSet FOLLOW_partial_contextual_keyword_in_struct_declaration7686 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_STRUCT_in_struct_declaration7689 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_struct_declaration7691 = new BitSet(new long[]{0x0000000008000000L,0x0000020010000400L});
    public static final BitSet FOLLOW_type_parameter_list_in_struct_declaration7693 = new BitSet(new long[]{0x0000000008000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_struct_interfaces_in_struct_declaration7696 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_struct_declaration7699 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_struct_body_in_struct_declaration7702 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_struct_declaration7704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_modifier_in_struct_modifiers7716 = new BitSet(new long[]{0x0000000000000002L,0x0000000400020000L,0x00000000000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_struct_modifier_in_struct_modifiers7720 = new BitSet(new long[]{0x0000000000000002L,0x0000000400020000L,0x00000000000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_NEW_in_struct_modifier7734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PUBLIC_in_struct_modifier7739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTECTED_in_struct_modifier7744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERNAL_in_struct_modifier7749 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_struct_modifier7754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_modifier_unsafe_in_struct_modifier7759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COLON_in_struct_interfaces7770 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_interface_type_list_in_struct_interfaces7772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_struct_body7783 = new BitSet(new long[]{0x31E0104821914010L,0x0000050408035400L,0x002C1302000001C4L,0x0000000003980030L});
    public static final BitSet FOLLOW_struct_member_declarations_in_struct_body7785 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_struct_body7788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_member_declaration_in_struct_member_declarations7799 = new BitSet(new long[]{0x31E0104820914012L,0x0000050408035400L,0x002C1302000001C4L,0x0000000003980030L});
    public static final BitSet FOLLOW_struct_member_declaration_in_struct_member_declarations7803 = new BitSet(new long[]{0x31E0104820914012L,0x0000050408035400L,0x002C1302000001C4L,0x0000000003980030L});
    public static final BitSet FOLLOW_attributes_in_struct_member_declaration7819 = new BitSet(new long[]{0x31E0104820914010L,0x0000010408035400L,0x002C1302000001C4L,0x0000000003980030L});
    public static final BitSet FOLLOW_all_member_modifiers_in_struct_member_declaration7822 = new BitSet(new long[]{0x30E0104820914000L,0x0000010008015400L,0x0028110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_common_member_declaration_in_struct_member_declaration7829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FIXED_in_struct_member_declaration7835 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_buffer_element_type_in_struct_member_declaration7837 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_fixed_size_buffer_declarators_in_struct_member_declaration7839 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_struct_member_declaration7841 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_base_type_in_array_type7861 = new BitSet(new long[]{0x0000000000000000L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_rank_specifier_in_array_type7873 = new BitSet(new long[]{0x0000000000000002L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_base_type_in_non_array_type7890 = new BitSet(new long[]{0x0000000000000002L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_rank_specifier_in_non_array_type7893 = new BitSet(new long[]{0x0000000000000002L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_INTERR_in_non_array_type7897 = new BitSet(new long[]{0x0000000000000002L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_STAR_in_non_array_type7901 = new BitSet(new long[]{0x0000000000000002L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_rank_specifier_in_rank_specifiers7919 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_rank_specifier7934 = new BitSet(new long[]{0x0000000012000000L});
    public static final BitSet FOLLOW_dim_separators_in_rank_specifier7936 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_rank_specifier7939 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMMA_in_dim_separators7950 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_dim_separators7954 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_array_initializer7973 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_array_initializer7975 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_array_initializer7981 = new BitSet(new long[]{0x2400106800715820L,0x00220B250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_variable_initializer_list_in_array_initializer7983 = new BitSet(new long[]{0x0000000011000000L});
    public static final BitSet FOLLOW_COMMA_in_array_initializer7985 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_array_initializer7988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_initializer_in_variable_initializer_list8000 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_variable_initializer_list8004 = new BitSet(new long[]{0x2400106800715820L,0x00220B250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_variable_initializer_in_variable_initializer_list8007 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_attributes_in_interface_declaration8022 = new BitSet(new long[]{0x0000000000000000L,0x0000000400030400L,0x00000000000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_interface_modifiers_in_interface_declaration8025 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010400L});
    public static final BitSet FOLLOW_partial_contextual_keyword_in_interface_declaration8028 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_INTERFACE_in_interface_declaration8031 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_interface_declaration8033 = new BitSet(new long[]{0x0000000008000000L,0x0000020010000400L});
    public static final BitSet FOLLOW_variant_type_parameter_list_in_interface_declaration8035 = new BitSet(new long[]{0x0000000008000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_interface_base_in_interface_declaration8038 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_declaration8041 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_interface_body_in_interface_declaration8044 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interface_declaration8046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_modifier_in_interface_modifiers8058 = new BitSet(new long[]{0x0000000000000002L,0x0000000400020000L,0x00000000000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_interface_modifier_in_interface_modifiers8062 = new BitSet(new long[]{0x0000000000000002L,0x0000000400020000L,0x00000000000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_NEW_in_interface_modifier8076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PUBLIC_in_interface_modifier8081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTECTED_in_interface_modifier8086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERNAL_in_interface_modifier8091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_interface_modifier8096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_modifier_unsafe_in_interface_modifier8101 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LT_in_variant_type_parameter_list8112 = new BitSet(new long[]{0x0000000000000000L,0x0000040000002400L,0x0000000000000002L});
    public static final BitSet FOLLOW_variant_type_parameters_in_variant_type_parameter_list8114 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_GT_in_variant_type_parameter_list8116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_variant_type_parameters8127 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002400L,0x0000000000000002L});
    public static final BitSet FOLLOW_variance_annotation_in_variant_type_parameters8130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_type_parameter_in_variant_type_parameters8133 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_variant_type_parameters8137 = new BitSet(new long[]{0x0000000000000000L,0x0000040000002400L,0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_variant_type_parameters8140 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002400L,0x0000000000000002L});
    public static final BitSet FOLLOW_variance_annotation_in_variant_type_parameters8144 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_type_parameter_in_variant_type_parameters8148 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COLON_in_interface_base8178 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_interface_type_list_in_interface_base8180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_interface_body8191 = new BitSet(new long[]{0x2040100801114000L,0x0000050408004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_interface_member_declarations_in_interface_body8193 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_interface_body8196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_member_declaration_in_interface_member_declarations8207 = new BitSet(new long[]{0x2040100800114002L,0x0000050408004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_attributes_in_interface_member_declaration8222 = new BitSet(new long[]{0x2040100800114000L,0x0000010408004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_NEW_in_interface_member_declaration8225 = new BitSet(new long[]{0x2040100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_interface_member_declaration8234 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x4000000000000000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_interface_member_declaration8244 = new BitSet(new long[]{0x0000000000000000L,0x0000080010000000L});
    public static final BitSet FOLLOW_type_parameter_list_in_interface_member_declaration8246 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_interface_member_declaration8249 = new BitSet(new long[]{0x2000100804114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_interface_member_declaration8251 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_interface_member_declaration8254 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000040000000000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_member_declaration8256 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interface_member_declaration8259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_interface_member_declaration8269 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_interface_member_declaration8271 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000400L});
    public static final BitSet FOLLOW_interface_accessors_in_interface_member_declaration8273 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_interface_member_declaration8275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THIS_in_interface_member_declaration8285 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_interface_member_declaration8287 = new BitSet(new long[]{0x2000100800114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_interface_member_declaration8289 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_interface_member_declaration8291 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_interface_member_declaration8293 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000400L});
    public static final BitSet FOLLOW_interface_accessors_in_interface_member_declaration8295 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_interface_member_declaration8297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_in_interface_member_declaration8313 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_interface_member_declaration8315 = new BitSet(new long[]{0x0000000000000000L,0x0000080010000000L});
    public static final BitSet FOLLOW_type_parameter_list_in_interface_member_declaration8317 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_interface_member_declaration8320 = new BitSet(new long[]{0x2000100804114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_interface_member_declaration8322 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_interface_member_declaration8325 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000040000000000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_member_declaration8327 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interface_member_declaration8330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EVENT_in_interface_member_declaration8338 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_interface_member_declaration8340 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_interface_member_declaration8342 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interface_member_declaration8344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_interface_method_declaration8362 = new BitSet(new long[]{0x2000100800114000L,0x0000010408004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_NEW_in_interface_method_declaration8365 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_return_type_in_interface_method_declaration8368 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_interface_method_declaration8370 = new BitSet(new long[]{0x0000000000000000L,0x0000080010000000L});
    public static final BitSet FOLLOW_type_parameter_list_in_interface_method_declaration8372 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_interface_method_declaration8375 = new BitSet(new long[]{0x2000100804114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_interface_method_declaration8377 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_interface_method_declaration8380 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000040000000000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_method_declaration8382 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interface_method_declaration8385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_interface_property_declaration8396 = new BitSet(new long[]{0x2000100800114000L,0x0000010408004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_NEW_in_interface_property_declaration8399 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_interface_property_declaration8402 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_interface_property_declaration8404 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_interface_property_declaration8406 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000400L});
    public static final BitSet FOLLOW_interface_accessors_in_interface_property_declaration8408 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_interface_property_declaration8410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_interface_accessors8424 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_get_contextual_keyword_in_interface_accessors8433 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interface_accessors8435 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000400L});
    public static final BitSet FOLLOW_attributes_in_interface_accessors8438 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_set_contextual_keyword_in_interface_accessors8441 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interface_accessors8443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_contextual_keyword_in_interface_accessors8453 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interface_accessors8455 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000400L});
    public static final BitSet FOLLOW_attributes_in_interface_accessors8458 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_get_contextual_keyword_in_interface_accessors8461 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interface_accessors8463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_interface_event_declaration8483 = new BitSet(new long[]{0x0040000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_NEW_in_interface_event_declaration8486 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_EVENT_in_interface_event_declaration8489 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_interface_event_declaration8491 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_interface_event_declaration8493 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interface_event_declaration8495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_interface_indexer_declaration8506 = new BitSet(new long[]{0x2000100800114000L,0x0000010408004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_NEW_in_interface_indexer_declaration8509 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_interface_indexer_declaration8512 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_THIS_in_interface_indexer_declaration8514 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_interface_indexer_declaration8516 = new BitSet(new long[]{0x2000100800114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_interface_indexer_declaration8518 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_interface_indexer_declaration8520 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_interface_indexer_declaration8522 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000400L});
    public static final BitSet FOLLOW_interface_accessors_in_interface_indexer_declaration8524 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_interface_indexer_declaration8526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_enum_declaration8540 = new BitSet(new long[]{0x0020000000000000L,0x0000000400020000L,0x00000000000001C0L});
    public static final BitSet FOLLOW_enum_modifiers_in_enum_declaration8543 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_ENUM_in_enum_declaration8546 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_enum_declaration8548 = new BitSet(new long[]{0x0000000008000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_enum_base_in_enum_declaration8550 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_enum_body_in_enum_declaration8553 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_enum_declaration8555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COLON_in_enum_base8567 = new BitSet(new long[]{0x0000000000110000L,0x0000000008004000L,0x0000110000000000L,0x0000000000100030L});
    public static final BitSet FOLLOW_integral_type_in_enum_base8569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_enum_body8583 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_enum_body8585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_enum_body8591 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000400L});
    public static final BitSet FOLLOW_enum_member_declarations_in_enum_body8593 = new BitSet(new long[]{0x0000000011000000L});
    public static final BitSet FOLLOW_COMMA_in_enum_body8595 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_enum_body8598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_modifier_in_enum_modifiers8610 = new BitSet(new long[]{0x0000000000000002L,0x0000000400020000L,0x00000000000001C0L});
    public static final BitSet FOLLOW_enum_member_declaration_in_enum_member_declarations8653 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_enum_member_declarations8657 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000400L});
    public static final BitSet FOLLOW_enum_member_declaration_in_enum_member_declarations8660 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_attributes_in_enum_member_declaration8677 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_enum_member_declaration8680 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_enum_member_declaration8683 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_constant_expression_in_enum_member_declaration8685 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_delegate_declaration8701 = new BitSet(new long[]{0x0000004000000000L,0x0000000400020000L,0x00000000000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_delegate_modifiers_in_delegate_declaration8704 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_DELEGATE_in_delegate_declaration8707 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_return_type_in_delegate_declaration8709 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_delegate_declaration8711 = new BitSet(new long[]{0x0000000000000000L,0x0000080010000000L});
    public static final BitSet FOLLOW_variant_type_parameter_list_in_delegate_declaration8713 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_delegate_declaration8722 = new BitSet(new long[]{0x2000100804114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_delegate_declaration8724 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_delegate_declaration8727 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000040000000000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_delegate_declaration8729 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_delegate_declaration8732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_modifier_in_delegate_modifiers8743 = new BitSet(new long[]{0x0000000000000002L,0x0000000400020000L,0x00000000000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_delegate_modifier_in_delegate_modifiers8747 = new BitSet(new long[]{0x0000000000000002L,0x0000000400020000L,0x00000000000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_NEW_in_delegate_modifier8761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PUBLIC_in_delegate_modifier8766 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTECTED_in_delegate_modifier8771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERNAL_in_delegate_modifier8776 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_delegate_modifier8781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_modifier_unsafe_in_delegate_modifier8786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_global_attribute_sections_in_global_attributes8801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_global_attribute_section_in_global_attribute_sections8812 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_global_attribute_section8827 = new BitSet(new long[]{0xFDF0146860DDD050L,0x000011260C0B7C10L,0xC06D931A000001CEL,0x0000000013B8007EL});
    public static final BitSet FOLLOW_global_attribute_target_specifier_in_global_attribute_section8829 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_attribute_list_in_global_attribute_section8831 = new BitSet(new long[]{0x0000000012000000L});
    public static final BitSet FOLLOW_COMMA_in_global_attribute_section8833 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_global_attribute_section8836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_global_attribute_target_in_global_attribute_target_specifier8848 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_COLON_in_global_attribute_target_specifier8850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyword_in_global_attribute_target8862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_global_attribute_target8868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attribute_sections_in_attributes8882 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attribute_section_in_attribute_sections8893 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_attribute_section8908 = new BitSet(new long[]{0xFDF0146860DDD050L,0x000011260C0B7C10L,0xC06D931A000001CEL,0x0000000013B8007EL});
    public static final BitSet FOLLOW_attribute_target_specifier_in_attribute_section8910 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_attribute_list_in_attribute_section8913 = new BitSet(new long[]{0x0000000012000000L});
    public static final BitSet FOLLOW_COMMA_in_attribute_section8915 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_attribute_section8918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attribute_target_in_attribute_target_specifier8930 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_COLON_in_attribute_target_specifier8932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyword_in_attribute_target8944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_attribute_target8950 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attribute_in_attribute_list8964 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_attribute_list8968 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_attribute_in_attribute_list8971 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_attribute_name_in_attribute8985 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_attribute_arguments_in_attribute8987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_name_in_attribute_name8999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_attribute_arguments9016 = new BitSet(new long[]{0x2400106804715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_positional_argument_list_in_attribute_arguments9018 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_attribute_arguments9021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_positional_argument_in_positional_argument_list9035 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_positional_argument_list9044 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_positional_argument_in_positional_argument_list9049 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_attribute_argument_expression_in_positional_argument9065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_named_argument_in_named_argument_list9078 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_named_argument_list9082 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_named_argument_in_named_argument_list9085 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_named_argument9101 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_named_argument9103 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_attribute_argument_expression_in_named_argument9105 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_attribute_argument_expression9116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_class_modifier_unsafe9130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_struct_modifier_unsafe9141 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_interface_modifier_unsafe9152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_delegate_modifier_unsafe9163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_field_modifier_unsafe9174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_method_modifier_unsafe9185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_property_modifier_unsafe9196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_event_modifier_unsafe9207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_indexer_modifier_unsafe9218 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_operator_modifier_unsafe9229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_constructor_modifier_unsafe9240 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_destructor_declaration_unsafe9254 = new BitSet(new long[]{0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080001L});
    public static final BitSet FOLLOW_EXTERN_in_destructor_declaration_unsafe9263 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080001L});
    public static final BitSet FOLLOW_UNSAFE_in_destructor_declaration_unsafe9266 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_UNSAFE_in_destructor_declaration_unsafe9275 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_EXTERN_in_destructor_declaration_unsafe9277 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_TILDE_in_destructor_declaration_unsafe9291 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_destructor_declaration_unsafe9293 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_destructor_declaration_unsafe9295 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_destructor_declaration_unsafe9297 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_destructor_body_in_destructor_declaration_unsafe9299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTERN_in_static_constructor_modifiers_unsafe9329 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_UNSAFE_in_static_constructor_modifiers_unsafe9331 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_static_constructor_modifiers_unsafe9339 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_EXTERN_in_static_constructor_modifiers_unsafe9341 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTERN_in_static_constructor_modifiers_unsafe9349 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9351 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_UNSAFE_in_static_constructor_modifiers_unsafe9353 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_static_constructor_modifiers_unsafe9359 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9361 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_EXTERN_in_static_constructor_modifiers_unsafe9363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9369 = new BitSet(new long[]{0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_set_in_static_constructor_modifiers_unsafe9371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9383 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_EXTERN_in_static_constructor_modifiers_unsafe9385 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_UNSAFE_in_static_constructor_modifiers_unsafe9387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_static_constructor_modifiers_unsafe9393 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_UNSAFE_in_static_constructor_modifiers_unsafe9395 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_EXTERN_in_static_constructor_modifiers_unsafe9397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unsafe_statement_in_embedded_statement_unsafe9411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fixed_statement_in_embedded_statement_unsafe9416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNSAFE_in_unsafe_statement9427 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_block_in_unsafe_statement9429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pointer_type_in_type_unsafe9440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_simple_type_in_pointer_type9462 = new BitSet(new long[]{0x0000000000000000L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_class_type_in_pointer_type9469 = new BitSet(new long[]{0x0000000000000000L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_VOID_in_pointer_type9476 = new BitSet(new long[]{0x0000000000000000L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_rank_specifier_in_pointer_type9490 = new BitSet(new long[]{0x0000000000000000L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_INTERR_in_pointer_type9502 = new BitSet(new long[]{0x0000000000000000L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_STAR_in_pointer_type9510 = new BitSet(new long[]{0x0000000000000000L,0x0000040000040000L,0x0002000000000000L});
    public static final BitSet FOLLOW_STAR_in_pointer_type9521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_unmanaged_type9544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_expression_in_primary_no_array_creation_expression_unsafe9557 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pointer_indirection_expression_in_unary_expression_unsafe9570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_addressof_expression_in_unary_expression_unsafe9575 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STAR_in_pointer_indirection_expression9586 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_unary_expression_in_pointer_indirection_expression9588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AMP_in_addressof_expression9605 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_unary_expression_in_addressof_expression9607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SIZEOF_in_sizeof_expression9618 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_sizeof_expression9620 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_unmanaged_type_in_sizeof_expression9622 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_sizeof_expression9624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FIXED_in_fixed_statement9635 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_fixed_statement9637 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_pointer_type_in_fixed_statement9639 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_fixed_pointer_declarators_in_fixed_statement9641 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_fixed_statement9643 = new BitSet(new long[]{0xF40014684071D820L,0x00220B250C00CC10L,0xC05A951400000020L,0x000000001038007FL});
    public static final BitSet FOLLOW_embedded_statement_in_fixed_statement9645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators9656 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COMMA_in_fixed_pointer_declarators9660 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators9663 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_fixed_pointer_declarator9677 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_fixed_pointer_declarator9679 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator9681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AMP_in_fixed_pointer_initializer9701 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_variable_reference_in_fixed_pointer_initializer9703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_fixed_pointer_initializer9709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fixed_size_buffer_declaration_in_struct_member_declaration_unsafe9721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_fixed_size_buffer_declaration9732 = new BitSet(new long[]{0x1000000000000000L,0x0000000400020000L,0x00000000000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_fixed_size_buffer_modifiers_in_fixed_size_buffer_declaration9735 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_FIXED_in_fixed_size_buffer_declaration9738 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_buffer_element_type_in_fixed_size_buffer_declaration9740 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_fixed_size_buffer_declarators_in_fixed_size_buffer_declaration9742 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_fixed_size_buffer_declaration9744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fixed_size_buffer_modifier_in_fixed_size_buffer_modifiers9755 = new BitSet(new long[]{0x0000000000000002L,0x0000000400020000L,0x00000000000001C0L,0x0000000000080000L});
    public static final BitSet FOLLOW_type_in_buffer_element_type9803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fixed_size_buffer_declarator_in_fixed_size_buffer_declarators9814 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_fixed_size_buffer_declarator9826 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_fixed_size_buffer_declarator9828 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_constant_expression_in_fixed_size_buffer_declarator9830 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_fixed_size_buffer_declarator9832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stackalloc_initializer_in_local_variable_initializer_unsafe9845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STACKALLOC_in_stackalloc_initializer9856 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_unmanaged_type_in_stackalloc_initializer9858 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_stackalloc_initializer9860 = new BitSet(new long[]{0x2400106800715820L,0x002209250800C400L,0x401A910400000020L,0x000000000010007BL});
    public static final BitSet FOLLOW_expression_in_stackalloc_initializer9862 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CLOSE_BRACKET_in_stackalloc_initializer9864 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_from_contextual_keyword9886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_let_contextual_keyword9900 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_where_contextual_keyword9914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_join_contextual_keyword9928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_on_contextual_keyword9942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_equals_contextual_keyword9956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_into_contextual_keyword9970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_orderby_contextual_keyword9984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_ascending_contextual_keyword9998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_descending_contextual_keyword10012 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_select_contextual_keyword10026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_group_contextual_keyword10040 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_by_contextual_keyword10054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_partial_contextual_keyword10068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_alias_contextual_keyword10082 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_yield_contextual_keyword10096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_get_contextual_keyword10110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_set_contextual_keyword10124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_add_contextual_keyword10138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_remove_contextual_keyword10152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_dynamic_contextual_keyword10166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_arglist10180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_right_arrow10194 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_GT_in_right_arrow10198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GT_in_right_shift10215 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_GT_in_right_shift10219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GT_in_right_shift_assignment10236 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_OP_GE_in_right_shift_assignment10240 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_boolean_literal_in_literal10255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_LITERAL_in_literal10261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REAL_LITERAL_in_literal10267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARACTER_LITERAL_in_literal10273 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_literal10279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NULL_in_literal10285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_in_class_definition10787 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_class_definition10789 = new BitSet(new long[]{0x0000000008000000L,0x0000020010000400L});
    public static final BitSet FOLLOW_type_parameter_list_in_class_definition10791 = new BitSet(new long[]{0x0000000008000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_class_base_in_class_definition10794 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_class_definition10797 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_class_body_in_class_definition10806 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_class_definition10808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRUCT_in_struct_definition10821 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_struct_definition10823 = new BitSet(new long[]{0x0000000008000000L,0x0000020010000400L});
    public static final BitSet FOLLOW_type_parameter_list_in_struct_definition10825 = new BitSet(new long[]{0x0000000008000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_struct_interfaces_in_struct_definition10828 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_struct_definition10831 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_struct_body_in_struct_definition10840 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_struct_definition10842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_in_interface_definition10855 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_interface_definition10857 = new BitSet(new long[]{0x0000000008000000L,0x0000020010000400L});
    public static final BitSet FOLLOW_variant_type_parameter_list_in_interface_definition10859 = new BitSet(new long[]{0x0000000008000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_interface_base_in_interface_definition10862 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000400L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_definition10871 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_interface_body_in_interface_definition10874 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interface_definition10876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ENUM_in_enum_definition10889 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_enum_definition10891 = new BitSet(new long[]{0x0000000008000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_enum_base_in_enum_definition10893 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_enum_body_in_enum_definition10896 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_enum_definition10898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELEGATE_in_delegate_definition10911 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_return_type_in_delegate_definition10913 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_delegate_definition10915 = new BitSet(new long[]{0x0000000000000000L,0x0000080010000000L});
    public static final BitSet FOLLOW_variant_type_parameter_list_in_delegate_definition10917 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_delegate_definition10920 = new BitSet(new long[]{0x2000100804114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_delegate_definition10928 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_delegate_definition10931 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000040000000000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_delegate_definition10933 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_delegate_definition10936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_member_name_in_method_definition10948 = new BitSet(new long[]{0x0000000000000000L,0x0000080010000000L});
    public static final BitSet FOLLOW_type_parameter_list_in_method_definition10950 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_method_definition10953 = new BitSet(new long[]{0x2000100804114000L,0x0000050008004400L,0x400811080000000AL,0x0000000001100030L});
    public static final BitSet FOLLOW_formal_parameter_list_in_method_definition10955 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_method_definition10958 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000400L,0x0000040000000000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_method_definition10967 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_method_body_in_method_definition10970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_method_member_name10985 = new BitSet(new long[]{0x0000080000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_method_member_name10993 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_DOUBLE_COLON_in_method_member_name10995 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_method_member_name10997 = new BitSet(new long[]{0x0000080000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_type_argument_list_opt_in_method_member_name11006 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_DOT_in_method_member_name11008 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_method_member_name11010 = new BitSet(new long[]{0x0000080000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_variable_declarators_in_field_declaration211025 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_field_declaration211027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_property_declaration211039 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_property_declaration211041 = new BitSet(new long[]{0x0000000000000000L,0x0000040000020400L,0x00000000000000C0L});
    public static final BitSet FOLLOW_accessor_declarations_in_property_declaration211043 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_CLOSE_BRACE_in_property_declaration211045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CONST_in_constant_declaration211057 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_constant_declaration211059 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_constant_declarators_in_constant_declaration211061 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_constant_declaration211063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPERATOR_in_operator_declaration211076 = new BitSet(new long[]{0x0400020000022820L,0x08FA000110000020L,0x0002000000000030L,0x0000000000000003L});
    public static final BitSet FOLLOW_overloadable_operator_in_operator_declaration211078 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_operator_declaration211080 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_operator_declaration211082 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_operator_declaration211084 = new BitSet(new long[]{0x0000000014000000L});
    public static final BitSet FOLLOW_COMMA_in_operator_declaration211096 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004400L,0x0008110000000000L,0x0000000001100030L});
    public static final BitSet FOLLOW_type_in_operator_declaration211098 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_operator_declaration211100 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_operator_declaration211104 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_operator_body_in_operator_declaration211106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOT_in_member_access211119 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_member_access211121 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_type_argument_list_opt_in_member_access211123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_method_invocation211135 = new BitSet(new long[]{0x2400106804715820L,0x002209250800C400L,0x401A910C00000022L,0x000000000010007BL});
    public static final BitSet FOLLOW_argument_list_in_method_invocation211137 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_method_invocation211140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_object_creation_expression211152 = new BitSet(new long[]{0x2400106804715820L,0x002209250800C400L,0x401A910C00000022L,0x000000000010007BL});
    public static final BitSet FOLLOW_argument_list_in_object_creation_expression211154 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_CLOSE_PARENS_in_object_creation_expression211157 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression211159 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_argument_list_in_synpred1_CSharp4133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERR_in_synpred2_CSharp4169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rank_specifier_in_synpred3_CSharp4183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rank_specifier_in_synpred4_CSharp4377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_array_type_in_synpred5_CSharp41453 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_OPEN_BRACKET_in_synpred5_CSharp41455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unbound_type_name_in_synpred6_CSharp41644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_scan_for_cast_generic_precedence_in_synpred7_CSharp41848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_synpred7_CSharp41852 = new BitSet(new long[]{0x2000100800114000L,0x0000010008004000L,0x0008110000000000L,0x0000000000100030L});
    public static final BitSet FOLLOW_predefined_type_in_synpred7_CSharp41854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERR_in_synpred8_CSharp42718 = new BitSet(new long[]{0x0000000004000000L,0x1000400000040000L});
    public static final BitSet FOLLOW_is_disambiguation_token_in_synpred8_CSharp42720 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_synpred9_CSharp43178 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred9_CSharp43180 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_IN_in_synpred9_CSharp43182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_into_contextual_keyword_in_synpred10_CSharp43216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignment_in_synpred11_CSharp43625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lambda_expression_in_synpred12_CSharp43646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_query_expression_in_synpred13_CSharp43657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_labeled_statement_in_synpred14_CSharp43703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_statement_in_synpred15_CSharp43714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_in_synpred16_CSharp44054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declaration_in_synpred17_CSharp44281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declaration_in_synpred18_CSharp44674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_global_attribute_section_in_synpred19_CSharp44742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_type_in_synpred20_CSharp45815 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_DOT_in_synpred20_CSharp45817 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_THIS_in_synpred20_CSharp45819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_synpred21_CSharp45857 = new BitSet(new long[]{0x0000000000000000L,0x0000080010000000L});
    public static final BitSet FOLLOW_type_parameter_list_in_synpred21_CSharp45859 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_OPEN_PARENS_in_synpred21_CSharp45862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_synpred22_CSharp45876 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_OPEN_BRACE_in_synpred22_CSharp45878 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_synpred23_CSharp46216 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_PARAMS_in_synpred23_CSharp46219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMMA_in_synpred24_CSharp46235 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_parameter_array_in_synpred24_CSharp46237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMMA_in_synpred25_CSharp46263 = new BitSet(new long[]{0x2000100800114000L,0x0000050008004400L,0x4008110800000002L,0x0000000001100030L});
    public static final BitSet FOLLOW_fixed_parameter_in_synpred25_CSharp46265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unary_operator_declarator_in_synpred26_CSharp47028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AMP_in_synpred27_CSharp49696 = new BitSet(new long[]{0x0000000000000002L});

}